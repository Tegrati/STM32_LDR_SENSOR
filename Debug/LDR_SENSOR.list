
LDR_SENSOR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006c50  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000494  08006d10  08006d10  00016d10  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080071a4  080071a4  000201dc  2**0
                  CONTENTS
  4 .ARM          00000008  080071a4  080071a4  000171a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080071ac  080071ac  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080071ac  080071ac  000171ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080071b0  080071b0  000171b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  080071b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000a0  200001dc  08007390  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000027c  08007390  0002027c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005168  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000013b1  00000000  00000000  0002536c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000588  00000000  00000000  00026720  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000004d0  00000000  00000000  00026ca8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000140be  00000000  00000000  00027178  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00006c42  00000000  00000000  0003b236  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00077be3  00000000  00000000  00041e78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000b9a5b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002308  00000000  00000000  000b9aac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001dc 	.word	0x200001dc
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08006cf8 	.word	0x08006cf8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e0 	.word	0x200001e0
 8000104:	08006cf8 	.word	0x08006cf8

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f827 	bl	8001490 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 ff77 	bl	8001340 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f819 	bl	8001490 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f80f 	bl	8001490 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 ff9f 	bl	80013c4 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 ff95 	bl	80013c4 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_uldivmod>:
 80004a8:	2b00      	cmp	r3, #0
 80004aa:	d111      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004ac:	2a00      	cmp	r2, #0
 80004ae:	d10f      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004b0:	2900      	cmp	r1, #0
 80004b2:	d100      	bne.n	80004b6 <__aeabi_uldivmod+0xe>
 80004b4:	2800      	cmp	r0, #0
 80004b6:	d002      	beq.n	80004be <__aeabi_uldivmod+0x16>
 80004b8:	2100      	movs	r1, #0
 80004ba:	43c9      	mvns	r1, r1
 80004bc:	0008      	movs	r0, r1
 80004be:	b407      	push	{r0, r1, r2}
 80004c0:	4802      	ldr	r0, [pc, #8]	; (80004cc <__aeabi_uldivmod+0x24>)
 80004c2:	a102      	add	r1, pc, #8	; (adr r1, 80004cc <__aeabi_uldivmod+0x24>)
 80004c4:	1840      	adds	r0, r0, r1
 80004c6:	9002      	str	r0, [sp, #8]
 80004c8:	bd03      	pop	{r0, r1, pc}
 80004ca:	46c0      	nop			; (mov r8, r8)
 80004cc:	ffffff5d 	.word	0xffffff5d
 80004d0:	b403      	push	{r0, r1}
 80004d2:	4668      	mov	r0, sp
 80004d4:	b501      	push	{r0, lr}
 80004d6:	9802      	ldr	r0, [sp, #8]
 80004d8:	f000 f834 	bl	8000544 <__udivmoddi4>
 80004dc:	9b01      	ldr	r3, [sp, #4]
 80004de:	469e      	mov	lr, r3
 80004e0:	b002      	add	sp, #8
 80004e2:	bc0c      	pop	{r2, r3}
 80004e4:	4770      	bx	lr
 80004e6:	46c0      	nop			; (mov r8, r8)

080004e8 <__aeabi_lmul>:
 80004e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ea:	46ce      	mov	lr, r9
 80004ec:	4647      	mov	r7, r8
 80004ee:	b580      	push	{r7, lr}
 80004f0:	0007      	movs	r7, r0
 80004f2:	4699      	mov	r9, r3
 80004f4:	0c3b      	lsrs	r3, r7, #16
 80004f6:	469c      	mov	ip, r3
 80004f8:	0413      	lsls	r3, r2, #16
 80004fa:	0c1b      	lsrs	r3, r3, #16
 80004fc:	001d      	movs	r5, r3
 80004fe:	000e      	movs	r6, r1
 8000500:	4661      	mov	r1, ip
 8000502:	0400      	lsls	r0, r0, #16
 8000504:	0c14      	lsrs	r4, r2, #16
 8000506:	0c00      	lsrs	r0, r0, #16
 8000508:	4345      	muls	r5, r0
 800050a:	434b      	muls	r3, r1
 800050c:	4360      	muls	r0, r4
 800050e:	4361      	muls	r1, r4
 8000510:	18c0      	adds	r0, r0, r3
 8000512:	0c2c      	lsrs	r4, r5, #16
 8000514:	1820      	adds	r0, r4, r0
 8000516:	468c      	mov	ip, r1
 8000518:	4283      	cmp	r3, r0
 800051a:	d903      	bls.n	8000524 <__aeabi_lmul+0x3c>
 800051c:	2380      	movs	r3, #128	; 0x80
 800051e:	025b      	lsls	r3, r3, #9
 8000520:	4698      	mov	r8, r3
 8000522:	44c4      	add	ip, r8
 8000524:	4649      	mov	r1, r9
 8000526:	4379      	muls	r1, r7
 8000528:	4372      	muls	r2, r6
 800052a:	0c03      	lsrs	r3, r0, #16
 800052c:	4463      	add	r3, ip
 800052e:	042d      	lsls	r5, r5, #16
 8000530:	0c2d      	lsrs	r5, r5, #16
 8000532:	18c9      	adds	r1, r1, r3
 8000534:	0400      	lsls	r0, r0, #16
 8000536:	1940      	adds	r0, r0, r5
 8000538:	1889      	adds	r1, r1, r2
 800053a:	bcc0      	pop	{r6, r7}
 800053c:	46b9      	mov	r9, r7
 800053e:	46b0      	mov	r8, r6
 8000540:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000542:	46c0      	nop			; (mov r8, r8)

08000544 <__udivmoddi4>:
 8000544:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000546:	4657      	mov	r7, sl
 8000548:	464e      	mov	r6, r9
 800054a:	4645      	mov	r5, r8
 800054c:	46de      	mov	lr, fp
 800054e:	b5e0      	push	{r5, r6, r7, lr}
 8000550:	0004      	movs	r4, r0
 8000552:	000d      	movs	r5, r1
 8000554:	4692      	mov	sl, r2
 8000556:	4699      	mov	r9, r3
 8000558:	b083      	sub	sp, #12
 800055a:	428b      	cmp	r3, r1
 800055c:	d830      	bhi.n	80005c0 <__udivmoddi4+0x7c>
 800055e:	d02d      	beq.n	80005bc <__udivmoddi4+0x78>
 8000560:	4649      	mov	r1, r9
 8000562:	4650      	mov	r0, sl
 8000564:	f001 febe 	bl	80022e4 <__clzdi2>
 8000568:	0029      	movs	r1, r5
 800056a:	0006      	movs	r6, r0
 800056c:	0020      	movs	r0, r4
 800056e:	f001 feb9 	bl	80022e4 <__clzdi2>
 8000572:	1a33      	subs	r3, r6, r0
 8000574:	4698      	mov	r8, r3
 8000576:	3b20      	subs	r3, #32
 8000578:	469b      	mov	fp, r3
 800057a:	d433      	bmi.n	80005e4 <__udivmoddi4+0xa0>
 800057c:	465a      	mov	r2, fp
 800057e:	4653      	mov	r3, sl
 8000580:	4093      	lsls	r3, r2
 8000582:	4642      	mov	r2, r8
 8000584:	001f      	movs	r7, r3
 8000586:	4653      	mov	r3, sl
 8000588:	4093      	lsls	r3, r2
 800058a:	001e      	movs	r6, r3
 800058c:	42af      	cmp	r7, r5
 800058e:	d83a      	bhi.n	8000606 <__udivmoddi4+0xc2>
 8000590:	42af      	cmp	r7, r5
 8000592:	d100      	bne.n	8000596 <__udivmoddi4+0x52>
 8000594:	e078      	b.n	8000688 <__udivmoddi4+0x144>
 8000596:	465b      	mov	r3, fp
 8000598:	1ba4      	subs	r4, r4, r6
 800059a:	41bd      	sbcs	r5, r7
 800059c:	2b00      	cmp	r3, #0
 800059e:	da00      	bge.n	80005a2 <__udivmoddi4+0x5e>
 80005a0:	e075      	b.n	800068e <__udivmoddi4+0x14a>
 80005a2:	2200      	movs	r2, #0
 80005a4:	2300      	movs	r3, #0
 80005a6:	9200      	str	r2, [sp, #0]
 80005a8:	9301      	str	r3, [sp, #4]
 80005aa:	2301      	movs	r3, #1
 80005ac:	465a      	mov	r2, fp
 80005ae:	4093      	lsls	r3, r2
 80005b0:	9301      	str	r3, [sp, #4]
 80005b2:	2301      	movs	r3, #1
 80005b4:	4642      	mov	r2, r8
 80005b6:	4093      	lsls	r3, r2
 80005b8:	9300      	str	r3, [sp, #0]
 80005ba:	e028      	b.n	800060e <__udivmoddi4+0xca>
 80005bc:	4282      	cmp	r2, r0
 80005be:	d9cf      	bls.n	8000560 <__udivmoddi4+0x1c>
 80005c0:	2200      	movs	r2, #0
 80005c2:	2300      	movs	r3, #0
 80005c4:	9200      	str	r2, [sp, #0]
 80005c6:	9301      	str	r3, [sp, #4]
 80005c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d001      	beq.n	80005d2 <__udivmoddi4+0x8e>
 80005ce:	601c      	str	r4, [r3, #0]
 80005d0:	605d      	str	r5, [r3, #4]
 80005d2:	9800      	ldr	r0, [sp, #0]
 80005d4:	9901      	ldr	r1, [sp, #4]
 80005d6:	b003      	add	sp, #12
 80005d8:	bcf0      	pop	{r4, r5, r6, r7}
 80005da:	46bb      	mov	fp, r7
 80005dc:	46b2      	mov	sl, r6
 80005de:	46a9      	mov	r9, r5
 80005e0:	46a0      	mov	r8, r4
 80005e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005e4:	4642      	mov	r2, r8
 80005e6:	2320      	movs	r3, #32
 80005e8:	1a9b      	subs	r3, r3, r2
 80005ea:	4652      	mov	r2, sl
 80005ec:	40da      	lsrs	r2, r3
 80005ee:	4641      	mov	r1, r8
 80005f0:	0013      	movs	r3, r2
 80005f2:	464a      	mov	r2, r9
 80005f4:	408a      	lsls	r2, r1
 80005f6:	0017      	movs	r7, r2
 80005f8:	4642      	mov	r2, r8
 80005fa:	431f      	orrs	r7, r3
 80005fc:	4653      	mov	r3, sl
 80005fe:	4093      	lsls	r3, r2
 8000600:	001e      	movs	r6, r3
 8000602:	42af      	cmp	r7, r5
 8000604:	d9c4      	bls.n	8000590 <__udivmoddi4+0x4c>
 8000606:	2200      	movs	r2, #0
 8000608:	2300      	movs	r3, #0
 800060a:	9200      	str	r2, [sp, #0]
 800060c:	9301      	str	r3, [sp, #4]
 800060e:	4643      	mov	r3, r8
 8000610:	2b00      	cmp	r3, #0
 8000612:	d0d9      	beq.n	80005c8 <__udivmoddi4+0x84>
 8000614:	07fb      	lsls	r3, r7, #31
 8000616:	0872      	lsrs	r2, r6, #1
 8000618:	431a      	orrs	r2, r3
 800061a:	4646      	mov	r6, r8
 800061c:	087b      	lsrs	r3, r7, #1
 800061e:	e00e      	b.n	800063e <__udivmoddi4+0xfa>
 8000620:	42ab      	cmp	r3, r5
 8000622:	d101      	bne.n	8000628 <__udivmoddi4+0xe4>
 8000624:	42a2      	cmp	r2, r4
 8000626:	d80c      	bhi.n	8000642 <__udivmoddi4+0xfe>
 8000628:	1aa4      	subs	r4, r4, r2
 800062a:	419d      	sbcs	r5, r3
 800062c:	2001      	movs	r0, #1
 800062e:	1924      	adds	r4, r4, r4
 8000630:	416d      	adcs	r5, r5
 8000632:	2100      	movs	r1, #0
 8000634:	3e01      	subs	r6, #1
 8000636:	1824      	adds	r4, r4, r0
 8000638:	414d      	adcs	r5, r1
 800063a:	2e00      	cmp	r6, #0
 800063c:	d006      	beq.n	800064c <__udivmoddi4+0x108>
 800063e:	42ab      	cmp	r3, r5
 8000640:	d9ee      	bls.n	8000620 <__udivmoddi4+0xdc>
 8000642:	3e01      	subs	r6, #1
 8000644:	1924      	adds	r4, r4, r4
 8000646:	416d      	adcs	r5, r5
 8000648:	2e00      	cmp	r6, #0
 800064a:	d1f8      	bne.n	800063e <__udivmoddi4+0xfa>
 800064c:	9800      	ldr	r0, [sp, #0]
 800064e:	9901      	ldr	r1, [sp, #4]
 8000650:	465b      	mov	r3, fp
 8000652:	1900      	adds	r0, r0, r4
 8000654:	4169      	adcs	r1, r5
 8000656:	2b00      	cmp	r3, #0
 8000658:	db24      	blt.n	80006a4 <__udivmoddi4+0x160>
 800065a:	002b      	movs	r3, r5
 800065c:	465a      	mov	r2, fp
 800065e:	4644      	mov	r4, r8
 8000660:	40d3      	lsrs	r3, r2
 8000662:	002a      	movs	r2, r5
 8000664:	40e2      	lsrs	r2, r4
 8000666:	001c      	movs	r4, r3
 8000668:	465b      	mov	r3, fp
 800066a:	0015      	movs	r5, r2
 800066c:	2b00      	cmp	r3, #0
 800066e:	db2a      	blt.n	80006c6 <__udivmoddi4+0x182>
 8000670:	0026      	movs	r6, r4
 8000672:	409e      	lsls	r6, r3
 8000674:	0033      	movs	r3, r6
 8000676:	0026      	movs	r6, r4
 8000678:	4647      	mov	r7, r8
 800067a:	40be      	lsls	r6, r7
 800067c:	0032      	movs	r2, r6
 800067e:	1a80      	subs	r0, r0, r2
 8000680:	4199      	sbcs	r1, r3
 8000682:	9000      	str	r0, [sp, #0]
 8000684:	9101      	str	r1, [sp, #4]
 8000686:	e79f      	b.n	80005c8 <__udivmoddi4+0x84>
 8000688:	42a3      	cmp	r3, r4
 800068a:	d8bc      	bhi.n	8000606 <__udivmoddi4+0xc2>
 800068c:	e783      	b.n	8000596 <__udivmoddi4+0x52>
 800068e:	4642      	mov	r2, r8
 8000690:	2320      	movs	r3, #32
 8000692:	2100      	movs	r1, #0
 8000694:	1a9b      	subs	r3, r3, r2
 8000696:	2200      	movs	r2, #0
 8000698:	9100      	str	r1, [sp, #0]
 800069a:	9201      	str	r2, [sp, #4]
 800069c:	2201      	movs	r2, #1
 800069e:	40da      	lsrs	r2, r3
 80006a0:	9201      	str	r2, [sp, #4]
 80006a2:	e786      	b.n	80005b2 <__udivmoddi4+0x6e>
 80006a4:	4642      	mov	r2, r8
 80006a6:	2320      	movs	r3, #32
 80006a8:	1a9b      	subs	r3, r3, r2
 80006aa:	002a      	movs	r2, r5
 80006ac:	4646      	mov	r6, r8
 80006ae:	409a      	lsls	r2, r3
 80006b0:	0023      	movs	r3, r4
 80006b2:	40f3      	lsrs	r3, r6
 80006b4:	4644      	mov	r4, r8
 80006b6:	4313      	orrs	r3, r2
 80006b8:	002a      	movs	r2, r5
 80006ba:	40e2      	lsrs	r2, r4
 80006bc:	001c      	movs	r4, r3
 80006be:	465b      	mov	r3, fp
 80006c0:	0015      	movs	r5, r2
 80006c2:	2b00      	cmp	r3, #0
 80006c4:	dad4      	bge.n	8000670 <__udivmoddi4+0x12c>
 80006c6:	4642      	mov	r2, r8
 80006c8:	002f      	movs	r7, r5
 80006ca:	2320      	movs	r3, #32
 80006cc:	0026      	movs	r6, r4
 80006ce:	4097      	lsls	r7, r2
 80006d0:	1a9b      	subs	r3, r3, r2
 80006d2:	40de      	lsrs	r6, r3
 80006d4:	003b      	movs	r3, r7
 80006d6:	4333      	orrs	r3, r6
 80006d8:	e7cd      	b.n	8000676 <__udivmoddi4+0x132>
 80006da:	46c0      	nop			; (mov r8, r8)

080006dc <__aeabi_dadd>:
 80006dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006de:	464f      	mov	r7, r9
 80006e0:	4646      	mov	r6, r8
 80006e2:	46d6      	mov	lr, sl
 80006e4:	000d      	movs	r5, r1
 80006e6:	0004      	movs	r4, r0
 80006e8:	b5c0      	push	{r6, r7, lr}
 80006ea:	001f      	movs	r7, r3
 80006ec:	0011      	movs	r1, r2
 80006ee:	0328      	lsls	r0, r5, #12
 80006f0:	0f62      	lsrs	r2, r4, #29
 80006f2:	0a40      	lsrs	r0, r0, #9
 80006f4:	4310      	orrs	r0, r2
 80006f6:	007a      	lsls	r2, r7, #1
 80006f8:	0d52      	lsrs	r2, r2, #21
 80006fa:	00e3      	lsls	r3, r4, #3
 80006fc:	033c      	lsls	r4, r7, #12
 80006fe:	4691      	mov	r9, r2
 8000700:	0a64      	lsrs	r4, r4, #9
 8000702:	0ffa      	lsrs	r2, r7, #31
 8000704:	0f4f      	lsrs	r7, r1, #29
 8000706:	006e      	lsls	r6, r5, #1
 8000708:	4327      	orrs	r7, r4
 800070a:	4692      	mov	sl, r2
 800070c:	46b8      	mov	r8, r7
 800070e:	0d76      	lsrs	r6, r6, #21
 8000710:	0fed      	lsrs	r5, r5, #31
 8000712:	00c9      	lsls	r1, r1, #3
 8000714:	4295      	cmp	r5, r2
 8000716:	d100      	bne.n	800071a <__aeabi_dadd+0x3e>
 8000718:	e099      	b.n	800084e <__aeabi_dadd+0x172>
 800071a:	464c      	mov	r4, r9
 800071c:	1b34      	subs	r4, r6, r4
 800071e:	46a4      	mov	ip, r4
 8000720:	2c00      	cmp	r4, #0
 8000722:	dc00      	bgt.n	8000726 <__aeabi_dadd+0x4a>
 8000724:	e07c      	b.n	8000820 <__aeabi_dadd+0x144>
 8000726:	464a      	mov	r2, r9
 8000728:	2a00      	cmp	r2, #0
 800072a:	d100      	bne.n	800072e <__aeabi_dadd+0x52>
 800072c:	e0b8      	b.n	80008a0 <__aeabi_dadd+0x1c4>
 800072e:	4ac5      	ldr	r2, [pc, #788]	; (8000a44 <__aeabi_dadd+0x368>)
 8000730:	4296      	cmp	r6, r2
 8000732:	d100      	bne.n	8000736 <__aeabi_dadd+0x5a>
 8000734:	e11c      	b.n	8000970 <__aeabi_dadd+0x294>
 8000736:	2280      	movs	r2, #128	; 0x80
 8000738:	003c      	movs	r4, r7
 800073a:	0412      	lsls	r2, r2, #16
 800073c:	4314      	orrs	r4, r2
 800073e:	46a0      	mov	r8, r4
 8000740:	4662      	mov	r2, ip
 8000742:	2a38      	cmp	r2, #56	; 0x38
 8000744:	dd00      	ble.n	8000748 <__aeabi_dadd+0x6c>
 8000746:	e161      	b.n	8000a0c <__aeabi_dadd+0x330>
 8000748:	2a1f      	cmp	r2, #31
 800074a:	dd00      	ble.n	800074e <__aeabi_dadd+0x72>
 800074c:	e1cc      	b.n	8000ae8 <__aeabi_dadd+0x40c>
 800074e:	4664      	mov	r4, ip
 8000750:	2220      	movs	r2, #32
 8000752:	1b12      	subs	r2, r2, r4
 8000754:	4644      	mov	r4, r8
 8000756:	4094      	lsls	r4, r2
 8000758:	000f      	movs	r7, r1
 800075a:	46a1      	mov	r9, r4
 800075c:	4664      	mov	r4, ip
 800075e:	4091      	lsls	r1, r2
 8000760:	40e7      	lsrs	r7, r4
 8000762:	464c      	mov	r4, r9
 8000764:	1e4a      	subs	r2, r1, #1
 8000766:	4191      	sbcs	r1, r2
 8000768:	433c      	orrs	r4, r7
 800076a:	4642      	mov	r2, r8
 800076c:	4321      	orrs	r1, r4
 800076e:	4664      	mov	r4, ip
 8000770:	40e2      	lsrs	r2, r4
 8000772:	1a80      	subs	r0, r0, r2
 8000774:	1a5c      	subs	r4, r3, r1
 8000776:	42a3      	cmp	r3, r4
 8000778:	419b      	sbcs	r3, r3
 800077a:	425f      	negs	r7, r3
 800077c:	1bc7      	subs	r7, r0, r7
 800077e:	023b      	lsls	r3, r7, #8
 8000780:	d400      	bmi.n	8000784 <__aeabi_dadd+0xa8>
 8000782:	e0d0      	b.n	8000926 <__aeabi_dadd+0x24a>
 8000784:	027f      	lsls	r7, r7, #9
 8000786:	0a7f      	lsrs	r7, r7, #9
 8000788:	2f00      	cmp	r7, #0
 800078a:	d100      	bne.n	800078e <__aeabi_dadd+0xb2>
 800078c:	e0ff      	b.n	800098e <__aeabi_dadd+0x2b2>
 800078e:	0038      	movs	r0, r7
 8000790:	f001 fd8a 	bl	80022a8 <__clzsi2>
 8000794:	0001      	movs	r1, r0
 8000796:	3908      	subs	r1, #8
 8000798:	2320      	movs	r3, #32
 800079a:	0022      	movs	r2, r4
 800079c:	1a5b      	subs	r3, r3, r1
 800079e:	408f      	lsls	r7, r1
 80007a0:	40da      	lsrs	r2, r3
 80007a2:	408c      	lsls	r4, r1
 80007a4:	4317      	orrs	r7, r2
 80007a6:	42b1      	cmp	r1, r6
 80007a8:	da00      	bge.n	80007ac <__aeabi_dadd+0xd0>
 80007aa:	e0ff      	b.n	80009ac <__aeabi_dadd+0x2d0>
 80007ac:	1b89      	subs	r1, r1, r6
 80007ae:	1c4b      	adds	r3, r1, #1
 80007b0:	2b1f      	cmp	r3, #31
 80007b2:	dd00      	ble.n	80007b6 <__aeabi_dadd+0xda>
 80007b4:	e0a8      	b.n	8000908 <__aeabi_dadd+0x22c>
 80007b6:	2220      	movs	r2, #32
 80007b8:	0039      	movs	r1, r7
 80007ba:	1ad2      	subs	r2, r2, r3
 80007bc:	0020      	movs	r0, r4
 80007be:	4094      	lsls	r4, r2
 80007c0:	4091      	lsls	r1, r2
 80007c2:	40d8      	lsrs	r0, r3
 80007c4:	1e62      	subs	r2, r4, #1
 80007c6:	4194      	sbcs	r4, r2
 80007c8:	40df      	lsrs	r7, r3
 80007ca:	2600      	movs	r6, #0
 80007cc:	4301      	orrs	r1, r0
 80007ce:	430c      	orrs	r4, r1
 80007d0:	0763      	lsls	r3, r4, #29
 80007d2:	d009      	beq.n	80007e8 <__aeabi_dadd+0x10c>
 80007d4:	230f      	movs	r3, #15
 80007d6:	4023      	ands	r3, r4
 80007d8:	2b04      	cmp	r3, #4
 80007da:	d005      	beq.n	80007e8 <__aeabi_dadd+0x10c>
 80007dc:	1d23      	adds	r3, r4, #4
 80007de:	42a3      	cmp	r3, r4
 80007e0:	41a4      	sbcs	r4, r4
 80007e2:	4264      	negs	r4, r4
 80007e4:	193f      	adds	r7, r7, r4
 80007e6:	001c      	movs	r4, r3
 80007e8:	023b      	lsls	r3, r7, #8
 80007ea:	d400      	bmi.n	80007ee <__aeabi_dadd+0x112>
 80007ec:	e09e      	b.n	800092c <__aeabi_dadd+0x250>
 80007ee:	4b95      	ldr	r3, [pc, #596]	; (8000a44 <__aeabi_dadd+0x368>)
 80007f0:	3601      	adds	r6, #1
 80007f2:	429e      	cmp	r6, r3
 80007f4:	d100      	bne.n	80007f8 <__aeabi_dadd+0x11c>
 80007f6:	e0b7      	b.n	8000968 <__aeabi_dadd+0x28c>
 80007f8:	4a93      	ldr	r2, [pc, #588]	; (8000a48 <__aeabi_dadd+0x36c>)
 80007fa:	08e4      	lsrs	r4, r4, #3
 80007fc:	4017      	ands	r7, r2
 80007fe:	077b      	lsls	r3, r7, #29
 8000800:	0571      	lsls	r1, r6, #21
 8000802:	027f      	lsls	r7, r7, #9
 8000804:	4323      	orrs	r3, r4
 8000806:	0b3f      	lsrs	r7, r7, #12
 8000808:	0d4a      	lsrs	r2, r1, #21
 800080a:	0512      	lsls	r2, r2, #20
 800080c:	433a      	orrs	r2, r7
 800080e:	07ed      	lsls	r5, r5, #31
 8000810:	432a      	orrs	r2, r5
 8000812:	0018      	movs	r0, r3
 8000814:	0011      	movs	r1, r2
 8000816:	bce0      	pop	{r5, r6, r7}
 8000818:	46ba      	mov	sl, r7
 800081a:	46b1      	mov	r9, r6
 800081c:	46a8      	mov	r8, r5
 800081e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000820:	2c00      	cmp	r4, #0
 8000822:	d04b      	beq.n	80008bc <__aeabi_dadd+0x1e0>
 8000824:	464c      	mov	r4, r9
 8000826:	1ba4      	subs	r4, r4, r6
 8000828:	46a4      	mov	ip, r4
 800082a:	2e00      	cmp	r6, #0
 800082c:	d000      	beq.n	8000830 <__aeabi_dadd+0x154>
 800082e:	e123      	b.n	8000a78 <__aeabi_dadd+0x39c>
 8000830:	0004      	movs	r4, r0
 8000832:	431c      	orrs	r4, r3
 8000834:	d100      	bne.n	8000838 <__aeabi_dadd+0x15c>
 8000836:	e1af      	b.n	8000b98 <__aeabi_dadd+0x4bc>
 8000838:	4662      	mov	r2, ip
 800083a:	1e54      	subs	r4, r2, #1
 800083c:	2a01      	cmp	r2, #1
 800083e:	d100      	bne.n	8000842 <__aeabi_dadd+0x166>
 8000840:	e215      	b.n	8000c6e <__aeabi_dadd+0x592>
 8000842:	4d80      	ldr	r5, [pc, #512]	; (8000a44 <__aeabi_dadd+0x368>)
 8000844:	45ac      	cmp	ip, r5
 8000846:	d100      	bne.n	800084a <__aeabi_dadd+0x16e>
 8000848:	e1c8      	b.n	8000bdc <__aeabi_dadd+0x500>
 800084a:	46a4      	mov	ip, r4
 800084c:	e11b      	b.n	8000a86 <__aeabi_dadd+0x3aa>
 800084e:	464a      	mov	r2, r9
 8000850:	1ab2      	subs	r2, r6, r2
 8000852:	4694      	mov	ip, r2
 8000854:	2a00      	cmp	r2, #0
 8000856:	dc00      	bgt.n	800085a <__aeabi_dadd+0x17e>
 8000858:	e0ac      	b.n	80009b4 <__aeabi_dadd+0x2d8>
 800085a:	464a      	mov	r2, r9
 800085c:	2a00      	cmp	r2, #0
 800085e:	d043      	beq.n	80008e8 <__aeabi_dadd+0x20c>
 8000860:	4a78      	ldr	r2, [pc, #480]	; (8000a44 <__aeabi_dadd+0x368>)
 8000862:	4296      	cmp	r6, r2
 8000864:	d100      	bne.n	8000868 <__aeabi_dadd+0x18c>
 8000866:	e1af      	b.n	8000bc8 <__aeabi_dadd+0x4ec>
 8000868:	2280      	movs	r2, #128	; 0x80
 800086a:	003c      	movs	r4, r7
 800086c:	0412      	lsls	r2, r2, #16
 800086e:	4314      	orrs	r4, r2
 8000870:	46a0      	mov	r8, r4
 8000872:	4662      	mov	r2, ip
 8000874:	2a38      	cmp	r2, #56	; 0x38
 8000876:	dc67      	bgt.n	8000948 <__aeabi_dadd+0x26c>
 8000878:	2a1f      	cmp	r2, #31
 800087a:	dc00      	bgt.n	800087e <__aeabi_dadd+0x1a2>
 800087c:	e15f      	b.n	8000b3e <__aeabi_dadd+0x462>
 800087e:	4647      	mov	r7, r8
 8000880:	3a20      	subs	r2, #32
 8000882:	40d7      	lsrs	r7, r2
 8000884:	4662      	mov	r2, ip
 8000886:	2a20      	cmp	r2, #32
 8000888:	d005      	beq.n	8000896 <__aeabi_dadd+0x1ba>
 800088a:	4664      	mov	r4, ip
 800088c:	2240      	movs	r2, #64	; 0x40
 800088e:	1b12      	subs	r2, r2, r4
 8000890:	4644      	mov	r4, r8
 8000892:	4094      	lsls	r4, r2
 8000894:	4321      	orrs	r1, r4
 8000896:	1e4a      	subs	r2, r1, #1
 8000898:	4191      	sbcs	r1, r2
 800089a:	000c      	movs	r4, r1
 800089c:	433c      	orrs	r4, r7
 800089e:	e057      	b.n	8000950 <__aeabi_dadd+0x274>
 80008a0:	003a      	movs	r2, r7
 80008a2:	430a      	orrs	r2, r1
 80008a4:	d100      	bne.n	80008a8 <__aeabi_dadd+0x1cc>
 80008a6:	e105      	b.n	8000ab4 <__aeabi_dadd+0x3d8>
 80008a8:	0022      	movs	r2, r4
 80008aa:	3a01      	subs	r2, #1
 80008ac:	2c01      	cmp	r4, #1
 80008ae:	d100      	bne.n	80008b2 <__aeabi_dadd+0x1d6>
 80008b0:	e182      	b.n	8000bb8 <__aeabi_dadd+0x4dc>
 80008b2:	4c64      	ldr	r4, [pc, #400]	; (8000a44 <__aeabi_dadd+0x368>)
 80008b4:	45a4      	cmp	ip, r4
 80008b6:	d05b      	beq.n	8000970 <__aeabi_dadd+0x294>
 80008b8:	4694      	mov	ip, r2
 80008ba:	e741      	b.n	8000740 <__aeabi_dadd+0x64>
 80008bc:	4c63      	ldr	r4, [pc, #396]	; (8000a4c <__aeabi_dadd+0x370>)
 80008be:	1c77      	adds	r7, r6, #1
 80008c0:	4227      	tst	r7, r4
 80008c2:	d000      	beq.n	80008c6 <__aeabi_dadd+0x1ea>
 80008c4:	e0c4      	b.n	8000a50 <__aeabi_dadd+0x374>
 80008c6:	0004      	movs	r4, r0
 80008c8:	431c      	orrs	r4, r3
 80008ca:	2e00      	cmp	r6, #0
 80008cc:	d000      	beq.n	80008d0 <__aeabi_dadd+0x1f4>
 80008ce:	e169      	b.n	8000ba4 <__aeabi_dadd+0x4c8>
 80008d0:	2c00      	cmp	r4, #0
 80008d2:	d100      	bne.n	80008d6 <__aeabi_dadd+0x1fa>
 80008d4:	e1bf      	b.n	8000c56 <__aeabi_dadd+0x57a>
 80008d6:	4644      	mov	r4, r8
 80008d8:	430c      	orrs	r4, r1
 80008da:	d000      	beq.n	80008de <__aeabi_dadd+0x202>
 80008dc:	e1d0      	b.n	8000c80 <__aeabi_dadd+0x5a4>
 80008de:	0742      	lsls	r2, r0, #29
 80008e0:	08db      	lsrs	r3, r3, #3
 80008e2:	4313      	orrs	r3, r2
 80008e4:	08c0      	lsrs	r0, r0, #3
 80008e6:	e029      	b.n	800093c <__aeabi_dadd+0x260>
 80008e8:	003a      	movs	r2, r7
 80008ea:	430a      	orrs	r2, r1
 80008ec:	d100      	bne.n	80008f0 <__aeabi_dadd+0x214>
 80008ee:	e170      	b.n	8000bd2 <__aeabi_dadd+0x4f6>
 80008f0:	4662      	mov	r2, ip
 80008f2:	4664      	mov	r4, ip
 80008f4:	3a01      	subs	r2, #1
 80008f6:	2c01      	cmp	r4, #1
 80008f8:	d100      	bne.n	80008fc <__aeabi_dadd+0x220>
 80008fa:	e0e0      	b.n	8000abe <__aeabi_dadd+0x3e2>
 80008fc:	4c51      	ldr	r4, [pc, #324]	; (8000a44 <__aeabi_dadd+0x368>)
 80008fe:	45a4      	cmp	ip, r4
 8000900:	d100      	bne.n	8000904 <__aeabi_dadd+0x228>
 8000902:	e161      	b.n	8000bc8 <__aeabi_dadd+0x4ec>
 8000904:	4694      	mov	ip, r2
 8000906:	e7b4      	b.n	8000872 <__aeabi_dadd+0x196>
 8000908:	003a      	movs	r2, r7
 800090a:	391f      	subs	r1, #31
 800090c:	40ca      	lsrs	r2, r1
 800090e:	0011      	movs	r1, r2
 8000910:	2b20      	cmp	r3, #32
 8000912:	d003      	beq.n	800091c <__aeabi_dadd+0x240>
 8000914:	2240      	movs	r2, #64	; 0x40
 8000916:	1ad3      	subs	r3, r2, r3
 8000918:	409f      	lsls	r7, r3
 800091a:	433c      	orrs	r4, r7
 800091c:	1e63      	subs	r3, r4, #1
 800091e:	419c      	sbcs	r4, r3
 8000920:	2700      	movs	r7, #0
 8000922:	2600      	movs	r6, #0
 8000924:	430c      	orrs	r4, r1
 8000926:	0763      	lsls	r3, r4, #29
 8000928:	d000      	beq.n	800092c <__aeabi_dadd+0x250>
 800092a:	e753      	b.n	80007d4 <__aeabi_dadd+0xf8>
 800092c:	46b4      	mov	ip, r6
 800092e:	08e4      	lsrs	r4, r4, #3
 8000930:	077b      	lsls	r3, r7, #29
 8000932:	4323      	orrs	r3, r4
 8000934:	08f8      	lsrs	r0, r7, #3
 8000936:	4a43      	ldr	r2, [pc, #268]	; (8000a44 <__aeabi_dadd+0x368>)
 8000938:	4594      	cmp	ip, r2
 800093a:	d01d      	beq.n	8000978 <__aeabi_dadd+0x29c>
 800093c:	4662      	mov	r2, ip
 800093e:	0307      	lsls	r7, r0, #12
 8000940:	0552      	lsls	r2, r2, #21
 8000942:	0b3f      	lsrs	r7, r7, #12
 8000944:	0d52      	lsrs	r2, r2, #21
 8000946:	e760      	b.n	800080a <__aeabi_dadd+0x12e>
 8000948:	4644      	mov	r4, r8
 800094a:	430c      	orrs	r4, r1
 800094c:	1e62      	subs	r2, r4, #1
 800094e:	4194      	sbcs	r4, r2
 8000950:	18e4      	adds	r4, r4, r3
 8000952:	429c      	cmp	r4, r3
 8000954:	419b      	sbcs	r3, r3
 8000956:	425f      	negs	r7, r3
 8000958:	183f      	adds	r7, r7, r0
 800095a:	023b      	lsls	r3, r7, #8
 800095c:	d5e3      	bpl.n	8000926 <__aeabi_dadd+0x24a>
 800095e:	4b39      	ldr	r3, [pc, #228]	; (8000a44 <__aeabi_dadd+0x368>)
 8000960:	3601      	adds	r6, #1
 8000962:	429e      	cmp	r6, r3
 8000964:	d000      	beq.n	8000968 <__aeabi_dadd+0x28c>
 8000966:	e0b5      	b.n	8000ad4 <__aeabi_dadd+0x3f8>
 8000968:	0032      	movs	r2, r6
 800096a:	2700      	movs	r7, #0
 800096c:	2300      	movs	r3, #0
 800096e:	e74c      	b.n	800080a <__aeabi_dadd+0x12e>
 8000970:	0742      	lsls	r2, r0, #29
 8000972:	08db      	lsrs	r3, r3, #3
 8000974:	4313      	orrs	r3, r2
 8000976:	08c0      	lsrs	r0, r0, #3
 8000978:	001a      	movs	r2, r3
 800097a:	4302      	orrs	r2, r0
 800097c:	d100      	bne.n	8000980 <__aeabi_dadd+0x2a4>
 800097e:	e1e1      	b.n	8000d44 <__aeabi_dadd+0x668>
 8000980:	2780      	movs	r7, #128	; 0x80
 8000982:	033f      	lsls	r7, r7, #12
 8000984:	4307      	orrs	r7, r0
 8000986:	033f      	lsls	r7, r7, #12
 8000988:	4a2e      	ldr	r2, [pc, #184]	; (8000a44 <__aeabi_dadd+0x368>)
 800098a:	0b3f      	lsrs	r7, r7, #12
 800098c:	e73d      	b.n	800080a <__aeabi_dadd+0x12e>
 800098e:	0020      	movs	r0, r4
 8000990:	f001 fc8a 	bl	80022a8 <__clzsi2>
 8000994:	0001      	movs	r1, r0
 8000996:	3118      	adds	r1, #24
 8000998:	291f      	cmp	r1, #31
 800099a:	dc00      	bgt.n	800099e <__aeabi_dadd+0x2c2>
 800099c:	e6fc      	b.n	8000798 <__aeabi_dadd+0xbc>
 800099e:	3808      	subs	r0, #8
 80009a0:	4084      	lsls	r4, r0
 80009a2:	0027      	movs	r7, r4
 80009a4:	2400      	movs	r4, #0
 80009a6:	42b1      	cmp	r1, r6
 80009a8:	db00      	blt.n	80009ac <__aeabi_dadd+0x2d0>
 80009aa:	e6ff      	b.n	80007ac <__aeabi_dadd+0xd0>
 80009ac:	4a26      	ldr	r2, [pc, #152]	; (8000a48 <__aeabi_dadd+0x36c>)
 80009ae:	1a76      	subs	r6, r6, r1
 80009b0:	4017      	ands	r7, r2
 80009b2:	e70d      	b.n	80007d0 <__aeabi_dadd+0xf4>
 80009b4:	2a00      	cmp	r2, #0
 80009b6:	d02f      	beq.n	8000a18 <__aeabi_dadd+0x33c>
 80009b8:	464a      	mov	r2, r9
 80009ba:	1b92      	subs	r2, r2, r6
 80009bc:	4694      	mov	ip, r2
 80009be:	2e00      	cmp	r6, #0
 80009c0:	d100      	bne.n	80009c4 <__aeabi_dadd+0x2e8>
 80009c2:	e0ad      	b.n	8000b20 <__aeabi_dadd+0x444>
 80009c4:	4a1f      	ldr	r2, [pc, #124]	; (8000a44 <__aeabi_dadd+0x368>)
 80009c6:	4591      	cmp	r9, r2
 80009c8:	d100      	bne.n	80009cc <__aeabi_dadd+0x2f0>
 80009ca:	e10f      	b.n	8000bec <__aeabi_dadd+0x510>
 80009cc:	2280      	movs	r2, #128	; 0x80
 80009ce:	0412      	lsls	r2, r2, #16
 80009d0:	4310      	orrs	r0, r2
 80009d2:	4662      	mov	r2, ip
 80009d4:	2a38      	cmp	r2, #56	; 0x38
 80009d6:	dd00      	ble.n	80009da <__aeabi_dadd+0x2fe>
 80009d8:	e10f      	b.n	8000bfa <__aeabi_dadd+0x51e>
 80009da:	2a1f      	cmp	r2, #31
 80009dc:	dd00      	ble.n	80009e0 <__aeabi_dadd+0x304>
 80009de:	e180      	b.n	8000ce2 <__aeabi_dadd+0x606>
 80009e0:	4664      	mov	r4, ip
 80009e2:	2220      	movs	r2, #32
 80009e4:	001e      	movs	r6, r3
 80009e6:	1b12      	subs	r2, r2, r4
 80009e8:	4667      	mov	r7, ip
 80009ea:	0004      	movs	r4, r0
 80009ec:	4093      	lsls	r3, r2
 80009ee:	4094      	lsls	r4, r2
 80009f0:	40fe      	lsrs	r6, r7
 80009f2:	1e5a      	subs	r2, r3, #1
 80009f4:	4193      	sbcs	r3, r2
 80009f6:	40f8      	lsrs	r0, r7
 80009f8:	4334      	orrs	r4, r6
 80009fa:	431c      	orrs	r4, r3
 80009fc:	4480      	add	r8, r0
 80009fe:	1864      	adds	r4, r4, r1
 8000a00:	428c      	cmp	r4, r1
 8000a02:	41bf      	sbcs	r7, r7
 8000a04:	427f      	negs	r7, r7
 8000a06:	464e      	mov	r6, r9
 8000a08:	4447      	add	r7, r8
 8000a0a:	e7a6      	b.n	800095a <__aeabi_dadd+0x27e>
 8000a0c:	4642      	mov	r2, r8
 8000a0e:	430a      	orrs	r2, r1
 8000a10:	0011      	movs	r1, r2
 8000a12:	1e4a      	subs	r2, r1, #1
 8000a14:	4191      	sbcs	r1, r2
 8000a16:	e6ad      	b.n	8000774 <__aeabi_dadd+0x98>
 8000a18:	4c0c      	ldr	r4, [pc, #48]	; (8000a4c <__aeabi_dadd+0x370>)
 8000a1a:	1c72      	adds	r2, r6, #1
 8000a1c:	4222      	tst	r2, r4
 8000a1e:	d000      	beq.n	8000a22 <__aeabi_dadd+0x346>
 8000a20:	e0a1      	b.n	8000b66 <__aeabi_dadd+0x48a>
 8000a22:	0002      	movs	r2, r0
 8000a24:	431a      	orrs	r2, r3
 8000a26:	2e00      	cmp	r6, #0
 8000a28:	d000      	beq.n	8000a2c <__aeabi_dadd+0x350>
 8000a2a:	e0fa      	b.n	8000c22 <__aeabi_dadd+0x546>
 8000a2c:	2a00      	cmp	r2, #0
 8000a2e:	d100      	bne.n	8000a32 <__aeabi_dadd+0x356>
 8000a30:	e145      	b.n	8000cbe <__aeabi_dadd+0x5e2>
 8000a32:	003a      	movs	r2, r7
 8000a34:	430a      	orrs	r2, r1
 8000a36:	d000      	beq.n	8000a3a <__aeabi_dadd+0x35e>
 8000a38:	e146      	b.n	8000cc8 <__aeabi_dadd+0x5ec>
 8000a3a:	0742      	lsls	r2, r0, #29
 8000a3c:	08db      	lsrs	r3, r3, #3
 8000a3e:	4313      	orrs	r3, r2
 8000a40:	08c0      	lsrs	r0, r0, #3
 8000a42:	e77b      	b.n	800093c <__aeabi_dadd+0x260>
 8000a44:	000007ff 	.word	0x000007ff
 8000a48:	ff7fffff 	.word	0xff7fffff
 8000a4c:	000007fe 	.word	0x000007fe
 8000a50:	4647      	mov	r7, r8
 8000a52:	1a5c      	subs	r4, r3, r1
 8000a54:	1bc2      	subs	r2, r0, r7
 8000a56:	42a3      	cmp	r3, r4
 8000a58:	41bf      	sbcs	r7, r7
 8000a5a:	427f      	negs	r7, r7
 8000a5c:	46b9      	mov	r9, r7
 8000a5e:	0017      	movs	r7, r2
 8000a60:	464a      	mov	r2, r9
 8000a62:	1abf      	subs	r7, r7, r2
 8000a64:	023a      	lsls	r2, r7, #8
 8000a66:	d500      	bpl.n	8000a6a <__aeabi_dadd+0x38e>
 8000a68:	e08d      	b.n	8000b86 <__aeabi_dadd+0x4aa>
 8000a6a:	0023      	movs	r3, r4
 8000a6c:	433b      	orrs	r3, r7
 8000a6e:	d000      	beq.n	8000a72 <__aeabi_dadd+0x396>
 8000a70:	e68a      	b.n	8000788 <__aeabi_dadd+0xac>
 8000a72:	2000      	movs	r0, #0
 8000a74:	2500      	movs	r5, #0
 8000a76:	e761      	b.n	800093c <__aeabi_dadd+0x260>
 8000a78:	4cb4      	ldr	r4, [pc, #720]	; (8000d4c <__aeabi_dadd+0x670>)
 8000a7a:	45a1      	cmp	r9, r4
 8000a7c:	d100      	bne.n	8000a80 <__aeabi_dadd+0x3a4>
 8000a7e:	e0ad      	b.n	8000bdc <__aeabi_dadd+0x500>
 8000a80:	2480      	movs	r4, #128	; 0x80
 8000a82:	0424      	lsls	r4, r4, #16
 8000a84:	4320      	orrs	r0, r4
 8000a86:	4664      	mov	r4, ip
 8000a88:	2c38      	cmp	r4, #56	; 0x38
 8000a8a:	dc3d      	bgt.n	8000b08 <__aeabi_dadd+0x42c>
 8000a8c:	4662      	mov	r2, ip
 8000a8e:	2c1f      	cmp	r4, #31
 8000a90:	dd00      	ble.n	8000a94 <__aeabi_dadd+0x3b8>
 8000a92:	e0b7      	b.n	8000c04 <__aeabi_dadd+0x528>
 8000a94:	2520      	movs	r5, #32
 8000a96:	001e      	movs	r6, r3
 8000a98:	1b2d      	subs	r5, r5, r4
 8000a9a:	0004      	movs	r4, r0
 8000a9c:	40ab      	lsls	r3, r5
 8000a9e:	40ac      	lsls	r4, r5
 8000aa0:	40d6      	lsrs	r6, r2
 8000aa2:	40d0      	lsrs	r0, r2
 8000aa4:	4642      	mov	r2, r8
 8000aa6:	1e5d      	subs	r5, r3, #1
 8000aa8:	41ab      	sbcs	r3, r5
 8000aaa:	4334      	orrs	r4, r6
 8000aac:	1a12      	subs	r2, r2, r0
 8000aae:	4690      	mov	r8, r2
 8000ab0:	4323      	orrs	r3, r4
 8000ab2:	e02c      	b.n	8000b0e <__aeabi_dadd+0x432>
 8000ab4:	0742      	lsls	r2, r0, #29
 8000ab6:	08db      	lsrs	r3, r3, #3
 8000ab8:	4313      	orrs	r3, r2
 8000aba:	08c0      	lsrs	r0, r0, #3
 8000abc:	e73b      	b.n	8000936 <__aeabi_dadd+0x25a>
 8000abe:	185c      	adds	r4, r3, r1
 8000ac0:	429c      	cmp	r4, r3
 8000ac2:	419b      	sbcs	r3, r3
 8000ac4:	4440      	add	r0, r8
 8000ac6:	425b      	negs	r3, r3
 8000ac8:	18c7      	adds	r7, r0, r3
 8000aca:	2601      	movs	r6, #1
 8000acc:	023b      	lsls	r3, r7, #8
 8000ace:	d400      	bmi.n	8000ad2 <__aeabi_dadd+0x3f6>
 8000ad0:	e729      	b.n	8000926 <__aeabi_dadd+0x24a>
 8000ad2:	2602      	movs	r6, #2
 8000ad4:	4a9e      	ldr	r2, [pc, #632]	; (8000d50 <__aeabi_dadd+0x674>)
 8000ad6:	0863      	lsrs	r3, r4, #1
 8000ad8:	4017      	ands	r7, r2
 8000ada:	2201      	movs	r2, #1
 8000adc:	4014      	ands	r4, r2
 8000ade:	431c      	orrs	r4, r3
 8000ae0:	07fb      	lsls	r3, r7, #31
 8000ae2:	431c      	orrs	r4, r3
 8000ae4:	087f      	lsrs	r7, r7, #1
 8000ae6:	e673      	b.n	80007d0 <__aeabi_dadd+0xf4>
 8000ae8:	4644      	mov	r4, r8
 8000aea:	3a20      	subs	r2, #32
 8000aec:	40d4      	lsrs	r4, r2
 8000aee:	4662      	mov	r2, ip
 8000af0:	2a20      	cmp	r2, #32
 8000af2:	d005      	beq.n	8000b00 <__aeabi_dadd+0x424>
 8000af4:	4667      	mov	r7, ip
 8000af6:	2240      	movs	r2, #64	; 0x40
 8000af8:	1bd2      	subs	r2, r2, r7
 8000afa:	4647      	mov	r7, r8
 8000afc:	4097      	lsls	r7, r2
 8000afe:	4339      	orrs	r1, r7
 8000b00:	1e4a      	subs	r2, r1, #1
 8000b02:	4191      	sbcs	r1, r2
 8000b04:	4321      	orrs	r1, r4
 8000b06:	e635      	b.n	8000774 <__aeabi_dadd+0x98>
 8000b08:	4303      	orrs	r3, r0
 8000b0a:	1e58      	subs	r0, r3, #1
 8000b0c:	4183      	sbcs	r3, r0
 8000b0e:	1acc      	subs	r4, r1, r3
 8000b10:	42a1      	cmp	r1, r4
 8000b12:	41bf      	sbcs	r7, r7
 8000b14:	4643      	mov	r3, r8
 8000b16:	427f      	negs	r7, r7
 8000b18:	4655      	mov	r5, sl
 8000b1a:	464e      	mov	r6, r9
 8000b1c:	1bdf      	subs	r7, r3, r7
 8000b1e:	e62e      	b.n	800077e <__aeabi_dadd+0xa2>
 8000b20:	0002      	movs	r2, r0
 8000b22:	431a      	orrs	r2, r3
 8000b24:	d100      	bne.n	8000b28 <__aeabi_dadd+0x44c>
 8000b26:	e0bd      	b.n	8000ca4 <__aeabi_dadd+0x5c8>
 8000b28:	4662      	mov	r2, ip
 8000b2a:	4664      	mov	r4, ip
 8000b2c:	3a01      	subs	r2, #1
 8000b2e:	2c01      	cmp	r4, #1
 8000b30:	d100      	bne.n	8000b34 <__aeabi_dadd+0x458>
 8000b32:	e0e5      	b.n	8000d00 <__aeabi_dadd+0x624>
 8000b34:	4c85      	ldr	r4, [pc, #532]	; (8000d4c <__aeabi_dadd+0x670>)
 8000b36:	45a4      	cmp	ip, r4
 8000b38:	d058      	beq.n	8000bec <__aeabi_dadd+0x510>
 8000b3a:	4694      	mov	ip, r2
 8000b3c:	e749      	b.n	80009d2 <__aeabi_dadd+0x2f6>
 8000b3e:	4664      	mov	r4, ip
 8000b40:	2220      	movs	r2, #32
 8000b42:	1b12      	subs	r2, r2, r4
 8000b44:	4644      	mov	r4, r8
 8000b46:	4094      	lsls	r4, r2
 8000b48:	000f      	movs	r7, r1
 8000b4a:	46a1      	mov	r9, r4
 8000b4c:	4664      	mov	r4, ip
 8000b4e:	4091      	lsls	r1, r2
 8000b50:	40e7      	lsrs	r7, r4
 8000b52:	464c      	mov	r4, r9
 8000b54:	1e4a      	subs	r2, r1, #1
 8000b56:	4191      	sbcs	r1, r2
 8000b58:	433c      	orrs	r4, r7
 8000b5a:	4642      	mov	r2, r8
 8000b5c:	430c      	orrs	r4, r1
 8000b5e:	4661      	mov	r1, ip
 8000b60:	40ca      	lsrs	r2, r1
 8000b62:	1880      	adds	r0, r0, r2
 8000b64:	e6f4      	b.n	8000950 <__aeabi_dadd+0x274>
 8000b66:	4c79      	ldr	r4, [pc, #484]	; (8000d4c <__aeabi_dadd+0x670>)
 8000b68:	42a2      	cmp	r2, r4
 8000b6a:	d100      	bne.n	8000b6e <__aeabi_dadd+0x492>
 8000b6c:	e6fd      	b.n	800096a <__aeabi_dadd+0x28e>
 8000b6e:	1859      	adds	r1, r3, r1
 8000b70:	4299      	cmp	r1, r3
 8000b72:	419b      	sbcs	r3, r3
 8000b74:	4440      	add	r0, r8
 8000b76:	425f      	negs	r7, r3
 8000b78:	19c7      	adds	r7, r0, r7
 8000b7a:	07fc      	lsls	r4, r7, #31
 8000b7c:	0849      	lsrs	r1, r1, #1
 8000b7e:	0016      	movs	r6, r2
 8000b80:	430c      	orrs	r4, r1
 8000b82:	087f      	lsrs	r7, r7, #1
 8000b84:	e6cf      	b.n	8000926 <__aeabi_dadd+0x24a>
 8000b86:	1acc      	subs	r4, r1, r3
 8000b88:	42a1      	cmp	r1, r4
 8000b8a:	41bf      	sbcs	r7, r7
 8000b8c:	4643      	mov	r3, r8
 8000b8e:	427f      	negs	r7, r7
 8000b90:	1a18      	subs	r0, r3, r0
 8000b92:	4655      	mov	r5, sl
 8000b94:	1bc7      	subs	r7, r0, r7
 8000b96:	e5f7      	b.n	8000788 <__aeabi_dadd+0xac>
 8000b98:	08c9      	lsrs	r1, r1, #3
 8000b9a:	077b      	lsls	r3, r7, #29
 8000b9c:	4655      	mov	r5, sl
 8000b9e:	430b      	orrs	r3, r1
 8000ba0:	08f8      	lsrs	r0, r7, #3
 8000ba2:	e6c8      	b.n	8000936 <__aeabi_dadd+0x25a>
 8000ba4:	2c00      	cmp	r4, #0
 8000ba6:	d000      	beq.n	8000baa <__aeabi_dadd+0x4ce>
 8000ba8:	e081      	b.n	8000cae <__aeabi_dadd+0x5d2>
 8000baa:	4643      	mov	r3, r8
 8000bac:	430b      	orrs	r3, r1
 8000bae:	d115      	bne.n	8000bdc <__aeabi_dadd+0x500>
 8000bb0:	2080      	movs	r0, #128	; 0x80
 8000bb2:	2500      	movs	r5, #0
 8000bb4:	0300      	lsls	r0, r0, #12
 8000bb6:	e6e3      	b.n	8000980 <__aeabi_dadd+0x2a4>
 8000bb8:	1a5c      	subs	r4, r3, r1
 8000bba:	42a3      	cmp	r3, r4
 8000bbc:	419b      	sbcs	r3, r3
 8000bbe:	1bc7      	subs	r7, r0, r7
 8000bc0:	425b      	negs	r3, r3
 8000bc2:	2601      	movs	r6, #1
 8000bc4:	1aff      	subs	r7, r7, r3
 8000bc6:	e5da      	b.n	800077e <__aeabi_dadd+0xa2>
 8000bc8:	0742      	lsls	r2, r0, #29
 8000bca:	08db      	lsrs	r3, r3, #3
 8000bcc:	4313      	orrs	r3, r2
 8000bce:	08c0      	lsrs	r0, r0, #3
 8000bd0:	e6d2      	b.n	8000978 <__aeabi_dadd+0x29c>
 8000bd2:	0742      	lsls	r2, r0, #29
 8000bd4:	08db      	lsrs	r3, r3, #3
 8000bd6:	4313      	orrs	r3, r2
 8000bd8:	08c0      	lsrs	r0, r0, #3
 8000bda:	e6ac      	b.n	8000936 <__aeabi_dadd+0x25a>
 8000bdc:	4643      	mov	r3, r8
 8000bde:	4642      	mov	r2, r8
 8000be0:	08c9      	lsrs	r1, r1, #3
 8000be2:	075b      	lsls	r3, r3, #29
 8000be4:	4655      	mov	r5, sl
 8000be6:	430b      	orrs	r3, r1
 8000be8:	08d0      	lsrs	r0, r2, #3
 8000bea:	e6c5      	b.n	8000978 <__aeabi_dadd+0x29c>
 8000bec:	4643      	mov	r3, r8
 8000bee:	4642      	mov	r2, r8
 8000bf0:	075b      	lsls	r3, r3, #29
 8000bf2:	08c9      	lsrs	r1, r1, #3
 8000bf4:	430b      	orrs	r3, r1
 8000bf6:	08d0      	lsrs	r0, r2, #3
 8000bf8:	e6be      	b.n	8000978 <__aeabi_dadd+0x29c>
 8000bfa:	4303      	orrs	r3, r0
 8000bfc:	001c      	movs	r4, r3
 8000bfe:	1e63      	subs	r3, r4, #1
 8000c00:	419c      	sbcs	r4, r3
 8000c02:	e6fc      	b.n	80009fe <__aeabi_dadd+0x322>
 8000c04:	0002      	movs	r2, r0
 8000c06:	3c20      	subs	r4, #32
 8000c08:	40e2      	lsrs	r2, r4
 8000c0a:	0014      	movs	r4, r2
 8000c0c:	4662      	mov	r2, ip
 8000c0e:	2a20      	cmp	r2, #32
 8000c10:	d003      	beq.n	8000c1a <__aeabi_dadd+0x53e>
 8000c12:	2540      	movs	r5, #64	; 0x40
 8000c14:	1aad      	subs	r5, r5, r2
 8000c16:	40a8      	lsls	r0, r5
 8000c18:	4303      	orrs	r3, r0
 8000c1a:	1e58      	subs	r0, r3, #1
 8000c1c:	4183      	sbcs	r3, r0
 8000c1e:	4323      	orrs	r3, r4
 8000c20:	e775      	b.n	8000b0e <__aeabi_dadd+0x432>
 8000c22:	2a00      	cmp	r2, #0
 8000c24:	d0e2      	beq.n	8000bec <__aeabi_dadd+0x510>
 8000c26:	003a      	movs	r2, r7
 8000c28:	430a      	orrs	r2, r1
 8000c2a:	d0cd      	beq.n	8000bc8 <__aeabi_dadd+0x4ec>
 8000c2c:	0742      	lsls	r2, r0, #29
 8000c2e:	08db      	lsrs	r3, r3, #3
 8000c30:	4313      	orrs	r3, r2
 8000c32:	2280      	movs	r2, #128	; 0x80
 8000c34:	08c0      	lsrs	r0, r0, #3
 8000c36:	0312      	lsls	r2, r2, #12
 8000c38:	4210      	tst	r0, r2
 8000c3a:	d006      	beq.n	8000c4a <__aeabi_dadd+0x56e>
 8000c3c:	08fc      	lsrs	r4, r7, #3
 8000c3e:	4214      	tst	r4, r2
 8000c40:	d103      	bne.n	8000c4a <__aeabi_dadd+0x56e>
 8000c42:	0020      	movs	r0, r4
 8000c44:	08cb      	lsrs	r3, r1, #3
 8000c46:	077a      	lsls	r2, r7, #29
 8000c48:	4313      	orrs	r3, r2
 8000c4a:	0f5a      	lsrs	r2, r3, #29
 8000c4c:	00db      	lsls	r3, r3, #3
 8000c4e:	0752      	lsls	r2, r2, #29
 8000c50:	08db      	lsrs	r3, r3, #3
 8000c52:	4313      	orrs	r3, r2
 8000c54:	e690      	b.n	8000978 <__aeabi_dadd+0x29c>
 8000c56:	4643      	mov	r3, r8
 8000c58:	430b      	orrs	r3, r1
 8000c5a:	d100      	bne.n	8000c5e <__aeabi_dadd+0x582>
 8000c5c:	e709      	b.n	8000a72 <__aeabi_dadd+0x396>
 8000c5e:	4643      	mov	r3, r8
 8000c60:	4642      	mov	r2, r8
 8000c62:	08c9      	lsrs	r1, r1, #3
 8000c64:	075b      	lsls	r3, r3, #29
 8000c66:	4655      	mov	r5, sl
 8000c68:	430b      	orrs	r3, r1
 8000c6a:	08d0      	lsrs	r0, r2, #3
 8000c6c:	e666      	b.n	800093c <__aeabi_dadd+0x260>
 8000c6e:	1acc      	subs	r4, r1, r3
 8000c70:	42a1      	cmp	r1, r4
 8000c72:	4189      	sbcs	r1, r1
 8000c74:	1a3f      	subs	r7, r7, r0
 8000c76:	4249      	negs	r1, r1
 8000c78:	4655      	mov	r5, sl
 8000c7a:	2601      	movs	r6, #1
 8000c7c:	1a7f      	subs	r7, r7, r1
 8000c7e:	e57e      	b.n	800077e <__aeabi_dadd+0xa2>
 8000c80:	4642      	mov	r2, r8
 8000c82:	1a5c      	subs	r4, r3, r1
 8000c84:	1a87      	subs	r7, r0, r2
 8000c86:	42a3      	cmp	r3, r4
 8000c88:	4192      	sbcs	r2, r2
 8000c8a:	4252      	negs	r2, r2
 8000c8c:	1abf      	subs	r7, r7, r2
 8000c8e:	023a      	lsls	r2, r7, #8
 8000c90:	d53d      	bpl.n	8000d0e <__aeabi_dadd+0x632>
 8000c92:	1acc      	subs	r4, r1, r3
 8000c94:	42a1      	cmp	r1, r4
 8000c96:	4189      	sbcs	r1, r1
 8000c98:	4643      	mov	r3, r8
 8000c9a:	4249      	negs	r1, r1
 8000c9c:	1a1f      	subs	r7, r3, r0
 8000c9e:	4655      	mov	r5, sl
 8000ca0:	1a7f      	subs	r7, r7, r1
 8000ca2:	e595      	b.n	80007d0 <__aeabi_dadd+0xf4>
 8000ca4:	077b      	lsls	r3, r7, #29
 8000ca6:	08c9      	lsrs	r1, r1, #3
 8000ca8:	430b      	orrs	r3, r1
 8000caa:	08f8      	lsrs	r0, r7, #3
 8000cac:	e643      	b.n	8000936 <__aeabi_dadd+0x25a>
 8000cae:	4644      	mov	r4, r8
 8000cb0:	08db      	lsrs	r3, r3, #3
 8000cb2:	430c      	orrs	r4, r1
 8000cb4:	d130      	bne.n	8000d18 <__aeabi_dadd+0x63c>
 8000cb6:	0742      	lsls	r2, r0, #29
 8000cb8:	4313      	orrs	r3, r2
 8000cba:	08c0      	lsrs	r0, r0, #3
 8000cbc:	e65c      	b.n	8000978 <__aeabi_dadd+0x29c>
 8000cbe:	077b      	lsls	r3, r7, #29
 8000cc0:	08c9      	lsrs	r1, r1, #3
 8000cc2:	430b      	orrs	r3, r1
 8000cc4:	08f8      	lsrs	r0, r7, #3
 8000cc6:	e639      	b.n	800093c <__aeabi_dadd+0x260>
 8000cc8:	185c      	adds	r4, r3, r1
 8000cca:	429c      	cmp	r4, r3
 8000ccc:	419b      	sbcs	r3, r3
 8000cce:	4440      	add	r0, r8
 8000cd0:	425b      	negs	r3, r3
 8000cd2:	18c7      	adds	r7, r0, r3
 8000cd4:	023b      	lsls	r3, r7, #8
 8000cd6:	d400      	bmi.n	8000cda <__aeabi_dadd+0x5fe>
 8000cd8:	e625      	b.n	8000926 <__aeabi_dadd+0x24a>
 8000cda:	4b1d      	ldr	r3, [pc, #116]	; (8000d50 <__aeabi_dadd+0x674>)
 8000cdc:	2601      	movs	r6, #1
 8000cde:	401f      	ands	r7, r3
 8000ce0:	e621      	b.n	8000926 <__aeabi_dadd+0x24a>
 8000ce2:	0004      	movs	r4, r0
 8000ce4:	3a20      	subs	r2, #32
 8000ce6:	40d4      	lsrs	r4, r2
 8000ce8:	4662      	mov	r2, ip
 8000cea:	2a20      	cmp	r2, #32
 8000cec:	d004      	beq.n	8000cf8 <__aeabi_dadd+0x61c>
 8000cee:	2240      	movs	r2, #64	; 0x40
 8000cf0:	4666      	mov	r6, ip
 8000cf2:	1b92      	subs	r2, r2, r6
 8000cf4:	4090      	lsls	r0, r2
 8000cf6:	4303      	orrs	r3, r0
 8000cf8:	1e5a      	subs	r2, r3, #1
 8000cfa:	4193      	sbcs	r3, r2
 8000cfc:	431c      	orrs	r4, r3
 8000cfe:	e67e      	b.n	80009fe <__aeabi_dadd+0x322>
 8000d00:	185c      	adds	r4, r3, r1
 8000d02:	428c      	cmp	r4, r1
 8000d04:	4189      	sbcs	r1, r1
 8000d06:	4440      	add	r0, r8
 8000d08:	4249      	negs	r1, r1
 8000d0a:	1847      	adds	r7, r0, r1
 8000d0c:	e6dd      	b.n	8000aca <__aeabi_dadd+0x3ee>
 8000d0e:	0023      	movs	r3, r4
 8000d10:	433b      	orrs	r3, r7
 8000d12:	d100      	bne.n	8000d16 <__aeabi_dadd+0x63a>
 8000d14:	e6ad      	b.n	8000a72 <__aeabi_dadd+0x396>
 8000d16:	e606      	b.n	8000926 <__aeabi_dadd+0x24a>
 8000d18:	0744      	lsls	r4, r0, #29
 8000d1a:	4323      	orrs	r3, r4
 8000d1c:	2480      	movs	r4, #128	; 0x80
 8000d1e:	08c0      	lsrs	r0, r0, #3
 8000d20:	0324      	lsls	r4, r4, #12
 8000d22:	4220      	tst	r0, r4
 8000d24:	d008      	beq.n	8000d38 <__aeabi_dadd+0x65c>
 8000d26:	4642      	mov	r2, r8
 8000d28:	08d6      	lsrs	r6, r2, #3
 8000d2a:	4226      	tst	r6, r4
 8000d2c:	d104      	bne.n	8000d38 <__aeabi_dadd+0x65c>
 8000d2e:	4655      	mov	r5, sl
 8000d30:	0030      	movs	r0, r6
 8000d32:	08cb      	lsrs	r3, r1, #3
 8000d34:	0751      	lsls	r1, r2, #29
 8000d36:	430b      	orrs	r3, r1
 8000d38:	0f5a      	lsrs	r2, r3, #29
 8000d3a:	00db      	lsls	r3, r3, #3
 8000d3c:	08db      	lsrs	r3, r3, #3
 8000d3e:	0752      	lsls	r2, r2, #29
 8000d40:	4313      	orrs	r3, r2
 8000d42:	e619      	b.n	8000978 <__aeabi_dadd+0x29c>
 8000d44:	2300      	movs	r3, #0
 8000d46:	4a01      	ldr	r2, [pc, #4]	; (8000d4c <__aeabi_dadd+0x670>)
 8000d48:	001f      	movs	r7, r3
 8000d4a:	e55e      	b.n	800080a <__aeabi_dadd+0x12e>
 8000d4c:	000007ff 	.word	0x000007ff
 8000d50:	ff7fffff 	.word	0xff7fffff

08000d54 <__aeabi_ddiv>:
 8000d54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d56:	4657      	mov	r7, sl
 8000d58:	464e      	mov	r6, r9
 8000d5a:	4645      	mov	r5, r8
 8000d5c:	46de      	mov	lr, fp
 8000d5e:	b5e0      	push	{r5, r6, r7, lr}
 8000d60:	4681      	mov	r9, r0
 8000d62:	0005      	movs	r5, r0
 8000d64:	030c      	lsls	r4, r1, #12
 8000d66:	0048      	lsls	r0, r1, #1
 8000d68:	4692      	mov	sl, r2
 8000d6a:	001f      	movs	r7, r3
 8000d6c:	b085      	sub	sp, #20
 8000d6e:	0b24      	lsrs	r4, r4, #12
 8000d70:	0d40      	lsrs	r0, r0, #21
 8000d72:	0fce      	lsrs	r6, r1, #31
 8000d74:	2800      	cmp	r0, #0
 8000d76:	d100      	bne.n	8000d7a <__aeabi_ddiv+0x26>
 8000d78:	e156      	b.n	8001028 <__aeabi_ddiv+0x2d4>
 8000d7a:	4bd4      	ldr	r3, [pc, #848]	; (80010cc <__aeabi_ddiv+0x378>)
 8000d7c:	4298      	cmp	r0, r3
 8000d7e:	d100      	bne.n	8000d82 <__aeabi_ddiv+0x2e>
 8000d80:	e172      	b.n	8001068 <__aeabi_ddiv+0x314>
 8000d82:	0f6b      	lsrs	r3, r5, #29
 8000d84:	00e4      	lsls	r4, r4, #3
 8000d86:	431c      	orrs	r4, r3
 8000d88:	2380      	movs	r3, #128	; 0x80
 8000d8a:	041b      	lsls	r3, r3, #16
 8000d8c:	4323      	orrs	r3, r4
 8000d8e:	4698      	mov	r8, r3
 8000d90:	4bcf      	ldr	r3, [pc, #828]	; (80010d0 <__aeabi_ddiv+0x37c>)
 8000d92:	00ed      	lsls	r5, r5, #3
 8000d94:	469b      	mov	fp, r3
 8000d96:	2300      	movs	r3, #0
 8000d98:	4699      	mov	r9, r3
 8000d9a:	4483      	add	fp, r0
 8000d9c:	9300      	str	r3, [sp, #0]
 8000d9e:	033c      	lsls	r4, r7, #12
 8000da0:	007b      	lsls	r3, r7, #1
 8000da2:	4650      	mov	r0, sl
 8000da4:	0b24      	lsrs	r4, r4, #12
 8000da6:	0d5b      	lsrs	r3, r3, #21
 8000da8:	0fff      	lsrs	r7, r7, #31
 8000daa:	2b00      	cmp	r3, #0
 8000dac:	d100      	bne.n	8000db0 <__aeabi_ddiv+0x5c>
 8000dae:	e11f      	b.n	8000ff0 <__aeabi_ddiv+0x29c>
 8000db0:	4ac6      	ldr	r2, [pc, #792]	; (80010cc <__aeabi_ddiv+0x378>)
 8000db2:	4293      	cmp	r3, r2
 8000db4:	d100      	bne.n	8000db8 <__aeabi_ddiv+0x64>
 8000db6:	e162      	b.n	800107e <__aeabi_ddiv+0x32a>
 8000db8:	49c5      	ldr	r1, [pc, #788]	; (80010d0 <__aeabi_ddiv+0x37c>)
 8000dba:	0f42      	lsrs	r2, r0, #29
 8000dbc:	468c      	mov	ip, r1
 8000dbe:	00e4      	lsls	r4, r4, #3
 8000dc0:	4659      	mov	r1, fp
 8000dc2:	4314      	orrs	r4, r2
 8000dc4:	2280      	movs	r2, #128	; 0x80
 8000dc6:	4463      	add	r3, ip
 8000dc8:	0412      	lsls	r2, r2, #16
 8000dca:	1acb      	subs	r3, r1, r3
 8000dcc:	4314      	orrs	r4, r2
 8000dce:	469b      	mov	fp, r3
 8000dd0:	00c2      	lsls	r2, r0, #3
 8000dd2:	2000      	movs	r0, #0
 8000dd4:	0033      	movs	r3, r6
 8000dd6:	407b      	eors	r3, r7
 8000dd8:	469a      	mov	sl, r3
 8000dda:	464b      	mov	r3, r9
 8000ddc:	2b0f      	cmp	r3, #15
 8000dde:	d827      	bhi.n	8000e30 <__aeabi_ddiv+0xdc>
 8000de0:	49bc      	ldr	r1, [pc, #752]	; (80010d4 <__aeabi_ddiv+0x380>)
 8000de2:	009b      	lsls	r3, r3, #2
 8000de4:	58cb      	ldr	r3, [r1, r3]
 8000de6:	469f      	mov	pc, r3
 8000de8:	46b2      	mov	sl, r6
 8000dea:	9b00      	ldr	r3, [sp, #0]
 8000dec:	2b02      	cmp	r3, #2
 8000dee:	d016      	beq.n	8000e1e <__aeabi_ddiv+0xca>
 8000df0:	2b03      	cmp	r3, #3
 8000df2:	d100      	bne.n	8000df6 <__aeabi_ddiv+0xa2>
 8000df4:	e28e      	b.n	8001314 <__aeabi_ddiv+0x5c0>
 8000df6:	2b01      	cmp	r3, #1
 8000df8:	d000      	beq.n	8000dfc <__aeabi_ddiv+0xa8>
 8000dfa:	e0d9      	b.n	8000fb0 <__aeabi_ddiv+0x25c>
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	2400      	movs	r4, #0
 8000e00:	2500      	movs	r5, #0
 8000e02:	4652      	mov	r2, sl
 8000e04:	051b      	lsls	r3, r3, #20
 8000e06:	4323      	orrs	r3, r4
 8000e08:	07d2      	lsls	r2, r2, #31
 8000e0a:	4313      	orrs	r3, r2
 8000e0c:	0028      	movs	r0, r5
 8000e0e:	0019      	movs	r1, r3
 8000e10:	b005      	add	sp, #20
 8000e12:	bcf0      	pop	{r4, r5, r6, r7}
 8000e14:	46bb      	mov	fp, r7
 8000e16:	46b2      	mov	sl, r6
 8000e18:	46a9      	mov	r9, r5
 8000e1a:	46a0      	mov	r8, r4
 8000e1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e1e:	2400      	movs	r4, #0
 8000e20:	2500      	movs	r5, #0
 8000e22:	4baa      	ldr	r3, [pc, #680]	; (80010cc <__aeabi_ddiv+0x378>)
 8000e24:	e7ed      	b.n	8000e02 <__aeabi_ddiv+0xae>
 8000e26:	46ba      	mov	sl, r7
 8000e28:	46a0      	mov	r8, r4
 8000e2a:	0015      	movs	r5, r2
 8000e2c:	9000      	str	r0, [sp, #0]
 8000e2e:	e7dc      	b.n	8000dea <__aeabi_ddiv+0x96>
 8000e30:	4544      	cmp	r4, r8
 8000e32:	d200      	bcs.n	8000e36 <__aeabi_ddiv+0xe2>
 8000e34:	e1c7      	b.n	80011c6 <__aeabi_ddiv+0x472>
 8000e36:	d100      	bne.n	8000e3a <__aeabi_ddiv+0xe6>
 8000e38:	e1c2      	b.n	80011c0 <__aeabi_ddiv+0x46c>
 8000e3a:	2301      	movs	r3, #1
 8000e3c:	425b      	negs	r3, r3
 8000e3e:	469c      	mov	ip, r3
 8000e40:	002e      	movs	r6, r5
 8000e42:	4640      	mov	r0, r8
 8000e44:	2500      	movs	r5, #0
 8000e46:	44e3      	add	fp, ip
 8000e48:	0223      	lsls	r3, r4, #8
 8000e4a:	0e14      	lsrs	r4, r2, #24
 8000e4c:	431c      	orrs	r4, r3
 8000e4e:	0c1b      	lsrs	r3, r3, #16
 8000e50:	4699      	mov	r9, r3
 8000e52:	0423      	lsls	r3, r4, #16
 8000e54:	0c1f      	lsrs	r7, r3, #16
 8000e56:	0212      	lsls	r2, r2, #8
 8000e58:	4649      	mov	r1, r9
 8000e5a:	9200      	str	r2, [sp, #0]
 8000e5c:	9701      	str	r7, [sp, #4]
 8000e5e:	f7ff f9f5 	bl	800024c <__aeabi_uidivmod>
 8000e62:	0002      	movs	r2, r0
 8000e64:	437a      	muls	r2, r7
 8000e66:	040b      	lsls	r3, r1, #16
 8000e68:	0c31      	lsrs	r1, r6, #16
 8000e6a:	4680      	mov	r8, r0
 8000e6c:	4319      	orrs	r1, r3
 8000e6e:	428a      	cmp	r2, r1
 8000e70:	d907      	bls.n	8000e82 <__aeabi_ddiv+0x12e>
 8000e72:	2301      	movs	r3, #1
 8000e74:	425b      	negs	r3, r3
 8000e76:	469c      	mov	ip, r3
 8000e78:	1909      	adds	r1, r1, r4
 8000e7a:	44e0      	add	r8, ip
 8000e7c:	428c      	cmp	r4, r1
 8000e7e:	d800      	bhi.n	8000e82 <__aeabi_ddiv+0x12e>
 8000e80:	e207      	b.n	8001292 <__aeabi_ddiv+0x53e>
 8000e82:	1a88      	subs	r0, r1, r2
 8000e84:	4649      	mov	r1, r9
 8000e86:	f7ff f9e1 	bl	800024c <__aeabi_uidivmod>
 8000e8a:	0409      	lsls	r1, r1, #16
 8000e8c:	468c      	mov	ip, r1
 8000e8e:	0431      	lsls	r1, r6, #16
 8000e90:	4666      	mov	r6, ip
 8000e92:	9a01      	ldr	r2, [sp, #4]
 8000e94:	0c09      	lsrs	r1, r1, #16
 8000e96:	4342      	muls	r2, r0
 8000e98:	0003      	movs	r3, r0
 8000e9a:	4331      	orrs	r1, r6
 8000e9c:	428a      	cmp	r2, r1
 8000e9e:	d904      	bls.n	8000eaa <__aeabi_ddiv+0x156>
 8000ea0:	1909      	adds	r1, r1, r4
 8000ea2:	3b01      	subs	r3, #1
 8000ea4:	428c      	cmp	r4, r1
 8000ea6:	d800      	bhi.n	8000eaa <__aeabi_ddiv+0x156>
 8000ea8:	e1ed      	b.n	8001286 <__aeabi_ddiv+0x532>
 8000eaa:	1a88      	subs	r0, r1, r2
 8000eac:	4642      	mov	r2, r8
 8000eae:	0412      	lsls	r2, r2, #16
 8000eb0:	431a      	orrs	r2, r3
 8000eb2:	4690      	mov	r8, r2
 8000eb4:	4641      	mov	r1, r8
 8000eb6:	9b00      	ldr	r3, [sp, #0]
 8000eb8:	040e      	lsls	r6, r1, #16
 8000eba:	0c1b      	lsrs	r3, r3, #16
 8000ebc:	001f      	movs	r7, r3
 8000ebe:	9302      	str	r3, [sp, #8]
 8000ec0:	9b00      	ldr	r3, [sp, #0]
 8000ec2:	0c36      	lsrs	r6, r6, #16
 8000ec4:	041b      	lsls	r3, r3, #16
 8000ec6:	0c19      	lsrs	r1, r3, #16
 8000ec8:	000b      	movs	r3, r1
 8000eca:	4373      	muls	r3, r6
 8000ecc:	0c12      	lsrs	r2, r2, #16
 8000ece:	437e      	muls	r6, r7
 8000ed0:	9103      	str	r1, [sp, #12]
 8000ed2:	4351      	muls	r1, r2
 8000ed4:	437a      	muls	r2, r7
 8000ed6:	0c1f      	lsrs	r7, r3, #16
 8000ed8:	46bc      	mov	ip, r7
 8000eda:	1876      	adds	r6, r6, r1
 8000edc:	4466      	add	r6, ip
 8000ede:	42b1      	cmp	r1, r6
 8000ee0:	d903      	bls.n	8000eea <__aeabi_ddiv+0x196>
 8000ee2:	2180      	movs	r1, #128	; 0x80
 8000ee4:	0249      	lsls	r1, r1, #9
 8000ee6:	468c      	mov	ip, r1
 8000ee8:	4462      	add	r2, ip
 8000eea:	0c31      	lsrs	r1, r6, #16
 8000eec:	188a      	adds	r2, r1, r2
 8000eee:	0431      	lsls	r1, r6, #16
 8000ef0:	041e      	lsls	r6, r3, #16
 8000ef2:	0c36      	lsrs	r6, r6, #16
 8000ef4:	198e      	adds	r6, r1, r6
 8000ef6:	4290      	cmp	r0, r2
 8000ef8:	d302      	bcc.n	8000f00 <__aeabi_ddiv+0x1ac>
 8000efa:	d112      	bne.n	8000f22 <__aeabi_ddiv+0x1ce>
 8000efc:	42b5      	cmp	r5, r6
 8000efe:	d210      	bcs.n	8000f22 <__aeabi_ddiv+0x1ce>
 8000f00:	4643      	mov	r3, r8
 8000f02:	1e59      	subs	r1, r3, #1
 8000f04:	9b00      	ldr	r3, [sp, #0]
 8000f06:	469c      	mov	ip, r3
 8000f08:	4465      	add	r5, ip
 8000f0a:	001f      	movs	r7, r3
 8000f0c:	429d      	cmp	r5, r3
 8000f0e:	419b      	sbcs	r3, r3
 8000f10:	425b      	negs	r3, r3
 8000f12:	191b      	adds	r3, r3, r4
 8000f14:	18c0      	adds	r0, r0, r3
 8000f16:	4284      	cmp	r4, r0
 8000f18:	d200      	bcs.n	8000f1c <__aeabi_ddiv+0x1c8>
 8000f1a:	e1a0      	b.n	800125e <__aeabi_ddiv+0x50a>
 8000f1c:	d100      	bne.n	8000f20 <__aeabi_ddiv+0x1cc>
 8000f1e:	e19b      	b.n	8001258 <__aeabi_ddiv+0x504>
 8000f20:	4688      	mov	r8, r1
 8000f22:	1bae      	subs	r6, r5, r6
 8000f24:	42b5      	cmp	r5, r6
 8000f26:	41ad      	sbcs	r5, r5
 8000f28:	1a80      	subs	r0, r0, r2
 8000f2a:	426d      	negs	r5, r5
 8000f2c:	1b40      	subs	r0, r0, r5
 8000f2e:	4284      	cmp	r4, r0
 8000f30:	d100      	bne.n	8000f34 <__aeabi_ddiv+0x1e0>
 8000f32:	e1d5      	b.n	80012e0 <__aeabi_ddiv+0x58c>
 8000f34:	4649      	mov	r1, r9
 8000f36:	f7ff f989 	bl	800024c <__aeabi_uidivmod>
 8000f3a:	9a01      	ldr	r2, [sp, #4]
 8000f3c:	040b      	lsls	r3, r1, #16
 8000f3e:	4342      	muls	r2, r0
 8000f40:	0c31      	lsrs	r1, r6, #16
 8000f42:	0005      	movs	r5, r0
 8000f44:	4319      	orrs	r1, r3
 8000f46:	428a      	cmp	r2, r1
 8000f48:	d900      	bls.n	8000f4c <__aeabi_ddiv+0x1f8>
 8000f4a:	e16c      	b.n	8001226 <__aeabi_ddiv+0x4d2>
 8000f4c:	1a88      	subs	r0, r1, r2
 8000f4e:	4649      	mov	r1, r9
 8000f50:	f7ff f97c 	bl	800024c <__aeabi_uidivmod>
 8000f54:	9a01      	ldr	r2, [sp, #4]
 8000f56:	0436      	lsls	r6, r6, #16
 8000f58:	4342      	muls	r2, r0
 8000f5a:	0409      	lsls	r1, r1, #16
 8000f5c:	0c36      	lsrs	r6, r6, #16
 8000f5e:	0003      	movs	r3, r0
 8000f60:	430e      	orrs	r6, r1
 8000f62:	42b2      	cmp	r2, r6
 8000f64:	d900      	bls.n	8000f68 <__aeabi_ddiv+0x214>
 8000f66:	e153      	b.n	8001210 <__aeabi_ddiv+0x4bc>
 8000f68:	9803      	ldr	r0, [sp, #12]
 8000f6a:	1ab6      	subs	r6, r6, r2
 8000f6c:	0002      	movs	r2, r0
 8000f6e:	042d      	lsls	r5, r5, #16
 8000f70:	431d      	orrs	r5, r3
 8000f72:	9f02      	ldr	r7, [sp, #8]
 8000f74:	042b      	lsls	r3, r5, #16
 8000f76:	0c1b      	lsrs	r3, r3, #16
 8000f78:	435a      	muls	r2, r3
 8000f7a:	437b      	muls	r3, r7
 8000f7c:	469c      	mov	ip, r3
 8000f7e:	0c29      	lsrs	r1, r5, #16
 8000f80:	4348      	muls	r0, r1
 8000f82:	0c13      	lsrs	r3, r2, #16
 8000f84:	4484      	add	ip, r0
 8000f86:	4463      	add	r3, ip
 8000f88:	4379      	muls	r1, r7
 8000f8a:	4298      	cmp	r0, r3
 8000f8c:	d903      	bls.n	8000f96 <__aeabi_ddiv+0x242>
 8000f8e:	2080      	movs	r0, #128	; 0x80
 8000f90:	0240      	lsls	r0, r0, #9
 8000f92:	4684      	mov	ip, r0
 8000f94:	4461      	add	r1, ip
 8000f96:	0c18      	lsrs	r0, r3, #16
 8000f98:	0412      	lsls	r2, r2, #16
 8000f9a:	041b      	lsls	r3, r3, #16
 8000f9c:	0c12      	lsrs	r2, r2, #16
 8000f9e:	1841      	adds	r1, r0, r1
 8000fa0:	189b      	adds	r3, r3, r2
 8000fa2:	428e      	cmp	r6, r1
 8000fa4:	d200      	bcs.n	8000fa8 <__aeabi_ddiv+0x254>
 8000fa6:	e0ff      	b.n	80011a8 <__aeabi_ddiv+0x454>
 8000fa8:	d100      	bne.n	8000fac <__aeabi_ddiv+0x258>
 8000faa:	e0fa      	b.n	80011a2 <__aeabi_ddiv+0x44e>
 8000fac:	2301      	movs	r3, #1
 8000fae:	431d      	orrs	r5, r3
 8000fb0:	4a49      	ldr	r2, [pc, #292]	; (80010d8 <__aeabi_ddiv+0x384>)
 8000fb2:	445a      	add	r2, fp
 8000fb4:	2a00      	cmp	r2, #0
 8000fb6:	dc00      	bgt.n	8000fba <__aeabi_ddiv+0x266>
 8000fb8:	e0aa      	b.n	8001110 <__aeabi_ddiv+0x3bc>
 8000fba:	076b      	lsls	r3, r5, #29
 8000fbc:	d000      	beq.n	8000fc0 <__aeabi_ddiv+0x26c>
 8000fbe:	e13d      	b.n	800123c <__aeabi_ddiv+0x4e8>
 8000fc0:	08ed      	lsrs	r5, r5, #3
 8000fc2:	4643      	mov	r3, r8
 8000fc4:	01db      	lsls	r3, r3, #7
 8000fc6:	d506      	bpl.n	8000fd6 <__aeabi_ddiv+0x282>
 8000fc8:	4642      	mov	r2, r8
 8000fca:	4b44      	ldr	r3, [pc, #272]	; (80010dc <__aeabi_ddiv+0x388>)
 8000fcc:	401a      	ands	r2, r3
 8000fce:	4690      	mov	r8, r2
 8000fd0:	2280      	movs	r2, #128	; 0x80
 8000fd2:	00d2      	lsls	r2, r2, #3
 8000fd4:	445a      	add	r2, fp
 8000fd6:	4b42      	ldr	r3, [pc, #264]	; (80010e0 <__aeabi_ddiv+0x38c>)
 8000fd8:	429a      	cmp	r2, r3
 8000fda:	dd00      	ble.n	8000fde <__aeabi_ddiv+0x28a>
 8000fdc:	e71f      	b.n	8000e1e <__aeabi_ddiv+0xca>
 8000fde:	4643      	mov	r3, r8
 8000fe0:	075b      	lsls	r3, r3, #29
 8000fe2:	431d      	orrs	r5, r3
 8000fe4:	4643      	mov	r3, r8
 8000fe6:	0552      	lsls	r2, r2, #21
 8000fe8:	025c      	lsls	r4, r3, #9
 8000fea:	0b24      	lsrs	r4, r4, #12
 8000fec:	0d53      	lsrs	r3, r2, #21
 8000fee:	e708      	b.n	8000e02 <__aeabi_ddiv+0xae>
 8000ff0:	4652      	mov	r2, sl
 8000ff2:	4322      	orrs	r2, r4
 8000ff4:	d100      	bne.n	8000ff8 <__aeabi_ddiv+0x2a4>
 8000ff6:	e07b      	b.n	80010f0 <__aeabi_ddiv+0x39c>
 8000ff8:	2c00      	cmp	r4, #0
 8000ffa:	d100      	bne.n	8000ffe <__aeabi_ddiv+0x2aa>
 8000ffc:	e0fa      	b.n	80011f4 <__aeabi_ddiv+0x4a0>
 8000ffe:	0020      	movs	r0, r4
 8001000:	f001 f952 	bl	80022a8 <__clzsi2>
 8001004:	0002      	movs	r2, r0
 8001006:	3a0b      	subs	r2, #11
 8001008:	231d      	movs	r3, #29
 800100a:	0001      	movs	r1, r0
 800100c:	1a9b      	subs	r3, r3, r2
 800100e:	4652      	mov	r2, sl
 8001010:	3908      	subs	r1, #8
 8001012:	40da      	lsrs	r2, r3
 8001014:	408c      	lsls	r4, r1
 8001016:	4314      	orrs	r4, r2
 8001018:	4652      	mov	r2, sl
 800101a:	408a      	lsls	r2, r1
 800101c:	4b31      	ldr	r3, [pc, #196]	; (80010e4 <__aeabi_ddiv+0x390>)
 800101e:	4458      	add	r0, fp
 8001020:	469b      	mov	fp, r3
 8001022:	4483      	add	fp, r0
 8001024:	2000      	movs	r0, #0
 8001026:	e6d5      	b.n	8000dd4 <__aeabi_ddiv+0x80>
 8001028:	464b      	mov	r3, r9
 800102a:	4323      	orrs	r3, r4
 800102c:	4698      	mov	r8, r3
 800102e:	d044      	beq.n	80010ba <__aeabi_ddiv+0x366>
 8001030:	2c00      	cmp	r4, #0
 8001032:	d100      	bne.n	8001036 <__aeabi_ddiv+0x2e2>
 8001034:	e0ce      	b.n	80011d4 <__aeabi_ddiv+0x480>
 8001036:	0020      	movs	r0, r4
 8001038:	f001 f936 	bl	80022a8 <__clzsi2>
 800103c:	0001      	movs	r1, r0
 800103e:	0002      	movs	r2, r0
 8001040:	390b      	subs	r1, #11
 8001042:	231d      	movs	r3, #29
 8001044:	1a5b      	subs	r3, r3, r1
 8001046:	4649      	mov	r1, r9
 8001048:	0010      	movs	r0, r2
 800104a:	40d9      	lsrs	r1, r3
 800104c:	3808      	subs	r0, #8
 800104e:	4084      	lsls	r4, r0
 8001050:	000b      	movs	r3, r1
 8001052:	464d      	mov	r5, r9
 8001054:	4323      	orrs	r3, r4
 8001056:	4698      	mov	r8, r3
 8001058:	4085      	lsls	r5, r0
 800105a:	4823      	ldr	r0, [pc, #140]	; (80010e8 <__aeabi_ddiv+0x394>)
 800105c:	1a83      	subs	r3, r0, r2
 800105e:	469b      	mov	fp, r3
 8001060:	2300      	movs	r3, #0
 8001062:	4699      	mov	r9, r3
 8001064:	9300      	str	r3, [sp, #0]
 8001066:	e69a      	b.n	8000d9e <__aeabi_ddiv+0x4a>
 8001068:	464b      	mov	r3, r9
 800106a:	4323      	orrs	r3, r4
 800106c:	4698      	mov	r8, r3
 800106e:	d11d      	bne.n	80010ac <__aeabi_ddiv+0x358>
 8001070:	2308      	movs	r3, #8
 8001072:	4699      	mov	r9, r3
 8001074:	3b06      	subs	r3, #6
 8001076:	2500      	movs	r5, #0
 8001078:	4683      	mov	fp, r0
 800107a:	9300      	str	r3, [sp, #0]
 800107c:	e68f      	b.n	8000d9e <__aeabi_ddiv+0x4a>
 800107e:	4652      	mov	r2, sl
 8001080:	4322      	orrs	r2, r4
 8001082:	d109      	bne.n	8001098 <__aeabi_ddiv+0x344>
 8001084:	2302      	movs	r3, #2
 8001086:	4649      	mov	r1, r9
 8001088:	4319      	orrs	r1, r3
 800108a:	4b18      	ldr	r3, [pc, #96]	; (80010ec <__aeabi_ddiv+0x398>)
 800108c:	4689      	mov	r9, r1
 800108e:	469c      	mov	ip, r3
 8001090:	2400      	movs	r4, #0
 8001092:	2002      	movs	r0, #2
 8001094:	44e3      	add	fp, ip
 8001096:	e69d      	b.n	8000dd4 <__aeabi_ddiv+0x80>
 8001098:	2303      	movs	r3, #3
 800109a:	464a      	mov	r2, r9
 800109c:	431a      	orrs	r2, r3
 800109e:	4b13      	ldr	r3, [pc, #76]	; (80010ec <__aeabi_ddiv+0x398>)
 80010a0:	4691      	mov	r9, r2
 80010a2:	469c      	mov	ip, r3
 80010a4:	4652      	mov	r2, sl
 80010a6:	2003      	movs	r0, #3
 80010a8:	44e3      	add	fp, ip
 80010aa:	e693      	b.n	8000dd4 <__aeabi_ddiv+0x80>
 80010ac:	230c      	movs	r3, #12
 80010ae:	4699      	mov	r9, r3
 80010b0:	3b09      	subs	r3, #9
 80010b2:	46a0      	mov	r8, r4
 80010b4:	4683      	mov	fp, r0
 80010b6:	9300      	str	r3, [sp, #0]
 80010b8:	e671      	b.n	8000d9e <__aeabi_ddiv+0x4a>
 80010ba:	2304      	movs	r3, #4
 80010bc:	4699      	mov	r9, r3
 80010be:	2300      	movs	r3, #0
 80010c0:	469b      	mov	fp, r3
 80010c2:	3301      	adds	r3, #1
 80010c4:	2500      	movs	r5, #0
 80010c6:	9300      	str	r3, [sp, #0]
 80010c8:	e669      	b.n	8000d9e <__aeabi_ddiv+0x4a>
 80010ca:	46c0      	nop			; (mov r8, r8)
 80010cc:	000007ff 	.word	0x000007ff
 80010d0:	fffffc01 	.word	0xfffffc01
 80010d4:	08006d2c 	.word	0x08006d2c
 80010d8:	000003ff 	.word	0x000003ff
 80010dc:	feffffff 	.word	0xfeffffff
 80010e0:	000007fe 	.word	0x000007fe
 80010e4:	000003f3 	.word	0x000003f3
 80010e8:	fffffc0d 	.word	0xfffffc0d
 80010ec:	fffff801 	.word	0xfffff801
 80010f0:	4649      	mov	r1, r9
 80010f2:	2301      	movs	r3, #1
 80010f4:	4319      	orrs	r1, r3
 80010f6:	4689      	mov	r9, r1
 80010f8:	2400      	movs	r4, #0
 80010fa:	2001      	movs	r0, #1
 80010fc:	e66a      	b.n	8000dd4 <__aeabi_ddiv+0x80>
 80010fe:	2300      	movs	r3, #0
 8001100:	2480      	movs	r4, #128	; 0x80
 8001102:	469a      	mov	sl, r3
 8001104:	2500      	movs	r5, #0
 8001106:	4b8a      	ldr	r3, [pc, #552]	; (8001330 <__aeabi_ddiv+0x5dc>)
 8001108:	0324      	lsls	r4, r4, #12
 800110a:	e67a      	b.n	8000e02 <__aeabi_ddiv+0xae>
 800110c:	2501      	movs	r5, #1
 800110e:	426d      	negs	r5, r5
 8001110:	2301      	movs	r3, #1
 8001112:	1a9b      	subs	r3, r3, r2
 8001114:	2b38      	cmp	r3, #56	; 0x38
 8001116:	dd00      	ble.n	800111a <__aeabi_ddiv+0x3c6>
 8001118:	e670      	b.n	8000dfc <__aeabi_ddiv+0xa8>
 800111a:	2b1f      	cmp	r3, #31
 800111c:	dc00      	bgt.n	8001120 <__aeabi_ddiv+0x3cc>
 800111e:	e0bf      	b.n	80012a0 <__aeabi_ddiv+0x54c>
 8001120:	211f      	movs	r1, #31
 8001122:	4249      	negs	r1, r1
 8001124:	1a8a      	subs	r2, r1, r2
 8001126:	4641      	mov	r1, r8
 8001128:	40d1      	lsrs	r1, r2
 800112a:	000a      	movs	r2, r1
 800112c:	2b20      	cmp	r3, #32
 800112e:	d004      	beq.n	800113a <__aeabi_ddiv+0x3e6>
 8001130:	4641      	mov	r1, r8
 8001132:	4b80      	ldr	r3, [pc, #512]	; (8001334 <__aeabi_ddiv+0x5e0>)
 8001134:	445b      	add	r3, fp
 8001136:	4099      	lsls	r1, r3
 8001138:	430d      	orrs	r5, r1
 800113a:	1e6b      	subs	r3, r5, #1
 800113c:	419d      	sbcs	r5, r3
 800113e:	2307      	movs	r3, #7
 8001140:	432a      	orrs	r2, r5
 8001142:	001d      	movs	r5, r3
 8001144:	2400      	movs	r4, #0
 8001146:	4015      	ands	r5, r2
 8001148:	4213      	tst	r3, r2
 800114a:	d100      	bne.n	800114e <__aeabi_ddiv+0x3fa>
 800114c:	e0d4      	b.n	80012f8 <__aeabi_ddiv+0x5a4>
 800114e:	210f      	movs	r1, #15
 8001150:	2300      	movs	r3, #0
 8001152:	4011      	ands	r1, r2
 8001154:	2904      	cmp	r1, #4
 8001156:	d100      	bne.n	800115a <__aeabi_ddiv+0x406>
 8001158:	e0cb      	b.n	80012f2 <__aeabi_ddiv+0x59e>
 800115a:	1d11      	adds	r1, r2, #4
 800115c:	4291      	cmp	r1, r2
 800115e:	4192      	sbcs	r2, r2
 8001160:	4252      	negs	r2, r2
 8001162:	189b      	adds	r3, r3, r2
 8001164:	000a      	movs	r2, r1
 8001166:	0219      	lsls	r1, r3, #8
 8001168:	d400      	bmi.n	800116c <__aeabi_ddiv+0x418>
 800116a:	e0c2      	b.n	80012f2 <__aeabi_ddiv+0x59e>
 800116c:	2301      	movs	r3, #1
 800116e:	2400      	movs	r4, #0
 8001170:	2500      	movs	r5, #0
 8001172:	e646      	b.n	8000e02 <__aeabi_ddiv+0xae>
 8001174:	2380      	movs	r3, #128	; 0x80
 8001176:	4641      	mov	r1, r8
 8001178:	031b      	lsls	r3, r3, #12
 800117a:	4219      	tst	r1, r3
 800117c:	d008      	beq.n	8001190 <__aeabi_ddiv+0x43c>
 800117e:	421c      	tst	r4, r3
 8001180:	d106      	bne.n	8001190 <__aeabi_ddiv+0x43c>
 8001182:	431c      	orrs	r4, r3
 8001184:	0324      	lsls	r4, r4, #12
 8001186:	46ba      	mov	sl, r7
 8001188:	0015      	movs	r5, r2
 800118a:	4b69      	ldr	r3, [pc, #420]	; (8001330 <__aeabi_ddiv+0x5dc>)
 800118c:	0b24      	lsrs	r4, r4, #12
 800118e:	e638      	b.n	8000e02 <__aeabi_ddiv+0xae>
 8001190:	2480      	movs	r4, #128	; 0x80
 8001192:	4643      	mov	r3, r8
 8001194:	0324      	lsls	r4, r4, #12
 8001196:	431c      	orrs	r4, r3
 8001198:	0324      	lsls	r4, r4, #12
 800119a:	46b2      	mov	sl, r6
 800119c:	4b64      	ldr	r3, [pc, #400]	; (8001330 <__aeabi_ddiv+0x5dc>)
 800119e:	0b24      	lsrs	r4, r4, #12
 80011a0:	e62f      	b.n	8000e02 <__aeabi_ddiv+0xae>
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d100      	bne.n	80011a8 <__aeabi_ddiv+0x454>
 80011a6:	e703      	b.n	8000fb0 <__aeabi_ddiv+0x25c>
 80011a8:	19a6      	adds	r6, r4, r6
 80011aa:	1e68      	subs	r0, r5, #1
 80011ac:	42a6      	cmp	r6, r4
 80011ae:	d200      	bcs.n	80011b2 <__aeabi_ddiv+0x45e>
 80011b0:	e08d      	b.n	80012ce <__aeabi_ddiv+0x57a>
 80011b2:	428e      	cmp	r6, r1
 80011b4:	d200      	bcs.n	80011b8 <__aeabi_ddiv+0x464>
 80011b6:	e0a3      	b.n	8001300 <__aeabi_ddiv+0x5ac>
 80011b8:	d100      	bne.n	80011bc <__aeabi_ddiv+0x468>
 80011ba:	e0b3      	b.n	8001324 <__aeabi_ddiv+0x5d0>
 80011bc:	0005      	movs	r5, r0
 80011be:	e6f5      	b.n	8000fac <__aeabi_ddiv+0x258>
 80011c0:	42aa      	cmp	r2, r5
 80011c2:	d900      	bls.n	80011c6 <__aeabi_ddiv+0x472>
 80011c4:	e639      	b.n	8000e3a <__aeabi_ddiv+0xe6>
 80011c6:	4643      	mov	r3, r8
 80011c8:	07de      	lsls	r6, r3, #31
 80011ca:	0858      	lsrs	r0, r3, #1
 80011cc:	086b      	lsrs	r3, r5, #1
 80011ce:	431e      	orrs	r6, r3
 80011d0:	07ed      	lsls	r5, r5, #31
 80011d2:	e639      	b.n	8000e48 <__aeabi_ddiv+0xf4>
 80011d4:	4648      	mov	r0, r9
 80011d6:	f001 f867 	bl	80022a8 <__clzsi2>
 80011da:	0001      	movs	r1, r0
 80011dc:	0002      	movs	r2, r0
 80011de:	3115      	adds	r1, #21
 80011e0:	3220      	adds	r2, #32
 80011e2:	291c      	cmp	r1, #28
 80011e4:	dc00      	bgt.n	80011e8 <__aeabi_ddiv+0x494>
 80011e6:	e72c      	b.n	8001042 <__aeabi_ddiv+0x2ee>
 80011e8:	464b      	mov	r3, r9
 80011ea:	3808      	subs	r0, #8
 80011ec:	4083      	lsls	r3, r0
 80011ee:	2500      	movs	r5, #0
 80011f0:	4698      	mov	r8, r3
 80011f2:	e732      	b.n	800105a <__aeabi_ddiv+0x306>
 80011f4:	f001 f858 	bl	80022a8 <__clzsi2>
 80011f8:	0003      	movs	r3, r0
 80011fa:	001a      	movs	r2, r3
 80011fc:	3215      	adds	r2, #21
 80011fe:	3020      	adds	r0, #32
 8001200:	2a1c      	cmp	r2, #28
 8001202:	dc00      	bgt.n	8001206 <__aeabi_ddiv+0x4b2>
 8001204:	e700      	b.n	8001008 <__aeabi_ddiv+0x2b4>
 8001206:	4654      	mov	r4, sl
 8001208:	3b08      	subs	r3, #8
 800120a:	2200      	movs	r2, #0
 800120c:	409c      	lsls	r4, r3
 800120e:	e705      	b.n	800101c <__aeabi_ddiv+0x2c8>
 8001210:	1936      	adds	r6, r6, r4
 8001212:	3b01      	subs	r3, #1
 8001214:	42b4      	cmp	r4, r6
 8001216:	d900      	bls.n	800121a <__aeabi_ddiv+0x4c6>
 8001218:	e6a6      	b.n	8000f68 <__aeabi_ddiv+0x214>
 800121a:	42b2      	cmp	r2, r6
 800121c:	d800      	bhi.n	8001220 <__aeabi_ddiv+0x4cc>
 800121e:	e6a3      	b.n	8000f68 <__aeabi_ddiv+0x214>
 8001220:	1e83      	subs	r3, r0, #2
 8001222:	1936      	adds	r6, r6, r4
 8001224:	e6a0      	b.n	8000f68 <__aeabi_ddiv+0x214>
 8001226:	1909      	adds	r1, r1, r4
 8001228:	3d01      	subs	r5, #1
 800122a:	428c      	cmp	r4, r1
 800122c:	d900      	bls.n	8001230 <__aeabi_ddiv+0x4dc>
 800122e:	e68d      	b.n	8000f4c <__aeabi_ddiv+0x1f8>
 8001230:	428a      	cmp	r2, r1
 8001232:	d800      	bhi.n	8001236 <__aeabi_ddiv+0x4e2>
 8001234:	e68a      	b.n	8000f4c <__aeabi_ddiv+0x1f8>
 8001236:	1e85      	subs	r5, r0, #2
 8001238:	1909      	adds	r1, r1, r4
 800123a:	e687      	b.n	8000f4c <__aeabi_ddiv+0x1f8>
 800123c:	230f      	movs	r3, #15
 800123e:	402b      	ands	r3, r5
 8001240:	2b04      	cmp	r3, #4
 8001242:	d100      	bne.n	8001246 <__aeabi_ddiv+0x4f2>
 8001244:	e6bc      	b.n	8000fc0 <__aeabi_ddiv+0x26c>
 8001246:	2305      	movs	r3, #5
 8001248:	425b      	negs	r3, r3
 800124a:	42ab      	cmp	r3, r5
 800124c:	419b      	sbcs	r3, r3
 800124e:	3504      	adds	r5, #4
 8001250:	425b      	negs	r3, r3
 8001252:	08ed      	lsrs	r5, r5, #3
 8001254:	4498      	add	r8, r3
 8001256:	e6b4      	b.n	8000fc2 <__aeabi_ddiv+0x26e>
 8001258:	42af      	cmp	r7, r5
 800125a:	d900      	bls.n	800125e <__aeabi_ddiv+0x50a>
 800125c:	e660      	b.n	8000f20 <__aeabi_ddiv+0x1cc>
 800125e:	4282      	cmp	r2, r0
 8001260:	d804      	bhi.n	800126c <__aeabi_ddiv+0x518>
 8001262:	d000      	beq.n	8001266 <__aeabi_ddiv+0x512>
 8001264:	e65c      	b.n	8000f20 <__aeabi_ddiv+0x1cc>
 8001266:	42ae      	cmp	r6, r5
 8001268:	d800      	bhi.n	800126c <__aeabi_ddiv+0x518>
 800126a:	e659      	b.n	8000f20 <__aeabi_ddiv+0x1cc>
 800126c:	2302      	movs	r3, #2
 800126e:	425b      	negs	r3, r3
 8001270:	469c      	mov	ip, r3
 8001272:	9b00      	ldr	r3, [sp, #0]
 8001274:	44e0      	add	r8, ip
 8001276:	469c      	mov	ip, r3
 8001278:	4465      	add	r5, ip
 800127a:	429d      	cmp	r5, r3
 800127c:	419b      	sbcs	r3, r3
 800127e:	425b      	negs	r3, r3
 8001280:	191b      	adds	r3, r3, r4
 8001282:	18c0      	adds	r0, r0, r3
 8001284:	e64d      	b.n	8000f22 <__aeabi_ddiv+0x1ce>
 8001286:	428a      	cmp	r2, r1
 8001288:	d800      	bhi.n	800128c <__aeabi_ddiv+0x538>
 800128a:	e60e      	b.n	8000eaa <__aeabi_ddiv+0x156>
 800128c:	1e83      	subs	r3, r0, #2
 800128e:	1909      	adds	r1, r1, r4
 8001290:	e60b      	b.n	8000eaa <__aeabi_ddiv+0x156>
 8001292:	428a      	cmp	r2, r1
 8001294:	d800      	bhi.n	8001298 <__aeabi_ddiv+0x544>
 8001296:	e5f4      	b.n	8000e82 <__aeabi_ddiv+0x12e>
 8001298:	1e83      	subs	r3, r0, #2
 800129a:	4698      	mov	r8, r3
 800129c:	1909      	adds	r1, r1, r4
 800129e:	e5f0      	b.n	8000e82 <__aeabi_ddiv+0x12e>
 80012a0:	4925      	ldr	r1, [pc, #148]	; (8001338 <__aeabi_ddiv+0x5e4>)
 80012a2:	0028      	movs	r0, r5
 80012a4:	4459      	add	r1, fp
 80012a6:	408d      	lsls	r5, r1
 80012a8:	4642      	mov	r2, r8
 80012aa:	408a      	lsls	r2, r1
 80012ac:	1e69      	subs	r1, r5, #1
 80012ae:	418d      	sbcs	r5, r1
 80012b0:	4641      	mov	r1, r8
 80012b2:	40d8      	lsrs	r0, r3
 80012b4:	40d9      	lsrs	r1, r3
 80012b6:	4302      	orrs	r2, r0
 80012b8:	432a      	orrs	r2, r5
 80012ba:	000b      	movs	r3, r1
 80012bc:	0751      	lsls	r1, r2, #29
 80012be:	d100      	bne.n	80012c2 <__aeabi_ddiv+0x56e>
 80012c0:	e751      	b.n	8001166 <__aeabi_ddiv+0x412>
 80012c2:	210f      	movs	r1, #15
 80012c4:	4011      	ands	r1, r2
 80012c6:	2904      	cmp	r1, #4
 80012c8:	d000      	beq.n	80012cc <__aeabi_ddiv+0x578>
 80012ca:	e746      	b.n	800115a <__aeabi_ddiv+0x406>
 80012cc:	e74b      	b.n	8001166 <__aeabi_ddiv+0x412>
 80012ce:	0005      	movs	r5, r0
 80012d0:	428e      	cmp	r6, r1
 80012d2:	d000      	beq.n	80012d6 <__aeabi_ddiv+0x582>
 80012d4:	e66a      	b.n	8000fac <__aeabi_ddiv+0x258>
 80012d6:	9a00      	ldr	r2, [sp, #0]
 80012d8:	4293      	cmp	r3, r2
 80012da:	d000      	beq.n	80012de <__aeabi_ddiv+0x58a>
 80012dc:	e666      	b.n	8000fac <__aeabi_ddiv+0x258>
 80012de:	e667      	b.n	8000fb0 <__aeabi_ddiv+0x25c>
 80012e0:	4a16      	ldr	r2, [pc, #88]	; (800133c <__aeabi_ddiv+0x5e8>)
 80012e2:	445a      	add	r2, fp
 80012e4:	2a00      	cmp	r2, #0
 80012e6:	dc00      	bgt.n	80012ea <__aeabi_ddiv+0x596>
 80012e8:	e710      	b.n	800110c <__aeabi_ddiv+0x3b8>
 80012ea:	2301      	movs	r3, #1
 80012ec:	2500      	movs	r5, #0
 80012ee:	4498      	add	r8, r3
 80012f0:	e667      	b.n	8000fc2 <__aeabi_ddiv+0x26e>
 80012f2:	075d      	lsls	r5, r3, #29
 80012f4:	025b      	lsls	r3, r3, #9
 80012f6:	0b1c      	lsrs	r4, r3, #12
 80012f8:	08d2      	lsrs	r2, r2, #3
 80012fa:	2300      	movs	r3, #0
 80012fc:	4315      	orrs	r5, r2
 80012fe:	e580      	b.n	8000e02 <__aeabi_ddiv+0xae>
 8001300:	9800      	ldr	r0, [sp, #0]
 8001302:	3d02      	subs	r5, #2
 8001304:	0042      	lsls	r2, r0, #1
 8001306:	4282      	cmp	r2, r0
 8001308:	41bf      	sbcs	r7, r7
 800130a:	427f      	negs	r7, r7
 800130c:	193c      	adds	r4, r7, r4
 800130e:	1936      	adds	r6, r6, r4
 8001310:	9200      	str	r2, [sp, #0]
 8001312:	e7dd      	b.n	80012d0 <__aeabi_ddiv+0x57c>
 8001314:	2480      	movs	r4, #128	; 0x80
 8001316:	4643      	mov	r3, r8
 8001318:	0324      	lsls	r4, r4, #12
 800131a:	431c      	orrs	r4, r3
 800131c:	0324      	lsls	r4, r4, #12
 800131e:	4b04      	ldr	r3, [pc, #16]	; (8001330 <__aeabi_ddiv+0x5dc>)
 8001320:	0b24      	lsrs	r4, r4, #12
 8001322:	e56e      	b.n	8000e02 <__aeabi_ddiv+0xae>
 8001324:	9a00      	ldr	r2, [sp, #0]
 8001326:	429a      	cmp	r2, r3
 8001328:	d3ea      	bcc.n	8001300 <__aeabi_ddiv+0x5ac>
 800132a:	0005      	movs	r5, r0
 800132c:	e7d3      	b.n	80012d6 <__aeabi_ddiv+0x582>
 800132e:	46c0      	nop			; (mov r8, r8)
 8001330:	000007ff 	.word	0x000007ff
 8001334:	0000043e 	.word	0x0000043e
 8001338:	0000041e 	.word	0x0000041e
 800133c:	000003ff 	.word	0x000003ff

08001340 <__eqdf2>:
 8001340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001342:	464e      	mov	r6, r9
 8001344:	4645      	mov	r5, r8
 8001346:	46de      	mov	lr, fp
 8001348:	4657      	mov	r7, sl
 800134a:	4690      	mov	r8, r2
 800134c:	b5e0      	push	{r5, r6, r7, lr}
 800134e:	0017      	movs	r7, r2
 8001350:	031a      	lsls	r2, r3, #12
 8001352:	0b12      	lsrs	r2, r2, #12
 8001354:	0005      	movs	r5, r0
 8001356:	4684      	mov	ip, r0
 8001358:	4819      	ldr	r0, [pc, #100]	; (80013c0 <__eqdf2+0x80>)
 800135a:	030e      	lsls	r6, r1, #12
 800135c:	004c      	lsls	r4, r1, #1
 800135e:	4691      	mov	r9, r2
 8001360:	005a      	lsls	r2, r3, #1
 8001362:	0fdb      	lsrs	r3, r3, #31
 8001364:	469b      	mov	fp, r3
 8001366:	0b36      	lsrs	r6, r6, #12
 8001368:	0d64      	lsrs	r4, r4, #21
 800136a:	0fc9      	lsrs	r1, r1, #31
 800136c:	0d52      	lsrs	r2, r2, #21
 800136e:	4284      	cmp	r4, r0
 8001370:	d019      	beq.n	80013a6 <__eqdf2+0x66>
 8001372:	4282      	cmp	r2, r0
 8001374:	d010      	beq.n	8001398 <__eqdf2+0x58>
 8001376:	2001      	movs	r0, #1
 8001378:	4294      	cmp	r4, r2
 800137a:	d10e      	bne.n	800139a <__eqdf2+0x5a>
 800137c:	454e      	cmp	r6, r9
 800137e:	d10c      	bne.n	800139a <__eqdf2+0x5a>
 8001380:	2001      	movs	r0, #1
 8001382:	45c4      	cmp	ip, r8
 8001384:	d109      	bne.n	800139a <__eqdf2+0x5a>
 8001386:	4559      	cmp	r1, fp
 8001388:	d017      	beq.n	80013ba <__eqdf2+0x7a>
 800138a:	2c00      	cmp	r4, #0
 800138c:	d105      	bne.n	800139a <__eqdf2+0x5a>
 800138e:	0030      	movs	r0, r6
 8001390:	4328      	orrs	r0, r5
 8001392:	1e43      	subs	r3, r0, #1
 8001394:	4198      	sbcs	r0, r3
 8001396:	e000      	b.n	800139a <__eqdf2+0x5a>
 8001398:	2001      	movs	r0, #1
 800139a:	bcf0      	pop	{r4, r5, r6, r7}
 800139c:	46bb      	mov	fp, r7
 800139e:	46b2      	mov	sl, r6
 80013a0:	46a9      	mov	r9, r5
 80013a2:	46a0      	mov	r8, r4
 80013a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013a6:	0033      	movs	r3, r6
 80013a8:	2001      	movs	r0, #1
 80013aa:	432b      	orrs	r3, r5
 80013ac:	d1f5      	bne.n	800139a <__eqdf2+0x5a>
 80013ae:	42a2      	cmp	r2, r4
 80013b0:	d1f3      	bne.n	800139a <__eqdf2+0x5a>
 80013b2:	464b      	mov	r3, r9
 80013b4:	433b      	orrs	r3, r7
 80013b6:	d1f0      	bne.n	800139a <__eqdf2+0x5a>
 80013b8:	e7e2      	b.n	8001380 <__eqdf2+0x40>
 80013ba:	2000      	movs	r0, #0
 80013bc:	e7ed      	b.n	800139a <__eqdf2+0x5a>
 80013be:	46c0      	nop			; (mov r8, r8)
 80013c0:	000007ff 	.word	0x000007ff

080013c4 <__gedf2>:
 80013c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013c6:	4647      	mov	r7, r8
 80013c8:	46ce      	mov	lr, r9
 80013ca:	0004      	movs	r4, r0
 80013cc:	0018      	movs	r0, r3
 80013ce:	0016      	movs	r6, r2
 80013d0:	031b      	lsls	r3, r3, #12
 80013d2:	0b1b      	lsrs	r3, r3, #12
 80013d4:	4d2d      	ldr	r5, [pc, #180]	; (800148c <__gedf2+0xc8>)
 80013d6:	004a      	lsls	r2, r1, #1
 80013d8:	4699      	mov	r9, r3
 80013da:	b580      	push	{r7, lr}
 80013dc:	0043      	lsls	r3, r0, #1
 80013de:	030f      	lsls	r7, r1, #12
 80013e0:	46a4      	mov	ip, r4
 80013e2:	46b0      	mov	r8, r6
 80013e4:	0b3f      	lsrs	r7, r7, #12
 80013e6:	0d52      	lsrs	r2, r2, #21
 80013e8:	0fc9      	lsrs	r1, r1, #31
 80013ea:	0d5b      	lsrs	r3, r3, #21
 80013ec:	0fc0      	lsrs	r0, r0, #31
 80013ee:	42aa      	cmp	r2, r5
 80013f0:	d021      	beq.n	8001436 <__gedf2+0x72>
 80013f2:	42ab      	cmp	r3, r5
 80013f4:	d013      	beq.n	800141e <__gedf2+0x5a>
 80013f6:	2a00      	cmp	r2, #0
 80013f8:	d122      	bne.n	8001440 <__gedf2+0x7c>
 80013fa:	433c      	orrs	r4, r7
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d102      	bne.n	8001406 <__gedf2+0x42>
 8001400:	464d      	mov	r5, r9
 8001402:	432e      	orrs	r6, r5
 8001404:	d022      	beq.n	800144c <__gedf2+0x88>
 8001406:	2c00      	cmp	r4, #0
 8001408:	d010      	beq.n	800142c <__gedf2+0x68>
 800140a:	4281      	cmp	r1, r0
 800140c:	d022      	beq.n	8001454 <__gedf2+0x90>
 800140e:	2002      	movs	r0, #2
 8001410:	3901      	subs	r1, #1
 8001412:	4008      	ands	r0, r1
 8001414:	3801      	subs	r0, #1
 8001416:	bcc0      	pop	{r6, r7}
 8001418:	46b9      	mov	r9, r7
 800141a:	46b0      	mov	r8, r6
 800141c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800141e:	464d      	mov	r5, r9
 8001420:	432e      	orrs	r6, r5
 8001422:	d129      	bne.n	8001478 <__gedf2+0xb4>
 8001424:	2a00      	cmp	r2, #0
 8001426:	d1f0      	bne.n	800140a <__gedf2+0x46>
 8001428:	433c      	orrs	r4, r7
 800142a:	d1ee      	bne.n	800140a <__gedf2+0x46>
 800142c:	2800      	cmp	r0, #0
 800142e:	d1f2      	bne.n	8001416 <__gedf2+0x52>
 8001430:	2001      	movs	r0, #1
 8001432:	4240      	negs	r0, r0
 8001434:	e7ef      	b.n	8001416 <__gedf2+0x52>
 8001436:	003d      	movs	r5, r7
 8001438:	4325      	orrs	r5, r4
 800143a:	d11d      	bne.n	8001478 <__gedf2+0xb4>
 800143c:	4293      	cmp	r3, r2
 800143e:	d0ee      	beq.n	800141e <__gedf2+0x5a>
 8001440:	2b00      	cmp	r3, #0
 8001442:	d1e2      	bne.n	800140a <__gedf2+0x46>
 8001444:	464c      	mov	r4, r9
 8001446:	4326      	orrs	r6, r4
 8001448:	d1df      	bne.n	800140a <__gedf2+0x46>
 800144a:	e7e0      	b.n	800140e <__gedf2+0x4a>
 800144c:	2000      	movs	r0, #0
 800144e:	2c00      	cmp	r4, #0
 8001450:	d0e1      	beq.n	8001416 <__gedf2+0x52>
 8001452:	e7dc      	b.n	800140e <__gedf2+0x4a>
 8001454:	429a      	cmp	r2, r3
 8001456:	dc0a      	bgt.n	800146e <__gedf2+0xaa>
 8001458:	dbe8      	blt.n	800142c <__gedf2+0x68>
 800145a:	454f      	cmp	r7, r9
 800145c:	d8d7      	bhi.n	800140e <__gedf2+0x4a>
 800145e:	d00e      	beq.n	800147e <__gedf2+0xba>
 8001460:	2000      	movs	r0, #0
 8001462:	454f      	cmp	r7, r9
 8001464:	d2d7      	bcs.n	8001416 <__gedf2+0x52>
 8001466:	2900      	cmp	r1, #0
 8001468:	d0e2      	beq.n	8001430 <__gedf2+0x6c>
 800146a:	0008      	movs	r0, r1
 800146c:	e7d3      	b.n	8001416 <__gedf2+0x52>
 800146e:	4243      	negs	r3, r0
 8001470:	4158      	adcs	r0, r3
 8001472:	0040      	lsls	r0, r0, #1
 8001474:	3801      	subs	r0, #1
 8001476:	e7ce      	b.n	8001416 <__gedf2+0x52>
 8001478:	2002      	movs	r0, #2
 800147a:	4240      	negs	r0, r0
 800147c:	e7cb      	b.n	8001416 <__gedf2+0x52>
 800147e:	45c4      	cmp	ip, r8
 8001480:	d8c5      	bhi.n	800140e <__gedf2+0x4a>
 8001482:	2000      	movs	r0, #0
 8001484:	45c4      	cmp	ip, r8
 8001486:	d2c6      	bcs.n	8001416 <__gedf2+0x52>
 8001488:	e7ed      	b.n	8001466 <__gedf2+0xa2>
 800148a:	46c0      	nop			; (mov r8, r8)
 800148c:	000007ff 	.word	0x000007ff

08001490 <__ledf2>:
 8001490:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001492:	4647      	mov	r7, r8
 8001494:	46ce      	mov	lr, r9
 8001496:	0004      	movs	r4, r0
 8001498:	0018      	movs	r0, r3
 800149a:	0016      	movs	r6, r2
 800149c:	031b      	lsls	r3, r3, #12
 800149e:	0b1b      	lsrs	r3, r3, #12
 80014a0:	4d2c      	ldr	r5, [pc, #176]	; (8001554 <__ledf2+0xc4>)
 80014a2:	004a      	lsls	r2, r1, #1
 80014a4:	4699      	mov	r9, r3
 80014a6:	b580      	push	{r7, lr}
 80014a8:	0043      	lsls	r3, r0, #1
 80014aa:	030f      	lsls	r7, r1, #12
 80014ac:	46a4      	mov	ip, r4
 80014ae:	46b0      	mov	r8, r6
 80014b0:	0b3f      	lsrs	r7, r7, #12
 80014b2:	0d52      	lsrs	r2, r2, #21
 80014b4:	0fc9      	lsrs	r1, r1, #31
 80014b6:	0d5b      	lsrs	r3, r3, #21
 80014b8:	0fc0      	lsrs	r0, r0, #31
 80014ba:	42aa      	cmp	r2, r5
 80014bc:	d00d      	beq.n	80014da <__ledf2+0x4a>
 80014be:	42ab      	cmp	r3, r5
 80014c0:	d010      	beq.n	80014e4 <__ledf2+0x54>
 80014c2:	2a00      	cmp	r2, #0
 80014c4:	d127      	bne.n	8001516 <__ledf2+0x86>
 80014c6:	433c      	orrs	r4, r7
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d111      	bne.n	80014f0 <__ledf2+0x60>
 80014cc:	464d      	mov	r5, r9
 80014ce:	432e      	orrs	r6, r5
 80014d0:	d10e      	bne.n	80014f0 <__ledf2+0x60>
 80014d2:	2000      	movs	r0, #0
 80014d4:	2c00      	cmp	r4, #0
 80014d6:	d015      	beq.n	8001504 <__ledf2+0x74>
 80014d8:	e00e      	b.n	80014f8 <__ledf2+0x68>
 80014da:	003d      	movs	r5, r7
 80014dc:	4325      	orrs	r5, r4
 80014de:	d110      	bne.n	8001502 <__ledf2+0x72>
 80014e0:	4293      	cmp	r3, r2
 80014e2:	d118      	bne.n	8001516 <__ledf2+0x86>
 80014e4:	464d      	mov	r5, r9
 80014e6:	432e      	orrs	r6, r5
 80014e8:	d10b      	bne.n	8001502 <__ledf2+0x72>
 80014ea:	2a00      	cmp	r2, #0
 80014ec:	d102      	bne.n	80014f4 <__ledf2+0x64>
 80014ee:	433c      	orrs	r4, r7
 80014f0:	2c00      	cmp	r4, #0
 80014f2:	d00b      	beq.n	800150c <__ledf2+0x7c>
 80014f4:	4281      	cmp	r1, r0
 80014f6:	d014      	beq.n	8001522 <__ledf2+0x92>
 80014f8:	2002      	movs	r0, #2
 80014fa:	3901      	subs	r1, #1
 80014fc:	4008      	ands	r0, r1
 80014fe:	3801      	subs	r0, #1
 8001500:	e000      	b.n	8001504 <__ledf2+0x74>
 8001502:	2002      	movs	r0, #2
 8001504:	bcc0      	pop	{r6, r7}
 8001506:	46b9      	mov	r9, r7
 8001508:	46b0      	mov	r8, r6
 800150a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800150c:	2800      	cmp	r0, #0
 800150e:	d1f9      	bne.n	8001504 <__ledf2+0x74>
 8001510:	2001      	movs	r0, #1
 8001512:	4240      	negs	r0, r0
 8001514:	e7f6      	b.n	8001504 <__ledf2+0x74>
 8001516:	2b00      	cmp	r3, #0
 8001518:	d1ec      	bne.n	80014f4 <__ledf2+0x64>
 800151a:	464c      	mov	r4, r9
 800151c:	4326      	orrs	r6, r4
 800151e:	d1e9      	bne.n	80014f4 <__ledf2+0x64>
 8001520:	e7ea      	b.n	80014f8 <__ledf2+0x68>
 8001522:	429a      	cmp	r2, r3
 8001524:	dd04      	ble.n	8001530 <__ledf2+0xa0>
 8001526:	4243      	negs	r3, r0
 8001528:	4158      	adcs	r0, r3
 800152a:	0040      	lsls	r0, r0, #1
 800152c:	3801      	subs	r0, #1
 800152e:	e7e9      	b.n	8001504 <__ledf2+0x74>
 8001530:	429a      	cmp	r2, r3
 8001532:	dbeb      	blt.n	800150c <__ledf2+0x7c>
 8001534:	454f      	cmp	r7, r9
 8001536:	d8df      	bhi.n	80014f8 <__ledf2+0x68>
 8001538:	d006      	beq.n	8001548 <__ledf2+0xb8>
 800153a:	2000      	movs	r0, #0
 800153c:	454f      	cmp	r7, r9
 800153e:	d2e1      	bcs.n	8001504 <__ledf2+0x74>
 8001540:	2900      	cmp	r1, #0
 8001542:	d0e5      	beq.n	8001510 <__ledf2+0x80>
 8001544:	0008      	movs	r0, r1
 8001546:	e7dd      	b.n	8001504 <__ledf2+0x74>
 8001548:	45c4      	cmp	ip, r8
 800154a:	d8d5      	bhi.n	80014f8 <__ledf2+0x68>
 800154c:	2000      	movs	r0, #0
 800154e:	45c4      	cmp	ip, r8
 8001550:	d2d8      	bcs.n	8001504 <__ledf2+0x74>
 8001552:	e7f5      	b.n	8001540 <__ledf2+0xb0>
 8001554:	000007ff 	.word	0x000007ff

08001558 <__aeabi_dmul>:
 8001558:	b5f0      	push	{r4, r5, r6, r7, lr}
 800155a:	4657      	mov	r7, sl
 800155c:	464e      	mov	r6, r9
 800155e:	4645      	mov	r5, r8
 8001560:	46de      	mov	lr, fp
 8001562:	b5e0      	push	{r5, r6, r7, lr}
 8001564:	4698      	mov	r8, r3
 8001566:	030c      	lsls	r4, r1, #12
 8001568:	004b      	lsls	r3, r1, #1
 800156a:	0006      	movs	r6, r0
 800156c:	4692      	mov	sl, r2
 800156e:	b087      	sub	sp, #28
 8001570:	0b24      	lsrs	r4, r4, #12
 8001572:	0d5b      	lsrs	r3, r3, #21
 8001574:	0fcf      	lsrs	r7, r1, #31
 8001576:	2b00      	cmp	r3, #0
 8001578:	d100      	bne.n	800157c <__aeabi_dmul+0x24>
 800157a:	e15c      	b.n	8001836 <__aeabi_dmul+0x2de>
 800157c:	4ad9      	ldr	r2, [pc, #868]	; (80018e4 <__aeabi_dmul+0x38c>)
 800157e:	4293      	cmp	r3, r2
 8001580:	d100      	bne.n	8001584 <__aeabi_dmul+0x2c>
 8001582:	e175      	b.n	8001870 <__aeabi_dmul+0x318>
 8001584:	0f42      	lsrs	r2, r0, #29
 8001586:	00e4      	lsls	r4, r4, #3
 8001588:	4314      	orrs	r4, r2
 800158a:	2280      	movs	r2, #128	; 0x80
 800158c:	0412      	lsls	r2, r2, #16
 800158e:	4314      	orrs	r4, r2
 8001590:	4ad5      	ldr	r2, [pc, #852]	; (80018e8 <__aeabi_dmul+0x390>)
 8001592:	00c5      	lsls	r5, r0, #3
 8001594:	4694      	mov	ip, r2
 8001596:	4463      	add	r3, ip
 8001598:	9300      	str	r3, [sp, #0]
 800159a:	2300      	movs	r3, #0
 800159c:	4699      	mov	r9, r3
 800159e:	469b      	mov	fp, r3
 80015a0:	4643      	mov	r3, r8
 80015a2:	4642      	mov	r2, r8
 80015a4:	031e      	lsls	r6, r3, #12
 80015a6:	0fd2      	lsrs	r2, r2, #31
 80015a8:	005b      	lsls	r3, r3, #1
 80015aa:	4650      	mov	r0, sl
 80015ac:	4690      	mov	r8, r2
 80015ae:	0b36      	lsrs	r6, r6, #12
 80015b0:	0d5b      	lsrs	r3, r3, #21
 80015b2:	d100      	bne.n	80015b6 <__aeabi_dmul+0x5e>
 80015b4:	e120      	b.n	80017f8 <__aeabi_dmul+0x2a0>
 80015b6:	4acb      	ldr	r2, [pc, #812]	; (80018e4 <__aeabi_dmul+0x38c>)
 80015b8:	4293      	cmp	r3, r2
 80015ba:	d100      	bne.n	80015be <__aeabi_dmul+0x66>
 80015bc:	e162      	b.n	8001884 <__aeabi_dmul+0x32c>
 80015be:	49ca      	ldr	r1, [pc, #808]	; (80018e8 <__aeabi_dmul+0x390>)
 80015c0:	0f42      	lsrs	r2, r0, #29
 80015c2:	468c      	mov	ip, r1
 80015c4:	9900      	ldr	r1, [sp, #0]
 80015c6:	4463      	add	r3, ip
 80015c8:	00f6      	lsls	r6, r6, #3
 80015ca:	468c      	mov	ip, r1
 80015cc:	4316      	orrs	r6, r2
 80015ce:	2280      	movs	r2, #128	; 0x80
 80015d0:	449c      	add	ip, r3
 80015d2:	0412      	lsls	r2, r2, #16
 80015d4:	4663      	mov	r3, ip
 80015d6:	4316      	orrs	r6, r2
 80015d8:	00c2      	lsls	r2, r0, #3
 80015da:	2000      	movs	r0, #0
 80015dc:	9300      	str	r3, [sp, #0]
 80015de:	9900      	ldr	r1, [sp, #0]
 80015e0:	4643      	mov	r3, r8
 80015e2:	3101      	adds	r1, #1
 80015e4:	468c      	mov	ip, r1
 80015e6:	4649      	mov	r1, r9
 80015e8:	407b      	eors	r3, r7
 80015ea:	9301      	str	r3, [sp, #4]
 80015ec:	290f      	cmp	r1, #15
 80015ee:	d826      	bhi.n	800163e <__aeabi_dmul+0xe6>
 80015f0:	4bbe      	ldr	r3, [pc, #760]	; (80018ec <__aeabi_dmul+0x394>)
 80015f2:	0089      	lsls	r1, r1, #2
 80015f4:	5859      	ldr	r1, [r3, r1]
 80015f6:	468f      	mov	pc, r1
 80015f8:	4643      	mov	r3, r8
 80015fa:	9301      	str	r3, [sp, #4]
 80015fc:	0034      	movs	r4, r6
 80015fe:	0015      	movs	r5, r2
 8001600:	4683      	mov	fp, r0
 8001602:	465b      	mov	r3, fp
 8001604:	2b02      	cmp	r3, #2
 8001606:	d016      	beq.n	8001636 <__aeabi_dmul+0xde>
 8001608:	2b03      	cmp	r3, #3
 800160a:	d100      	bne.n	800160e <__aeabi_dmul+0xb6>
 800160c:	e203      	b.n	8001a16 <__aeabi_dmul+0x4be>
 800160e:	2b01      	cmp	r3, #1
 8001610:	d000      	beq.n	8001614 <__aeabi_dmul+0xbc>
 8001612:	e0cd      	b.n	80017b0 <__aeabi_dmul+0x258>
 8001614:	2200      	movs	r2, #0
 8001616:	2400      	movs	r4, #0
 8001618:	2500      	movs	r5, #0
 800161a:	9b01      	ldr	r3, [sp, #4]
 800161c:	0512      	lsls	r2, r2, #20
 800161e:	4322      	orrs	r2, r4
 8001620:	07db      	lsls	r3, r3, #31
 8001622:	431a      	orrs	r2, r3
 8001624:	0028      	movs	r0, r5
 8001626:	0011      	movs	r1, r2
 8001628:	b007      	add	sp, #28
 800162a:	bcf0      	pop	{r4, r5, r6, r7}
 800162c:	46bb      	mov	fp, r7
 800162e:	46b2      	mov	sl, r6
 8001630:	46a9      	mov	r9, r5
 8001632:	46a0      	mov	r8, r4
 8001634:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001636:	2400      	movs	r4, #0
 8001638:	2500      	movs	r5, #0
 800163a:	4aaa      	ldr	r2, [pc, #680]	; (80018e4 <__aeabi_dmul+0x38c>)
 800163c:	e7ed      	b.n	800161a <__aeabi_dmul+0xc2>
 800163e:	0c28      	lsrs	r0, r5, #16
 8001640:	042d      	lsls	r5, r5, #16
 8001642:	0c2d      	lsrs	r5, r5, #16
 8001644:	002b      	movs	r3, r5
 8001646:	0c11      	lsrs	r1, r2, #16
 8001648:	0412      	lsls	r2, r2, #16
 800164a:	0c12      	lsrs	r2, r2, #16
 800164c:	4353      	muls	r3, r2
 800164e:	4698      	mov	r8, r3
 8001650:	0013      	movs	r3, r2
 8001652:	002f      	movs	r7, r5
 8001654:	4343      	muls	r3, r0
 8001656:	4699      	mov	r9, r3
 8001658:	434f      	muls	r7, r1
 800165a:	444f      	add	r7, r9
 800165c:	46bb      	mov	fp, r7
 800165e:	4647      	mov	r7, r8
 8001660:	000b      	movs	r3, r1
 8001662:	0c3f      	lsrs	r7, r7, #16
 8001664:	46ba      	mov	sl, r7
 8001666:	4343      	muls	r3, r0
 8001668:	44da      	add	sl, fp
 800166a:	9302      	str	r3, [sp, #8]
 800166c:	45d1      	cmp	r9, sl
 800166e:	d904      	bls.n	800167a <__aeabi_dmul+0x122>
 8001670:	2780      	movs	r7, #128	; 0x80
 8001672:	027f      	lsls	r7, r7, #9
 8001674:	46b9      	mov	r9, r7
 8001676:	444b      	add	r3, r9
 8001678:	9302      	str	r3, [sp, #8]
 800167a:	4653      	mov	r3, sl
 800167c:	0c1b      	lsrs	r3, r3, #16
 800167e:	469b      	mov	fp, r3
 8001680:	4653      	mov	r3, sl
 8001682:	041f      	lsls	r7, r3, #16
 8001684:	4643      	mov	r3, r8
 8001686:	041b      	lsls	r3, r3, #16
 8001688:	0c1b      	lsrs	r3, r3, #16
 800168a:	4698      	mov	r8, r3
 800168c:	003b      	movs	r3, r7
 800168e:	4443      	add	r3, r8
 8001690:	9304      	str	r3, [sp, #16]
 8001692:	0c33      	lsrs	r3, r6, #16
 8001694:	0436      	lsls	r6, r6, #16
 8001696:	0c36      	lsrs	r6, r6, #16
 8001698:	4698      	mov	r8, r3
 800169a:	0033      	movs	r3, r6
 800169c:	4343      	muls	r3, r0
 800169e:	4699      	mov	r9, r3
 80016a0:	4643      	mov	r3, r8
 80016a2:	4343      	muls	r3, r0
 80016a4:	002f      	movs	r7, r5
 80016a6:	469a      	mov	sl, r3
 80016a8:	4643      	mov	r3, r8
 80016aa:	4377      	muls	r7, r6
 80016ac:	435d      	muls	r5, r3
 80016ae:	0c38      	lsrs	r0, r7, #16
 80016b0:	444d      	add	r5, r9
 80016b2:	1945      	adds	r5, r0, r5
 80016b4:	45a9      	cmp	r9, r5
 80016b6:	d903      	bls.n	80016c0 <__aeabi_dmul+0x168>
 80016b8:	2380      	movs	r3, #128	; 0x80
 80016ba:	025b      	lsls	r3, r3, #9
 80016bc:	4699      	mov	r9, r3
 80016be:	44ca      	add	sl, r9
 80016c0:	043f      	lsls	r7, r7, #16
 80016c2:	0c28      	lsrs	r0, r5, #16
 80016c4:	0c3f      	lsrs	r7, r7, #16
 80016c6:	042d      	lsls	r5, r5, #16
 80016c8:	19ed      	adds	r5, r5, r7
 80016ca:	0c27      	lsrs	r7, r4, #16
 80016cc:	0424      	lsls	r4, r4, #16
 80016ce:	0c24      	lsrs	r4, r4, #16
 80016d0:	0003      	movs	r3, r0
 80016d2:	0020      	movs	r0, r4
 80016d4:	4350      	muls	r0, r2
 80016d6:	437a      	muls	r2, r7
 80016d8:	4691      	mov	r9, r2
 80016da:	003a      	movs	r2, r7
 80016dc:	4453      	add	r3, sl
 80016de:	9305      	str	r3, [sp, #20]
 80016e0:	0c03      	lsrs	r3, r0, #16
 80016e2:	469a      	mov	sl, r3
 80016e4:	434a      	muls	r2, r1
 80016e6:	4361      	muls	r1, r4
 80016e8:	4449      	add	r1, r9
 80016ea:	4451      	add	r1, sl
 80016ec:	44ab      	add	fp, r5
 80016ee:	4589      	cmp	r9, r1
 80016f0:	d903      	bls.n	80016fa <__aeabi_dmul+0x1a2>
 80016f2:	2380      	movs	r3, #128	; 0x80
 80016f4:	025b      	lsls	r3, r3, #9
 80016f6:	4699      	mov	r9, r3
 80016f8:	444a      	add	r2, r9
 80016fa:	0400      	lsls	r0, r0, #16
 80016fc:	0c0b      	lsrs	r3, r1, #16
 80016fe:	0c00      	lsrs	r0, r0, #16
 8001700:	0409      	lsls	r1, r1, #16
 8001702:	1809      	adds	r1, r1, r0
 8001704:	0020      	movs	r0, r4
 8001706:	4699      	mov	r9, r3
 8001708:	4643      	mov	r3, r8
 800170a:	4370      	muls	r0, r6
 800170c:	435c      	muls	r4, r3
 800170e:	437e      	muls	r6, r7
 8001710:	435f      	muls	r7, r3
 8001712:	0c03      	lsrs	r3, r0, #16
 8001714:	4698      	mov	r8, r3
 8001716:	19a4      	adds	r4, r4, r6
 8001718:	4444      	add	r4, r8
 800171a:	444a      	add	r2, r9
 800171c:	9703      	str	r7, [sp, #12]
 800171e:	42a6      	cmp	r6, r4
 8001720:	d904      	bls.n	800172c <__aeabi_dmul+0x1d4>
 8001722:	2380      	movs	r3, #128	; 0x80
 8001724:	025b      	lsls	r3, r3, #9
 8001726:	4698      	mov	r8, r3
 8001728:	4447      	add	r7, r8
 800172a:	9703      	str	r7, [sp, #12]
 800172c:	0423      	lsls	r3, r4, #16
 800172e:	9e02      	ldr	r6, [sp, #8]
 8001730:	469a      	mov	sl, r3
 8001732:	9b05      	ldr	r3, [sp, #20]
 8001734:	445e      	add	r6, fp
 8001736:	4698      	mov	r8, r3
 8001738:	42ae      	cmp	r6, r5
 800173a:	41ad      	sbcs	r5, r5
 800173c:	1876      	adds	r6, r6, r1
 800173e:	428e      	cmp	r6, r1
 8001740:	4189      	sbcs	r1, r1
 8001742:	0400      	lsls	r0, r0, #16
 8001744:	0c00      	lsrs	r0, r0, #16
 8001746:	4450      	add	r0, sl
 8001748:	4440      	add	r0, r8
 800174a:	426d      	negs	r5, r5
 800174c:	1947      	adds	r7, r0, r5
 800174e:	46b8      	mov	r8, r7
 8001750:	4693      	mov	fp, r2
 8001752:	4249      	negs	r1, r1
 8001754:	4689      	mov	r9, r1
 8001756:	44c3      	add	fp, r8
 8001758:	44d9      	add	r9, fp
 800175a:	4298      	cmp	r0, r3
 800175c:	4180      	sbcs	r0, r0
 800175e:	45a8      	cmp	r8, r5
 8001760:	41ad      	sbcs	r5, r5
 8001762:	4593      	cmp	fp, r2
 8001764:	4192      	sbcs	r2, r2
 8001766:	4589      	cmp	r9, r1
 8001768:	4189      	sbcs	r1, r1
 800176a:	426d      	negs	r5, r5
 800176c:	4240      	negs	r0, r0
 800176e:	4328      	orrs	r0, r5
 8001770:	0c24      	lsrs	r4, r4, #16
 8001772:	4252      	negs	r2, r2
 8001774:	4249      	negs	r1, r1
 8001776:	430a      	orrs	r2, r1
 8001778:	9b03      	ldr	r3, [sp, #12]
 800177a:	1900      	adds	r0, r0, r4
 800177c:	1880      	adds	r0, r0, r2
 800177e:	18c7      	adds	r7, r0, r3
 8001780:	464b      	mov	r3, r9
 8001782:	0ddc      	lsrs	r4, r3, #23
 8001784:	9b04      	ldr	r3, [sp, #16]
 8001786:	0275      	lsls	r5, r6, #9
 8001788:	431d      	orrs	r5, r3
 800178a:	1e6a      	subs	r2, r5, #1
 800178c:	4195      	sbcs	r5, r2
 800178e:	464b      	mov	r3, r9
 8001790:	0df6      	lsrs	r6, r6, #23
 8001792:	027f      	lsls	r7, r7, #9
 8001794:	4335      	orrs	r5, r6
 8001796:	025a      	lsls	r2, r3, #9
 8001798:	433c      	orrs	r4, r7
 800179a:	4315      	orrs	r5, r2
 800179c:	01fb      	lsls	r3, r7, #7
 800179e:	d400      	bmi.n	80017a2 <__aeabi_dmul+0x24a>
 80017a0:	e11c      	b.n	80019dc <__aeabi_dmul+0x484>
 80017a2:	2101      	movs	r1, #1
 80017a4:	086a      	lsrs	r2, r5, #1
 80017a6:	400d      	ands	r5, r1
 80017a8:	4315      	orrs	r5, r2
 80017aa:	07e2      	lsls	r2, r4, #31
 80017ac:	4315      	orrs	r5, r2
 80017ae:	0864      	lsrs	r4, r4, #1
 80017b0:	494f      	ldr	r1, [pc, #316]	; (80018f0 <__aeabi_dmul+0x398>)
 80017b2:	4461      	add	r1, ip
 80017b4:	2900      	cmp	r1, #0
 80017b6:	dc00      	bgt.n	80017ba <__aeabi_dmul+0x262>
 80017b8:	e0b0      	b.n	800191c <__aeabi_dmul+0x3c4>
 80017ba:	076b      	lsls	r3, r5, #29
 80017bc:	d009      	beq.n	80017d2 <__aeabi_dmul+0x27a>
 80017be:	220f      	movs	r2, #15
 80017c0:	402a      	ands	r2, r5
 80017c2:	2a04      	cmp	r2, #4
 80017c4:	d005      	beq.n	80017d2 <__aeabi_dmul+0x27a>
 80017c6:	1d2a      	adds	r2, r5, #4
 80017c8:	42aa      	cmp	r2, r5
 80017ca:	41ad      	sbcs	r5, r5
 80017cc:	426d      	negs	r5, r5
 80017ce:	1964      	adds	r4, r4, r5
 80017d0:	0015      	movs	r5, r2
 80017d2:	01e3      	lsls	r3, r4, #7
 80017d4:	d504      	bpl.n	80017e0 <__aeabi_dmul+0x288>
 80017d6:	2180      	movs	r1, #128	; 0x80
 80017d8:	4a46      	ldr	r2, [pc, #280]	; (80018f4 <__aeabi_dmul+0x39c>)
 80017da:	00c9      	lsls	r1, r1, #3
 80017dc:	4014      	ands	r4, r2
 80017de:	4461      	add	r1, ip
 80017e0:	4a45      	ldr	r2, [pc, #276]	; (80018f8 <__aeabi_dmul+0x3a0>)
 80017e2:	4291      	cmp	r1, r2
 80017e4:	dd00      	ble.n	80017e8 <__aeabi_dmul+0x290>
 80017e6:	e726      	b.n	8001636 <__aeabi_dmul+0xde>
 80017e8:	0762      	lsls	r2, r4, #29
 80017ea:	08ed      	lsrs	r5, r5, #3
 80017ec:	0264      	lsls	r4, r4, #9
 80017ee:	0549      	lsls	r1, r1, #21
 80017f0:	4315      	orrs	r5, r2
 80017f2:	0b24      	lsrs	r4, r4, #12
 80017f4:	0d4a      	lsrs	r2, r1, #21
 80017f6:	e710      	b.n	800161a <__aeabi_dmul+0xc2>
 80017f8:	4652      	mov	r2, sl
 80017fa:	4332      	orrs	r2, r6
 80017fc:	d100      	bne.n	8001800 <__aeabi_dmul+0x2a8>
 80017fe:	e07f      	b.n	8001900 <__aeabi_dmul+0x3a8>
 8001800:	2e00      	cmp	r6, #0
 8001802:	d100      	bne.n	8001806 <__aeabi_dmul+0x2ae>
 8001804:	e0dc      	b.n	80019c0 <__aeabi_dmul+0x468>
 8001806:	0030      	movs	r0, r6
 8001808:	f000 fd4e 	bl	80022a8 <__clzsi2>
 800180c:	0002      	movs	r2, r0
 800180e:	3a0b      	subs	r2, #11
 8001810:	231d      	movs	r3, #29
 8001812:	0001      	movs	r1, r0
 8001814:	1a9b      	subs	r3, r3, r2
 8001816:	4652      	mov	r2, sl
 8001818:	3908      	subs	r1, #8
 800181a:	40da      	lsrs	r2, r3
 800181c:	408e      	lsls	r6, r1
 800181e:	4316      	orrs	r6, r2
 8001820:	4652      	mov	r2, sl
 8001822:	408a      	lsls	r2, r1
 8001824:	9b00      	ldr	r3, [sp, #0]
 8001826:	4935      	ldr	r1, [pc, #212]	; (80018fc <__aeabi_dmul+0x3a4>)
 8001828:	1a18      	subs	r0, r3, r0
 800182a:	0003      	movs	r3, r0
 800182c:	468c      	mov	ip, r1
 800182e:	4463      	add	r3, ip
 8001830:	2000      	movs	r0, #0
 8001832:	9300      	str	r3, [sp, #0]
 8001834:	e6d3      	b.n	80015de <__aeabi_dmul+0x86>
 8001836:	0025      	movs	r5, r4
 8001838:	4305      	orrs	r5, r0
 800183a:	d04a      	beq.n	80018d2 <__aeabi_dmul+0x37a>
 800183c:	2c00      	cmp	r4, #0
 800183e:	d100      	bne.n	8001842 <__aeabi_dmul+0x2ea>
 8001840:	e0b0      	b.n	80019a4 <__aeabi_dmul+0x44c>
 8001842:	0020      	movs	r0, r4
 8001844:	f000 fd30 	bl	80022a8 <__clzsi2>
 8001848:	0001      	movs	r1, r0
 800184a:	0002      	movs	r2, r0
 800184c:	390b      	subs	r1, #11
 800184e:	231d      	movs	r3, #29
 8001850:	0010      	movs	r0, r2
 8001852:	1a5b      	subs	r3, r3, r1
 8001854:	0031      	movs	r1, r6
 8001856:	0035      	movs	r5, r6
 8001858:	3808      	subs	r0, #8
 800185a:	4084      	lsls	r4, r0
 800185c:	40d9      	lsrs	r1, r3
 800185e:	4085      	lsls	r5, r0
 8001860:	430c      	orrs	r4, r1
 8001862:	4826      	ldr	r0, [pc, #152]	; (80018fc <__aeabi_dmul+0x3a4>)
 8001864:	1a83      	subs	r3, r0, r2
 8001866:	9300      	str	r3, [sp, #0]
 8001868:	2300      	movs	r3, #0
 800186a:	4699      	mov	r9, r3
 800186c:	469b      	mov	fp, r3
 800186e:	e697      	b.n	80015a0 <__aeabi_dmul+0x48>
 8001870:	0005      	movs	r5, r0
 8001872:	4325      	orrs	r5, r4
 8001874:	d126      	bne.n	80018c4 <__aeabi_dmul+0x36c>
 8001876:	2208      	movs	r2, #8
 8001878:	9300      	str	r3, [sp, #0]
 800187a:	2302      	movs	r3, #2
 800187c:	2400      	movs	r4, #0
 800187e:	4691      	mov	r9, r2
 8001880:	469b      	mov	fp, r3
 8001882:	e68d      	b.n	80015a0 <__aeabi_dmul+0x48>
 8001884:	4652      	mov	r2, sl
 8001886:	9b00      	ldr	r3, [sp, #0]
 8001888:	4332      	orrs	r2, r6
 800188a:	d110      	bne.n	80018ae <__aeabi_dmul+0x356>
 800188c:	4915      	ldr	r1, [pc, #84]	; (80018e4 <__aeabi_dmul+0x38c>)
 800188e:	2600      	movs	r6, #0
 8001890:	468c      	mov	ip, r1
 8001892:	4463      	add	r3, ip
 8001894:	4649      	mov	r1, r9
 8001896:	9300      	str	r3, [sp, #0]
 8001898:	2302      	movs	r3, #2
 800189a:	4319      	orrs	r1, r3
 800189c:	4689      	mov	r9, r1
 800189e:	2002      	movs	r0, #2
 80018a0:	e69d      	b.n	80015de <__aeabi_dmul+0x86>
 80018a2:	465b      	mov	r3, fp
 80018a4:	9701      	str	r7, [sp, #4]
 80018a6:	2b02      	cmp	r3, #2
 80018a8:	d000      	beq.n	80018ac <__aeabi_dmul+0x354>
 80018aa:	e6ad      	b.n	8001608 <__aeabi_dmul+0xb0>
 80018ac:	e6c3      	b.n	8001636 <__aeabi_dmul+0xde>
 80018ae:	4a0d      	ldr	r2, [pc, #52]	; (80018e4 <__aeabi_dmul+0x38c>)
 80018b0:	2003      	movs	r0, #3
 80018b2:	4694      	mov	ip, r2
 80018b4:	4463      	add	r3, ip
 80018b6:	464a      	mov	r2, r9
 80018b8:	9300      	str	r3, [sp, #0]
 80018ba:	2303      	movs	r3, #3
 80018bc:	431a      	orrs	r2, r3
 80018be:	4691      	mov	r9, r2
 80018c0:	4652      	mov	r2, sl
 80018c2:	e68c      	b.n	80015de <__aeabi_dmul+0x86>
 80018c4:	220c      	movs	r2, #12
 80018c6:	9300      	str	r3, [sp, #0]
 80018c8:	2303      	movs	r3, #3
 80018ca:	0005      	movs	r5, r0
 80018cc:	4691      	mov	r9, r2
 80018ce:	469b      	mov	fp, r3
 80018d0:	e666      	b.n	80015a0 <__aeabi_dmul+0x48>
 80018d2:	2304      	movs	r3, #4
 80018d4:	4699      	mov	r9, r3
 80018d6:	2300      	movs	r3, #0
 80018d8:	9300      	str	r3, [sp, #0]
 80018da:	3301      	adds	r3, #1
 80018dc:	2400      	movs	r4, #0
 80018de:	469b      	mov	fp, r3
 80018e0:	e65e      	b.n	80015a0 <__aeabi_dmul+0x48>
 80018e2:	46c0      	nop			; (mov r8, r8)
 80018e4:	000007ff 	.word	0x000007ff
 80018e8:	fffffc01 	.word	0xfffffc01
 80018ec:	08006d6c 	.word	0x08006d6c
 80018f0:	000003ff 	.word	0x000003ff
 80018f4:	feffffff 	.word	0xfeffffff
 80018f8:	000007fe 	.word	0x000007fe
 80018fc:	fffffc0d 	.word	0xfffffc0d
 8001900:	4649      	mov	r1, r9
 8001902:	2301      	movs	r3, #1
 8001904:	4319      	orrs	r1, r3
 8001906:	4689      	mov	r9, r1
 8001908:	2600      	movs	r6, #0
 800190a:	2001      	movs	r0, #1
 800190c:	e667      	b.n	80015de <__aeabi_dmul+0x86>
 800190e:	2300      	movs	r3, #0
 8001910:	2480      	movs	r4, #128	; 0x80
 8001912:	2500      	movs	r5, #0
 8001914:	4a43      	ldr	r2, [pc, #268]	; (8001a24 <__aeabi_dmul+0x4cc>)
 8001916:	9301      	str	r3, [sp, #4]
 8001918:	0324      	lsls	r4, r4, #12
 800191a:	e67e      	b.n	800161a <__aeabi_dmul+0xc2>
 800191c:	2001      	movs	r0, #1
 800191e:	1a40      	subs	r0, r0, r1
 8001920:	2838      	cmp	r0, #56	; 0x38
 8001922:	dd00      	ble.n	8001926 <__aeabi_dmul+0x3ce>
 8001924:	e676      	b.n	8001614 <__aeabi_dmul+0xbc>
 8001926:	281f      	cmp	r0, #31
 8001928:	dd5b      	ble.n	80019e2 <__aeabi_dmul+0x48a>
 800192a:	221f      	movs	r2, #31
 800192c:	0023      	movs	r3, r4
 800192e:	4252      	negs	r2, r2
 8001930:	1a51      	subs	r1, r2, r1
 8001932:	40cb      	lsrs	r3, r1
 8001934:	0019      	movs	r1, r3
 8001936:	2820      	cmp	r0, #32
 8001938:	d003      	beq.n	8001942 <__aeabi_dmul+0x3ea>
 800193a:	4a3b      	ldr	r2, [pc, #236]	; (8001a28 <__aeabi_dmul+0x4d0>)
 800193c:	4462      	add	r2, ip
 800193e:	4094      	lsls	r4, r2
 8001940:	4325      	orrs	r5, r4
 8001942:	1e6a      	subs	r2, r5, #1
 8001944:	4195      	sbcs	r5, r2
 8001946:	002a      	movs	r2, r5
 8001948:	430a      	orrs	r2, r1
 800194a:	2107      	movs	r1, #7
 800194c:	000d      	movs	r5, r1
 800194e:	2400      	movs	r4, #0
 8001950:	4015      	ands	r5, r2
 8001952:	4211      	tst	r1, r2
 8001954:	d05b      	beq.n	8001a0e <__aeabi_dmul+0x4b6>
 8001956:	210f      	movs	r1, #15
 8001958:	2400      	movs	r4, #0
 800195a:	4011      	ands	r1, r2
 800195c:	2904      	cmp	r1, #4
 800195e:	d053      	beq.n	8001a08 <__aeabi_dmul+0x4b0>
 8001960:	1d11      	adds	r1, r2, #4
 8001962:	4291      	cmp	r1, r2
 8001964:	4192      	sbcs	r2, r2
 8001966:	4252      	negs	r2, r2
 8001968:	18a4      	adds	r4, r4, r2
 800196a:	000a      	movs	r2, r1
 800196c:	0223      	lsls	r3, r4, #8
 800196e:	d54b      	bpl.n	8001a08 <__aeabi_dmul+0x4b0>
 8001970:	2201      	movs	r2, #1
 8001972:	2400      	movs	r4, #0
 8001974:	2500      	movs	r5, #0
 8001976:	e650      	b.n	800161a <__aeabi_dmul+0xc2>
 8001978:	2380      	movs	r3, #128	; 0x80
 800197a:	031b      	lsls	r3, r3, #12
 800197c:	421c      	tst	r4, r3
 800197e:	d009      	beq.n	8001994 <__aeabi_dmul+0x43c>
 8001980:	421e      	tst	r6, r3
 8001982:	d107      	bne.n	8001994 <__aeabi_dmul+0x43c>
 8001984:	4333      	orrs	r3, r6
 8001986:	031c      	lsls	r4, r3, #12
 8001988:	4643      	mov	r3, r8
 800198a:	0015      	movs	r5, r2
 800198c:	0b24      	lsrs	r4, r4, #12
 800198e:	4a25      	ldr	r2, [pc, #148]	; (8001a24 <__aeabi_dmul+0x4cc>)
 8001990:	9301      	str	r3, [sp, #4]
 8001992:	e642      	b.n	800161a <__aeabi_dmul+0xc2>
 8001994:	2280      	movs	r2, #128	; 0x80
 8001996:	0312      	lsls	r2, r2, #12
 8001998:	4314      	orrs	r4, r2
 800199a:	0324      	lsls	r4, r4, #12
 800199c:	4a21      	ldr	r2, [pc, #132]	; (8001a24 <__aeabi_dmul+0x4cc>)
 800199e:	0b24      	lsrs	r4, r4, #12
 80019a0:	9701      	str	r7, [sp, #4]
 80019a2:	e63a      	b.n	800161a <__aeabi_dmul+0xc2>
 80019a4:	f000 fc80 	bl	80022a8 <__clzsi2>
 80019a8:	0001      	movs	r1, r0
 80019aa:	0002      	movs	r2, r0
 80019ac:	3115      	adds	r1, #21
 80019ae:	3220      	adds	r2, #32
 80019b0:	291c      	cmp	r1, #28
 80019b2:	dc00      	bgt.n	80019b6 <__aeabi_dmul+0x45e>
 80019b4:	e74b      	b.n	800184e <__aeabi_dmul+0x2f6>
 80019b6:	0034      	movs	r4, r6
 80019b8:	3808      	subs	r0, #8
 80019ba:	2500      	movs	r5, #0
 80019bc:	4084      	lsls	r4, r0
 80019be:	e750      	b.n	8001862 <__aeabi_dmul+0x30a>
 80019c0:	f000 fc72 	bl	80022a8 <__clzsi2>
 80019c4:	0003      	movs	r3, r0
 80019c6:	001a      	movs	r2, r3
 80019c8:	3215      	adds	r2, #21
 80019ca:	3020      	adds	r0, #32
 80019cc:	2a1c      	cmp	r2, #28
 80019ce:	dc00      	bgt.n	80019d2 <__aeabi_dmul+0x47a>
 80019d0:	e71e      	b.n	8001810 <__aeabi_dmul+0x2b8>
 80019d2:	4656      	mov	r6, sl
 80019d4:	3b08      	subs	r3, #8
 80019d6:	2200      	movs	r2, #0
 80019d8:	409e      	lsls	r6, r3
 80019da:	e723      	b.n	8001824 <__aeabi_dmul+0x2cc>
 80019dc:	9b00      	ldr	r3, [sp, #0]
 80019de:	469c      	mov	ip, r3
 80019e0:	e6e6      	b.n	80017b0 <__aeabi_dmul+0x258>
 80019e2:	4912      	ldr	r1, [pc, #72]	; (8001a2c <__aeabi_dmul+0x4d4>)
 80019e4:	0022      	movs	r2, r4
 80019e6:	4461      	add	r1, ip
 80019e8:	002e      	movs	r6, r5
 80019ea:	408d      	lsls	r5, r1
 80019ec:	408a      	lsls	r2, r1
 80019ee:	40c6      	lsrs	r6, r0
 80019f0:	1e69      	subs	r1, r5, #1
 80019f2:	418d      	sbcs	r5, r1
 80019f4:	4332      	orrs	r2, r6
 80019f6:	432a      	orrs	r2, r5
 80019f8:	40c4      	lsrs	r4, r0
 80019fa:	0753      	lsls	r3, r2, #29
 80019fc:	d0b6      	beq.n	800196c <__aeabi_dmul+0x414>
 80019fe:	210f      	movs	r1, #15
 8001a00:	4011      	ands	r1, r2
 8001a02:	2904      	cmp	r1, #4
 8001a04:	d1ac      	bne.n	8001960 <__aeabi_dmul+0x408>
 8001a06:	e7b1      	b.n	800196c <__aeabi_dmul+0x414>
 8001a08:	0765      	lsls	r5, r4, #29
 8001a0a:	0264      	lsls	r4, r4, #9
 8001a0c:	0b24      	lsrs	r4, r4, #12
 8001a0e:	08d2      	lsrs	r2, r2, #3
 8001a10:	4315      	orrs	r5, r2
 8001a12:	2200      	movs	r2, #0
 8001a14:	e601      	b.n	800161a <__aeabi_dmul+0xc2>
 8001a16:	2280      	movs	r2, #128	; 0x80
 8001a18:	0312      	lsls	r2, r2, #12
 8001a1a:	4314      	orrs	r4, r2
 8001a1c:	0324      	lsls	r4, r4, #12
 8001a1e:	4a01      	ldr	r2, [pc, #4]	; (8001a24 <__aeabi_dmul+0x4cc>)
 8001a20:	0b24      	lsrs	r4, r4, #12
 8001a22:	e5fa      	b.n	800161a <__aeabi_dmul+0xc2>
 8001a24:	000007ff 	.word	0x000007ff
 8001a28:	0000043e 	.word	0x0000043e
 8001a2c:	0000041e 	.word	0x0000041e

08001a30 <__aeabi_dsub>:
 8001a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a32:	4657      	mov	r7, sl
 8001a34:	464e      	mov	r6, r9
 8001a36:	4645      	mov	r5, r8
 8001a38:	46de      	mov	lr, fp
 8001a3a:	b5e0      	push	{r5, r6, r7, lr}
 8001a3c:	001e      	movs	r6, r3
 8001a3e:	0017      	movs	r7, r2
 8001a40:	004a      	lsls	r2, r1, #1
 8001a42:	030b      	lsls	r3, r1, #12
 8001a44:	0d52      	lsrs	r2, r2, #21
 8001a46:	0a5b      	lsrs	r3, r3, #9
 8001a48:	4690      	mov	r8, r2
 8001a4a:	0f42      	lsrs	r2, r0, #29
 8001a4c:	431a      	orrs	r2, r3
 8001a4e:	0fcd      	lsrs	r5, r1, #31
 8001a50:	4ccd      	ldr	r4, [pc, #820]	; (8001d88 <__aeabi_dsub+0x358>)
 8001a52:	0331      	lsls	r1, r6, #12
 8001a54:	00c3      	lsls	r3, r0, #3
 8001a56:	4694      	mov	ip, r2
 8001a58:	0070      	lsls	r0, r6, #1
 8001a5a:	0f7a      	lsrs	r2, r7, #29
 8001a5c:	0a49      	lsrs	r1, r1, #9
 8001a5e:	00ff      	lsls	r7, r7, #3
 8001a60:	469a      	mov	sl, r3
 8001a62:	46b9      	mov	r9, r7
 8001a64:	0d40      	lsrs	r0, r0, #21
 8001a66:	0ff6      	lsrs	r6, r6, #31
 8001a68:	4311      	orrs	r1, r2
 8001a6a:	42a0      	cmp	r0, r4
 8001a6c:	d100      	bne.n	8001a70 <__aeabi_dsub+0x40>
 8001a6e:	e0b1      	b.n	8001bd4 <__aeabi_dsub+0x1a4>
 8001a70:	2201      	movs	r2, #1
 8001a72:	4056      	eors	r6, r2
 8001a74:	46b3      	mov	fp, r6
 8001a76:	42b5      	cmp	r5, r6
 8001a78:	d100      	bne.n	8001a7c <__aeabi_dsub+0x4c>
 8001a7a:	e088      	b.n	8001b8e <__aeabi_dsub+0x15e>
 8001a7c:	4642      	mov	r2, r8
 8001a7e:	1a12      	subs	r2, r2, r0
 8001a80:	2a00      	cmp	r2, #0
 8001a82:	dc00      	bgt.n	8001a86 <__aeabi_dsub+0x56>
 8001a84:	e0ae      	b.n	8001be4 <__aeabi_dsub+0x1b4>
 8001a86:	2800      	cmp	r0, #0
 8001a88:	d100      	bne.n	8001a8c <__aeabi_dsub+0x5c>
 8001a8a:	e0c1      	b.n	8001c10 <__aeabi_dsub+0x1e0>
 8001a8c:	48be      	ldr	r0, [pc, #760]	; (8001d88 <__aeabi_dsub+0x358>)
 8001a8e:	4580      	cmp	r8, r0
 8001a90:	d100      	bne.n	8001a94 <__aeabi_dsub+0x64>
 8001a92:	e151      	b.n	8001d38 <__aeabi_dsub+0x308>
 8001a94:	2080      	movs	r0, #128	; 0x80
 8001a96:	0400      	lsls	r0, r0, #16
 8001a98:	4301      	orrs	r1, r0
 8001a9a:	2a38      	cmp	r2, #56	; 0x38
 8001a9c:	dd00      	ble.n	8001aa0 <__aeabi_dsub+0x70>
 8001a9e:	e17b      	b.n	8001d98 <__aeabi_dsub+0x368>
 8001aa0:	2a1f      	cmp	r2, #31
 8001aa2:	dd00      	ble.n	8001aa6 <__aeabi_dsub+0x76>
 8001aa4:	e1ee      	b.n	8001e84 <__aeabi_dsub+0x454>
 8001aa6:	2020      	movs	r0, #32
 8001aa8:	003e      	movs	r6, r7
 8001aaa:	1a80      	subs	r0, r0, r2
 8001aac:	000c      	movs	r4, r1
 8001aae:	40d6      	lsrs	r6, r2
 8001ab0:	40d1      	lsrs	r1, r2
 8001ab2:	4087      	lsls	r7, r0
 8001ab4:	4662      	mov	r2, ip
 8001ab6:	4084      	lsls	r4, r0
 8001ab8:	1a52      	subs	r2, r2, r1
 8001aba:	1e78      	subs	r0, r7, #1
 8001abc:	4187      	sbcs	r7, r0
 8001abe:	4694      	mov	ip, r2
 8001ac0:	4334      	orrs	r4, r6
 8001ac2:	4327      	orrs	r7, r4
 8001ac4:	1bdc      	subs	r4, r3, r7
 8001ac6:	42a3      	cmp	r3, r4
 8001ac8:	419b      	sbcs	r3, r3
 8001aca:	4662      	mov	r2, ip
 8001acc:	425b      	negs	r3, r3
 8001ace:	1ad3      	subs	r3, r2, r3
 8001ad0:	4699      	mov	r9, r3
 8001ad2:	464b      	mov	r3, r9
 8001ad4:	021b      	lsls	r3, r3, #8
 8001ad6:	d400      	bmi.n	8001ada <__aeabi_dsub+0xaa>
 8001ad8:	e118      	b.n	8001d0c <__aeabi_dsub+0x2dc>
 8001ada:	464b      	mov	r3, r9
 8001adc:	0258      	lsls	r0, r3, #9
 8001ade:	0a43      	lsrs	r3, r0, #9
 8001ae0:	4699      	mov	r9, r3
 8001ae2:	464b      	mov	r3, r9
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d100      	bne.n	8001aea <__aeabi_dsub+0xba>
 8001ae8:	e137      	b.n	8001d5a <__aeabi_dsub+0x32a>
 8001aea:	4648      	mov	r0, r9
 8001aec:	f000 fbdc 	bl	80022a8 <__clzsi2>
 8001af0:	0001      	movs	r1, r0
 8001af2:	3908      	subs	r1, #8
 8001af4:	2320      	movs	r3, #32
 8001af6:	0022      	movs	r2, r4
 8001af8:	4648      	mov	r0, r9
 8001afa:	1a5b      	subs	r3, r3, r1
 8001afc:	40da      	lsrs	r2, r3
 8001afe:	4088      	lsls	r0, r1
 8001b00:	408c      	lsls	r4, r1
 8001b02:	4643      	mov	r3, r8
 8001b04:	4310      	orrs	r0, r2
 8001b06:	4588      	cmp	r8, r1
 8001b08:	dd00      	ble.n	8001b0c <__aeabi_dsub+0xdc>
 8001b0a:	e136      	b.n	8001d7a <__aeabi_dsub+0x34a>
 8001b0c:	1ac9      	subs	r1, r1, r3
 8001b0e:	1c4b      	adds	r3, r1, #1
 8001b10:	2b1f      	cmp	r3, #31
 8001b12:	dd00      	ble.n	8001b16 <__aeabi_dsub+0xe6>
 8001b14:	e0ea      	b.n	8001cec <__aeabi_dsub+0x2bc>
 8001b16:	2220      	movs	r2, #32
 8001b18:	0026      	movs	r6, r4
 8001b1a:	1ad2      	subs	r2, r2, r3
 8001b1c:	0001      	movs	r1, r0
 8001b1e:	4094      	lsls	r4, r2
 8001b20:	40de      	lsrs	r6, r3
 8001b22:	40d8      	lsrs	r0, r3
 8001b24:	2300      	movs	r3, #0
 8001b26:	4091      	lsls	r1, r2
 8001b28:	1e62      	subs	r2, r4, #1
 8001b2a:	4194      	sbcs	r4, r2
 8001b2c:	4681      	mov	r9, r0
 8001b2e:	4698      	mov	r8, r3
 8001b30:	4331      	orrs	r1, r6
 8001b32:	430c      	orrs	r4, r1
 8001b34:	0763      	lsls	r3, r4, #29
 8001b36:	d009      	beq.n	8001b4c <__aeabi_dsub+0x11c>
 8001b38:	230f      	movs	r3, #15
 8001b3a:	4023      	ands	r3, r4
 8001b3c:	2b04      	cmp	r3, #4
 8001b3e:	d005      	beq.n	8001b4c <__aeabi_dsub+0x11c>
 8001b40:	1d23      	adds	r3, r4, #4
 8001b42:	42a3      	cmp	r3, r4
 8001b44:	41a4      	sbcs	r4, r4
 8001b46:	4264      	negs	r4, r4
 8001b48:	44a1      	add	r9, r4
 8001b4a:	001c      	movs	r4, r3
 8001b4c:	464b      	mov	r3, r9
 8001b4e:	021b      	lsls	r3, r3, #8
 8001b50:	d400      	bmi.n	8001b54 <__aeabi_dsub+0x124>
 8001b52:	e0de      	b.n	8001d12 <__aeabi_dsub+0x2e2>
 8001b54:	4641      	mov	r1, r8
 8001b56:	4b8c      	ldr	r3, [pc, #560]	; (8001d88 <__aeabi_dsub+0x358>)
 8001b58:	3101      	adds	r1, #1
 8001b5a:	4299      	cmp	r1, r3
 8001b5c:	d100      	bne.n	8001b60 <__aeabi_dsub+0x130>
 8001b5e:	e0e7      	b.n	8001d30 <__aeabi_dsub+0x300>
 8001b60:	464b      	mov	r3, r9
 8001b62:	488a      	ldr	r0, [pc, #552]	; (8001d8c <__aeabi_dsub+0x35c>)
 8001b64:	08e4      	lsrs	r4, r4, #3
 8001b66:	4003      	ands	r3, r0
 8001b68:	0018      	movs	r0, r3
 8001b6a:	0549      	lsls	r1, r1, #21
 8001b6c:	075b      	lsls	r3, r3, #29
 8001b6e:	0240      	lsls	r0, r0, #9
 8001b70:	4323      	orrs	r3, r4
 8001b72:	0d4a      	lsrs	r2, r1, #21
 8001b74:	0b04      	lsrs	r4, r0, #12
 8001b76:	0512      	lsls	r2, r2, #20
 8001b78:	07ed      	lsls	r5, r5, #31
 8001b7a:	4322      	orrs	r2, r4
 8001b7c:	432a      	orrs	r2, r5
 8001b7e:	0018      	movs	r0, r3
 8001b80:	0011      	movs	r1, r2
 8001b82:	bcf0      	pop	{r4, r5, r6, r7}
 8001b84:	46bb      	mov	fp, r7
 8001b86:	46b2      	mov	sl, r6
 8001b88:	46a9      	mov	r9, r5
 8001b8a:	46a0      	mov	r8, r4
 8001b8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b8e:	4642      	mov	r2, r8
 8001b90:	1a12      	subs	r2, r2, r0
 8001b92:	2a00      	cmp	r2, #0
 8001b94:	dd52      	ble.n	8001c3c <__aeabi_dsub+0x20c>
 8001b96:	2800      	cmp	r0, #0
 8001b98:	d100      	bne.n	8001b9c <__aeabi_dsub+0x16c>
 8001b9a:	e09c      	b.n	8001cd6 <__aeabi_dsub+0x2a6>
 8001b9c:	45a0      	cmp	r8, r4
 8001b9e:	d100      	bne.n	8001ba2 <__aeabi_dsub+0x172>
 8001ba0:	e0ca      	b.n	8001d38 <__aeabi_dsub+0x308>
 8001ba2:	2080      	movs	r0, #128	; 0x80
 8001ba4:	0400      	lsls	r0, r0, #16
 8001ba6:	4301      	orrs	r1, r0
 8001ba8:	2a38      	cmp	r2, #56	; 0x38
 8001baa:	dd00      	ble.n	8001bae <__aeabi_dsub+0x17e>
 8001bac:	e149      	b.n	8001e42 <__aeabi_dsub+0x412>
 8001bae:	2a1f      	cmp	r2, #31
 8001bb0:	dc00      	bgt.n	8001bb4 <__aeabi_dsub+0x184>
 8001bb2:	e197      	b.n	8001ee4 <__aeabi_dsub+0x4b4>
 8001bb4:	0010      	movs	r0, r2
 8001bb6:	000e      	movs	r6, r1
 8001bb8:	3820      	subs	r0, #32
 8001bba:	40c6      	lsrs	r6, r0
 8001bbc:	2a20      	cmp	r2, #32
 8001bbe:	d004      	beq.n	8001bca <__aeabi_dsub+0x19a>
 8001bc0:	2040      	movs	r0, #64	; 0x40
 8001bc2:	1a82      	subs	r2, r0, r2
 8001bc4:	4091      	lsls	r1, r2
 8001bc6:	430f      	orrs	r7, r1
 8001bc8:	46b9      	mov	r9, r7
 8001bca:	464c      	mov	r4, r9
 8001bcc:	1e62      	subs	r2, r4, #1
 8001bce:	4194      	sbcs	r4, r2
 8001bd0:	4334      	orrs	r4, r6
 8001bd2:	e13a      	b.n	8001e4a <__aeabi_dsub+0x41a>
 8001bd4:	000a      	movs	r2, r1
 8001bd6:	433a      	orrs	r2, r7
 8001bd8:	d028      	beq.n	8001c2c <__aeabi_dsub+0x1fc>
 8001bda:	46b3      	mov	fp, r6
 8001bdc:	42b5      	cmp	r5, r6
 8001bde:	d02b      	beq.n	8001c38 <__aeabi_dsub+0x208>
 8001be0:	4a6b      	ldr	r2, [pc, #428]	; (8001d90 <__aeabi_dsub+0x360>)
 8001be2:	4442      	add	r2, r8
 8001be4:	2a00      	cmp	r2, #0
 8001be6:	d05d      	beq.n	8001ca4 <__aeabi_dsub+0x274>
 8001be8:	4642      	mov	r2, r8
 8001bea:	4644      	mov	r4, r8
 8001bec:	1a82      	subs	r2, r0, r2
 8001bee:	2c00      	cmp	r4, #0
 8001bf0:	d000      	beq.n	8001bf4 <__aeabi_dsub+0x1c4>
 8001bf2:	e0f5      	b.n	8001de0 <__aeabi_dsub+0x3b0>
 8001bf4:	4665      	mov	r5, ip
 8001bf6:	431d      	orrs	r5, r3
 8001bf8:	d100      	bne.n	8001bfc <__aeabi_dsub+0x1cc>
 8001bfa:	e19c      	b.n	8001f36 <__aeabi_dsub+0x506>
 8001bfc:	1e55      	subs	r5, r2, #1
 8001bfe:	2a01      	cmp	r2, #1
 8001c00:	d100      	bne.n	8001c04 <__aeabi_dsub+0x1d4>
 8001c02:	e1fb      	b.n	8001ffc <__aeabi_dsub+0x5cc>
 8001c04:	4c60      	ldr	r4, [pc, #384]	; (8001d88 <__aeabi_dsub+0x358>)
 8001c06:	42a2      	cmp	r2, r4
 8001c08:	d100      	bne.n	8001c0c <__aeabi_dsub+0x1dc>
 8001c0a:	e1bd      	b.n	8001f88 <__aeabi_dsub+0x558>
 8001c0c:	002a      	movs	r2, r5
 8001c0e:	e0f0      	b.n	8001df2 <__aeabi_dsub+0x3c2>
 8001c10:	0008      	movs	r0, r1
 8001c12:	4338      	orrs	r0, r7
 8001c14:	d100      	bne.n	8001c18 <__aeabi_dsub+0x1e8>
 8001c16:	e0c3      	b.n	8001da0 <__aeabi_dsub+0x370>
 8001c18:	1e50      	subs	r0, r2, #1
 8001c1a:	2a01      	cmp	r2, #1
 8001c1c:	d100      	bne.n	8001c20 <__aeabi_dsub+0x1f0>
 8001c1e:	e1a8      	b.n	8001f72 <__aeabi_dsub+0x542>
 8001c20:	4c59      	ldr	r4, [pc, #356]	; (8001d88 <__aeabi_dsub+0x358>)
 8001c22:	42a2      	cmp	r2, r4
 8001c24:	d100      	bne.n	8001c28 <__aeabi_dsub+0x1f8>
 8001c26:	e087      	b.n	8001d38 <__aeabi_dsub+0x308>
 8001c28:	0002      	movs	r2, r0
 8001c2a:	e736      	b.n	8001a9a <__aeabi_dsub+0x6a>
 8001c2c:	2201      	movs	r2, #1
 8001c2e:	4056      	eors	r6, r2
 8001c30:	46b3      	mov	fp, r6
 8001c32:	42b5      	cmp	r5, r6
 8001c34:	d000      	beq.n	8001c38 <__aeabi_dsub+0x208>
 8001c36:	e721      	b.n	8001a7c <__aeabi_dsub+0x4c>
 8001c38:	4a55      	ldr	r2, [pc, #340]	; (8001d90 <__aeabi_dsub+0x360>)
 8001c3a:	4442      	add	r2, r8
 8001c3c:	2a00      	cmp	r2, #0
 8001c3e:	d100      	bne.n	8001c42 <__aeabi_dsub+0x212>
 8001c40:	e0b5      	b.n	8001dae <__aeabi_dsub+0x37e>
 8001c42:	4642      	mov	r2, r8
 8001c44:	4644      	mov	r4, r8
 8001c46:	1a82      	subs	r2, r0, r2
 8001c48:	2c00      	cmp	r4, #0
 8001c4a:	d100      	bne.n	8001c4e <__aeabi_dsub+0x21e>
 8001c4c:	e138      	b.n	8001ec0 <__aeabi_dsub+0x490>
 8001c4e:	4e4e      	ldr	r6, [pc, #312]	; (8001d88 <__aeabi_dsub+0x358>)
 8001c50:	42b0      	cmp	r0, r6
 8001c52:	d100      	bne.n	8001c56 <__aeabi_dsub+0x226>
 8001c54:	e1de      	b.n	8002014 <__aeabi_dsub+0x5e4>
 8001c56:	2680      	movs	r6, #128	; 0x80
 8001c58:	4664      	mov	r4, ip
 8001c5a:	0436      	lsls	r6, r6, #16
 8001c5c:	4334      	orrs	r4, r6
 8001c5e:	46a4      	mov	ip, r4
 8001c60:	2a38      	cmp	r2, #56	; 0x38
 8001c62:	dd00      	ble.n	8001c66 <__aeabi_dsub+0x236>
 8001c64:	e196      	b.n	8001f94 <__aeabi_dsub+0x564>
 8001c66:	2a1f      	cmp	r2, #31
 8001c68:	dd00      	ble.n	8001c6c <__aeabi_dsub+0x23c>
 8001c6a:	e224      	b.n	80020b6 <__aeabi_dsub+0x686>
 8001c6c:	2620      	movs	r6, #32
 8001c6e:	1ab4      	subs	r4, r6, r2
 8001c70:	46a2      	mov	sl, r4
 8001c72:	4664      	mov	r4, ip
 8001c74:	4656      	mov	r6, sl
 8001c76:	40b4      	lsls	r4, r6
 8001c78:	46a1      	mov	r9, r4
 8001c7a:	001c      	movs	r4, r3
 8001c7c:	464e      	mov	r6, r9
 8001c7e:	40d4      	lsrs	r4, r2
 8001c80:	4326      	orrs	r6, r4
 8001c82:	0034      	movs	r4, r6
 8001c84:	4656      	mov	r6, sl
 8001c86:	40b3      	lsls	r3, r6
 8001c88:	1e5e      	subs	r6, r3, #1
 8001c8a:	41b3      	sbcs	r3, r6
 8001c8c:	431c      	orrs	r4, r3
 8001c8e:	4663      	mov	r3, ip
 8001c90:	40d3      	lsrs	r3, r2
 8001c92:	18c9      	adds	r1, r1, r3
 8001c94:	19e4      	adds	r4, r4, r7
 8001c96:	42bc      	cmp	r4, r7
 8001c98:	41bf      	sbcs	r7, r7
 8001c9a:	427f      	negs	r7, r7
 8001c9c:	46b9      	mov	r9, r7
 8001c9e:	4680      	mov	r8, r0
 8001ca0:	4489      	add	r9, r1
 8001ca2:	e0d8      	b.n	8001e56 <__aeabi_dsub+0x426>
 8001ca4:	4640      	mov	r0, r8
 8001ca6:	4c3b      	ldr	r4, [pc, #236]	; (8001d94 <__aeabi_dsub+0x364>)
 8001ca8:	3001      	adds	r0, #1
 8001caa:	4220      	tst	r0, r4
 8001cac:	d000      	beq.n	8001cb0 <__aeabi_dsub+0x280>
 8001cae:	e0b4      	b.n	8001e1a <__aeabi_dsub+0x3ea>
 8001cb0:	4640      	mov	r0, r8
 8001cb2:	2800      	cmp	r0, #0
 8001cb4:	d000      	beq.n	8001cb8 <__aeabi_dsub+0x288>
 8001cb6:	e144      	b.n	8001f42 <__aeabi_dsub+0x512>
 8001cb8:	4660      	mov	r0, ip
 8001cba:	4318      	orrs	r0, r3
 8001cbc:	d100      	bne.n	8001cc0 <__aeabi_dsub+0x290>
 8001cbe:	e190      	b.n	8001fe2 <__aeabi_dsub+0x5b2>
 8001cc0:	0008      	movs	r0, r1
 8001cc2:	4338      	orrs	r0, r7
 8001cc4:	d000      	beq.n	8001cc8 <__aeabi_dsub+0x298>
 8001cc6:	e1aa      	b.n	800201e <__aeabi_dsub+0x5ee>
 8001cc8:	4661      	mov	r1, ip
 8001cca:	08db      	lsrs	r3, r3, #3
 8001ccc:	0749      	lsls	r1, r1, #29
 8001cce:	430b      	orrs	r3, r1
 8001cd0:	4661      	mov	r1, ip
 8001cd2:	08cc      	lsrs	r4, r1, #3
 8001cd4:	e027      	b.n	8001d26 <__aeabi_dsub+0x2f6>
 8001cd6:	0008      	movs	r0, r1
 8001cd8:	4338      	orrs	r0, r7
 8001cda:	d061      	beq.n	8001da0 <__aeabi_dsub+0x370>
 8001cdc:	1e50      	subs	r0, r2, #1
 8001cde:	2a01      	cmp	r2, #1
 8001ce0:	d100      	bne.n	8001ce4 <__aeabi_dsub+0x2b4>
 8001ce2:	e139      	b.n	8001f58 <__aeabi_dsub+0x528>
 8001ce4:	42a2      	cmp	r2, r4
 8001ce6:	d027      	beq.n	8001d38 <__aeabi_dsub+0x308>
 8001ce8:	0002      	movs	r2, r0
 8001cea:	e75d      	b.n	8001ba8 <__aeabi_dsub+0x178>
 8001cec:	0002      	movs	r2, r0
 8001cee:	391f      	subs	r1, #31
 8001cf0:	40ca      	lsrs	r2, r1
 8001cf2:	0011      	movs	r1, r2
 8001cf4:	2b20      	cmp	r3, #32
 8001cf6:	d003      	beq.n	8001d00 <__aeabi_dsub+0x2d0>
 8001cf8:	2240      	movs	r2, #64	; 0x40
 8001cfa:	1ad3      	subs	r3, r2, r3
 8001cfc:	4098      	lsls	r0, r3
 8001cfe:	4304      	orrs	r4, r0
 8001d00:	1e63      	subs	r3, r4, #1
 8001d02:	419c      	sbcs	r4, r3
 8001d04:	2300      	movs	r3, #0
 8001d06:	4699      	mov	r9, r3
 8001d08:	4698      	mov	r8, r3
 8001d0a:	430c      	orrs	r4, r1
 8001d0c:	0763      	lsls	r3, r4, #29
 8001d0e:	d000      	beq.n	8001d12 <__aeabi_dsub+0x2e2>
 8001d10:	e712      	b.n	8001b38 <__aeabi_dsub+0x108>
 8001d12:	464b      	mov	r3, r9
 8001d14:	464a      	mov	r2, r9
 8001d16:	08e4      	lsrs	r4, r4, #3
 8001d18:	075b      	lsls	r3, r3, #29
 8001d1a:	4323      	orrs	r3, r4
 8001d1c:	08d4      	lsrs	r4, r2, #3
 8001d1e:	4642      	mov	r2, r8
 8001d20:	4919      	ldr	r1, [pc, #100]	; (8001d88 <__aeabi_dsub+0x358>)
 8001d22:	428a      	cmp	r2, r1
 8001d24:	d00e      	beq.n	8001d44 <__aeabi_dsub+0x314>
 8001d26:	0324      	lsls	r4, r4, #12
 8001d28:	0552      	lsls	r2, r2, #21
 8001d2a:	0b24      	lsrs	r4, r4, #12
 8001d2c:	0d52      	lsrs	r2, r2, #21
 8001d2e:	e722      	b.n	8001b76 <__aeabi_dsub+0x146>
 8001d30:	000a      	movs	r2, r1
 8001d32:	2400      	movs	r4, #0
 8001d34:	2300      	movs	r3, #0
 8001d36:	e71e      	b.n	8001b76 <__aeabi_dsub+0x146>
 8001d38:	08db      	lsrs	r3, r3, #3
 8001d3a:	4662      	mov	r2, ip
 8001d3c:	0752      	lsls	r2, r2, #29
 8001d3e:	4313      	orrs	r3, r2
 8001d40:	4662      	mov	r2, ip
 8001d42:	08d4      	lsrs	r4, r2, #3
 8001d44:	001a      	movs	r2, r3
 8001d46:	4322      	orrs	r2, r4
 8001d48:	d100      	bne.n	8001d4c <__aeabi_dsub+0x31c>
 8001d4a:	e1fc      	b.n	8002146 <__aeabi_dsub+0x716>
 8001d4c:	2280      	movs	r2, #128	; 0x80
 8001d4e:	0312      	lsls	r2, r2, #12
 8001d50:	4314      	orrs	r4, r2
 8001d52:	0324      	lsls	r4, r4, #12
 8001d54:	4a0c      	ldr	r2, [pc, #48]	; (8001d88 <__aeabi_dsub+0x358>)
 8001d56:	0b24      	lsrs	r4, r4, #12
 8001d58:	e70d      	b.n	8001b76 <__aeabi_dsub+0x146>
 8001d5a:	0020      	movs	r0, r4
 8001d5c:	f000 faa4 	bl	80022a8 <__clzsi2>
 8001d60:	0001      	movs	r1, r0
 8001d62:	3118      	adds	r1, #24
 8001d64:	291f      	cmp	r1, #31
 8001d66:	dc00      	bgt.n	8001d6a <__aeabi_dsub+0x33a>
 8001d68:	e6c4      	b.n	8001af4 <__aeabi_dsub+0xc4>
 8001d6a:	3808      	subs	r0, #8
 8001d6c:	4084      	lsls	r4, r0
 8001d6e:	4643      	mov	r3, r8
 8001d70:	0020      	movs	r0, r4
 8001d72:	2400      	movs	r4, #0
 8001d74:	4588      	cmp	r8, r1
 8001d76:	dc00      	bgt.n	8001d7a <__aeabi_dsub+0x34a>
 8001d78:	e6c8      	b.n	8001b0c <__aeabi_dsub+0xdc>
 8001d7a:	4a04      	ldr	r2, [pc, #16]	; (8001d8c <__aeabi_dsub+0x35c>)
 8001d7c:	1a5b      	subs	r3, r3, r1
 8001d7e:	4010      	ands	r0, r2
 8001d80:	4698      	mov	r8, r3
 8001d82:	4681      	mov	r9, r0
 8001d84:	e6d6      	b.n	8001b34 <__aeabi_dsub+0x104>
 8001d86:	46c0      	nop			; (mov r8, r8)
 8001d88:	000007ff 	.word	0x000007ff
 8001d8c:	ff7fffff 	.word	0xff7fffff
 8001d90:	fffff801 	.word	0xfffff801
 8001d94:	000007fe 	.word	0x000007fe
 8001d98:	430f      	orrs	r7, r1
 8001d9a:	1e7a      	subs	r2, r7, #1
 8001d9c:	4197      	sbcs	r7, r2
 8001d9e:	e691      	b.n	8001ac4 <__aeabi_dsub+0x94>
 8001da0:	4661      	mov	r1, ip
 8001da2:	08db      	lsrs	r3, r3, #3
 8001da4:	0749      	lsls	r1, r1, #29
 8001da6:	430b      	orrs	r3, r1
 8001da8:	4661      	mov	r1, ip
 8001daa:	08cc      	lsrs	r4, r1, #3
 8001dac:	e7b8      	b.n	8001d20 <__aeabi_dsub+0x2f0>
 8001dae:	4640      	mov	r0, r8
 8001db0:	4cd3      	ldr	r4, [pc, #844]	; (8002100 <__aeabi_dsub+0x6d0>)
 8001db2:	3001      	adds	r0, #1
 8001db4:	4220      	tst	r0, r4
 8001db6:	d000      	beq.n	8001dba <__aeabi_dsub+0x38a>
 8001db8:	e0a2      	b.n	8001f00 <__aeabi_dsub+0x4d0>
 8001dba:	4640      	mov	r0, r8
 8001dbc:	2800      	cmp	r0, #0
 8001dbe:	d000      	beq.n	8001dc2 <__aeabi_dsub+0x392>
 8001dc0:	e101      	b.n	8001fc6 <__aeabi_dsub+0x596>
 8001dc2:	4660      	mov	r0, ip
 8001dc4:	4318      	orrs	r0, r3
 8001dc6:	d100      	bne.n	8001dca <__aeabi_dsub+0x39a>
 8001dc8:	e15e      	b.n	8002088 <__aeabi_dsub+0x658>
 8001dca:	0008      	movs	r0, r1
 8001dcc:	4338      	orrs	r0, r7
 8001dce:	d000      	beq.n	8001dd2 <__aeabi_dsub+0x3a2>
 8001dd0:	e15f      	b.n	8002092 <__aeabi_dsub+0x662>
 8001dd2:	4661      	mov	r1, ip
 8001dd4:	08db      	lsrs	r3, r3, #3
 8001dd6:	0749      	lsls	r1, r1, #29
 8001dd8:	430b      	orrs	r3, r1
 8001dda:	4661      	mov	r1, ip
 8001ddc:	08cc      	lsrs	r4, r1, #3
 8001dde:	e7a2      	b.n	8001d26 <__aeabi_dsub+0x2f6>
 8001de0:	4dc8      	ldr	r5, [pc, #800]	; (8002104 <__aeabi_dsub+0x6d4>)
 8001de2:	42a8      	cmp	r0, r5
 8001de4:	d100      	bne.n	8001de8 <__aeabi_dsub+0x3b8>
 8001de6:	e0cf      	b.n	8001f88 <__aeabi_dsub+0x558>
 8001de8:	2580      	movs	r5, #128	; 0x80
 8001dea:	4664      	mov	r4, ip
 8001dec:	042d      	lsls	r5, r5, #16
 8001dee:	432c      	orrs	r4, r5
 8001df0:	46a4      	mov	ip, r4
 8001df2:	2a38      	cmp	r2, #56	; 0x38
 8001df4:	dc56      	bgt.n	8001ea4 <__aeabi_dsub+0x474>
 8001df6:	2a1f      	cmp	r2, #31
 8001df8:	dd00      	ble.n	8001dfc <__aeabi_dsub+0x3cc>
 8001dfa:	e0d1      	b.n	8001fa0 <__aeabi_dsub+0x570>
 8001dfc:	2520      	movs	r5, #32
 8001dfe:	001e      	movs	r6, r3
 8001e00:	1aad      	subs	r5, r5, r2
 8001e02:	4664      	mov	r4, ip
 8001e04:	40ab      	lsls	r3, r5
 8001e06:	40ac      	lsls	r4, r5
 8001e08:	40d6      	lsrs	r6, r2
 8001e0a:	1e5d      	subs	r5, r3, #1
 8001e0c:	41ab      	sbcs	r3, r5
 8001e0e:	4334      	orrs	r4, r6
 8001e10:	4323      	orrs	r3, r4
 8001e12:	4664      	mov	r4, ip
 8001e14:	40d4      	lsrs	r4, r2
 8001e16:	1b09      	subs	r1, r1, r4
 8001e18:	e049      	b.n	8001eae <__aeabi_dsub+0x47e>
 8001e1a:	4660      	mov	r0, ip
 8001e1c:	1bdc      	subs	r4, r3, r7
 8001e1e:	1a46      	subs	r6, r0, r1
 8001e20:	42a3      	cmp	r3, r4
 8001e22:	4180      	sbcs	r0, r0
 8001e24:	4240      	negs	r0, r0
 8001e26:	4681      	mov	r9, r0
 8001e28:	0030      	movs	r0, r6
 8001e2a:	464e      	mov	r6, r9
 8001e2c:	1b80      	subs	r0, r0, r6
 8001e2e:	4681      	mov	r9, r0
 8001e30:	0200      	lsls	r0, r0, #8
 8001e32:	d476      	bmi.n	8001f22 <__aeabi_dsub+0x4f2>
 8001e34:	464b      	mov	r3, r9
 8001e36:	4323      	orrs	r3, r4
 8001e38:	d000      	beq.n	8001e3c <__aeabi_dsub+0x40c>
 8001e3a:	e652      	b.n	8001ae2 <__aeabi_dsub+0xb2>
 8001e3c:	2400      	movs	r4, #0
 8001e3e:	2500      	movs	r5, #0
 8001e40:	e771      	b.n	8001d26 <__aeabi_dsub+0x2f6>
 8001e42:	4339      	orrs	r1, r7
 8001e44:	000c      	movs	r4, r1
 8001e46:	1e62      	subs	r2, r4, #1
 8001e48:	4194      	sbcs	r4, r2
 8001e4a:	18e4      	adds	r4, r4, r3
 8001e4c:	429c      	cmp	r4, r3
 8001e4e:	419b      	sbcs	r3, r3
 8001e50:	425b      	negs	r3, r3
 8001e52:	4463      	add	r3, ip
 8001e54:	4699      	mov	r9, r3
 8001e56:	464b      	mov	r3, r9
 8001e58:	021b      	lsls	r3, r3, #8
 8001e5a:	d400      	bmi.n	8001e5e <__aeabi_dsub+0x42e>
 8001e5c:	e756      	b.n	8001d0c <__aeabi_dsub+0x2dc>
 8001e5e:	2301      	movs	r3, #1
 8001e60:	469c      	mov	ip, r3
 8001e62:	4ba8      	ldr	r3, [pc, #672]	; (8002104 <__aeabi_dsub+0x6d4>)
 8001e64:	44e0      	add	r8, ip
 8001e66:	4598      	cmp	r8, r3
 8001e68:	d038      	beq.n	8001edc <__aeabi_dsub+0x4ac>
 8001e6a:	464b      	mov	r3, r9
 8001e6c:	48a6      	ldr	r0, [pc, #664]	; (8002108 <__aeabi_dsub+0x6d8>)
 8001e6e:	2201      	movs	r2, #1
 8001e70:	4003      	ands	r3, r0
 8001e72:	0018      	movs	r0, r3
 8001e74:	0863      	lsrs	r3, r4, #1
 8001e76:	4014      	ands	r4, r2
 8001e78:	431c      	orrs	r4, r3
 8001e7a:	07c3      	lsls	r3, r0, #31
 8001e7c:	431c      	orrs	r4, r3
 8001e7e:	0843      	lsrs	r3, r0, #1
 8001e80:	4699      	mov	r9, r3
 8001e82:	e657      	b.n	8001b34 <__aeabi_dsub+0x104>
 8001e84:	0010      	movs	r0, r2
 8001e86:	000e      	movs	r6, r1
 8001e88:	3820      	subs	r0, #32
 8001e8a:	40c6      	lsrs	r6, r0
 8001e8c:	2a20      	cmp	r2, #32
 8001e8e:	d004      	beq.n	8001e9a <__aeabi_dsub+0x46a>
 8001e90:	2040      	movs	r0, #64	; 0x40
 8001e92:	1a82      	subs	r2, r0, r2
 8001e94:	4091      	lsls	r1, r2
 8001e96:	430f      	orrs	r7, r1
 8001e98:	46b9      	mov	r9, r7
 8001e9a:	464f      	mov	r7, r9
 8001e9c:	1e7a      	subs	r2, r7, #1
 8001e9e:	4197      	sbcs	r7, r2
 8001ea0:	4337      	orrs	r7, r6
 8001ea2:	e60f      	b.n	8001ac4 <__aeabi_dsub+0x94>
 8001ea4:	4662      	mov	r2, ip
 8001ea6:	431a      	orrs	r2, r3
 8001ea8:	0013      	movs	r3, r2
 8001eaa:	1e5a      	subs	r2, r3, #1
 8001eac:	4193      	sbcs	r3, r2
 8001eae:	1afc      	subs	r4, r7, r3
 8001eb0:	42a7      	cmp	r7, r4
 8001eb2:	41bf      	sbcs	r7, r7
 8001eb4:	427f      	negs	r7, r7
 8001eb6:	1bcb      	subs	r3, r1, r7
 8001eb8:	4699      	mov	r9, r3
 8001eba:	465d      	mov	r5, fp
 8001ebc:	4680      	mov	r8, r0
 8001ebe:	e608      	b.n	8001ad2 <__aeabi_dsub+0xa2>
 8001ec0:	4666      	mov	r6, ip
 8001ec2:	431e      	orrs	r6, r3
 8001ec4:	d100      	bne.n	8001ec8 <__aeabi_dsub+0x498>
 8001ec6:	e0be      	b.n	8002046 <__aeabi_dsub+0x616>
 8001ec8:	1e56      	subs	r6, r2, #1
 8001eca:	2a01      	cmp	r2, #1
 8001ecc:	d100      	bne.n	8001ed0 <__aeabi_dsub+0x4a0>
 8001ece:	e109      	b.n	80020e4 <__aeabi_dsub+0x6b4>
 8001ed0:	4c8c      	ldr	r4, [pc, #560]	; (8002104 <__aeabi_dsub+0x6d4>)
 8001ed2:	42a2      	cmp	r2, r4
 8001ed4:	d100      	bne.n	8001ed8 <__aeabi_dsub+0x4a8>
 8001ed6:	e119      	b.n	800210c <__aeabi_dsub+0x6dc>
 8001ed8:	0032      	movs	r2, r6
 8001eda:	e6c1      	b.n	8001c60 <__aeabi_dsub+0x230>
 8001edc:	4642      	mov	r2, r8
 8001ede:	2400      	movs	r4, #0
 8001ee0:	2300      	movs	r3, #0
 8001ee2:	e648      	b.n	8001b76 <__aeabi_dsub+0x146>
 8001ee4:	2020      	movs	r0, #32
 8001ee6:	000c      	movs	r4, r1
 8001ee8:	1a80      	subs	r0, r0, r2
 8001eea:	003e      	movs	r6, r7
 8001eec:	4087      	lsls	r7, r0
 8001eee:	4084      	lsls	r4, r0
 8001ef0:	40d6      	lsrs	r6, r2
 8001ef2:	1e78      	subs	r0, r7, #1
 8001ef4:	4187      	sbcs	r7, r0
 8001ef6:	40d1      	lsrs	r1, r2
 8001ef8:	4334      	orrs	r4, r6
 8001efa:	433c      	orrs	r4, r7
 8001efc:	448c      	add	ip, r1
 8001efe:	e7a4      	b.n	8001e4a <__aeabi_dsub+0x41a>
 8001f00:	4a80      	ldr	r2, [pc, #512]	; (8002104 <__aeabi_dsub+0x6d4>)
 8001f02:	4290      	cmp	r0, r2
 8001f04:	d100      	bne.n	8001f08 <__aeabi_dsub+0x4d8>
 8001f06:	e0e9      	b.n	80020dc <__aeabi_dsub+0x6ac>
 8001f08:	19df      	adds	r7, r3, r7
 8001f0a:	429f      	cmp	r7, r3
 8001f0c:	419b      	sbcs	r3, r3
 8001f0e:	4461      	add	r1, ip
 8001f10:	425b      	negs	r3, r3
 8001f12:	18c9      	adds	r1, r1, r3
 8001f14:	07cc      	lsls	r4, r1, #31
 8001f16:	087f      	lsrs	r7, r7, #1
 8001f18:	084b      	lsrs	r3, r1, #1
 8001f1a:	4699      	mov	r9, r3
 8001f1c:	4680      	mov	r8, r0
 8001f1e:	433c      	orrs	r4, r7
 8001f20:	e6f4      	b.n	8001d0c <__aeabi_dsub+0x2dc>
 8001f22:	1afc      	subs	r4, r7, r3
 8001f24:	42a7      	cmp	r7, r4
 8001f26:	41bf      	sbcs	r7, r7
 8001f28:	4663      	mov	r3, ip
 8001f2a:	427f      	negs	r7, r7
 8001f2c:	1ac9      	subs	r1, r1, r3
 8001f2e:	1bcb      	subs	r3, r1, r7
 8001f30:	4699      	mov	r9, r3
 8001f32:	465d      	mov	r5, fp
 8001f34:	e5d5      	b.n	8001ae2 <__aeabi_dsub+0xb2>
 8001f36:	08ff      	lsrs	r7, r7, #3
 8001f38:	074b      	lsls	r3, r1, #29
 8001f3a:	465d      	mov	r5, fp
 8001f3c:	433b      	orrs	r3, r7
 8001f3e:	08cc      	lsrs	r4, r1, #3
 8001f40:	e6ee      	b.n	8001d20 <__aeabi_dsub+0x2f0>
 8001f42:	4662      	mov	r2, ip
 8001f44:	431a      	orrs	r2, r3
 8001f46:	d000      	beq.n	8001f4a <__aeabi_dsub+0x51a>
 8001f48:	e082      	b.n	8002050 <__aeabi_dsub+0x620>
 8001f4a:	000b      	movs	r3, r1
 8001f4c:	433b      	orrs	r3, r7
 8001f4e:	d11b      	bne.n	8001f88 <__aeabi_dsub+0x558>
 8001f50:	2480      	movs	r4, #128	; 0x80
 8001f52:	2500      	movs	r5, #0
 8001f54:	0324      	lsls	r4, r4, #12
 8001f56:	e6f9      	b.n	8001d4c <__aeabi_dsub+0x31c>
 8001f58:	19dc      	adds	r4, r3, r7
 8001f5a:	429c      	cmp	r4, r3
 8001f5c:	419b      	sbcs	r3, r3
 8001f5e:	4461      	add	r1, ip
 8001f60:	4689      	mov	r9, r1
 8001f62:	425b      	negs	r3, r3
 8001f64:	4499      	add	r9, r3
 8001f66:	464b      	mov	r3, r9
 8001f68:	021b      	lsls	r3, r3, #8
 8001f6a:	d444      	bmi.n	8001ff6 <__aeabi_dsub+0x5c6>
 8001f6c:	2301      	movs	r3, #1
 8001f6e:	4698      	mov	r8, r3
 8001f70:	e6cc      	b.n	8001d0c <__aeabi_dsub+0x2dc>
 8001f72:	1bdc      	subs	r4, r3, r7
 8001f74:	4662      	mov	r2, ip
 8001f76:	42a3      	cmp	r3, r4
 8001f78:	419b      	sbcs	r3, r3
 8001f7a:	1a51      	subs	r1, r2, r1
 8001f7c:	425b      	negs	r3, r3
 8001f7e:	1acb      	subs	r3, r1, r3
 8001f80:	4699      	mov	r9, r3
 8001f82:	2301      	movs	r3, #1
 8001f84:	4698      	mov	r8, r3
 8001f86:	e5a4      	b.n	8001ad2 <__aeabi_dsub+0xa2>
 8001f88:	08ff      	lsrs	r7, r7, #3
 8001f8a:	074b      	lsls	r3, r1, #29
 8001f8c:	465d      	mov	r5, fp
 8001f8e:	433b      	orrs	r3, r7
 8001f90:	08cc      	lsrs	r4, r1, #3
 8001f92:	e6d7      	b.n	8001d44 <__aeabi_dsub+0x314>
 8001f94:	4662      	mov	r2, ip
 8001f96:	431a      	orrs	r2, r3
 8001f98:	0014      	movs	r4, r2
 8001f9a:	1e63      	subs	r3, r4, #1
 8001f9c:	419c      	sbcs	r4, r3
 8001f9e:	e679      	b.n	8001c94 <__aeabi_dsub+0x264>
 8001fa0:	0015      	movs	r5, r2
 8001fa2:	4664      	mov	r4, ip
 8001fa4:	3d20      	subs	r5, #32
 8001fa6:	40ec      	lsrs	r4, r5
 8001fa8:	46a0      	mov	r8, r4
 8001faa:	2a20      	cmp	r2, #32
 8001fac:	d005      	beq.n	8001fba <__aeabi_dsub+0x58a>
 8001fae:	2540      	movs	r5, #64	; 0x40
 8001fb0:	4664      	mov	r4, ip
 8001fb2:	1aaa      	subs	r2, r5, r2
 8001fb4:	4094      	lsls	r4, r2
 8001fb6:	4323      	orrs	r3, r4
 8001fb8:	469a      	mov	sl, r3
 8001fba:	4654      	mov	r4, sl
 8001fbc:	1e63      	subs	r3, r4, #1
 8001fbe:	419c      	sbcs	r4, r3
 8001fc0:	4643      	mov	r3, r8
 8001fc2:	4323      	orrs	r3, r4
 8001fc4:	e773      	b.n	8001eae <__aeabi_dsub+0x47e>
 8001fc6:	4662      	mov	r2, ip
 8001fc8:	431a      	orrs	r2, r3
 8001fca:	d023      	beq.n	8002014 <__aeabi_dsub+0x5e4>
 8001fcc:	000a      	movs	r2, r1
 8001fce:	433a      	orrs	r2, r7
 8001fd0:	d000      	beq.n	8001fd4 <__aeabi_dsub+0x5a4>
 8001fd2:	e0a0      	b.n	8002116 <__aeabi_dsub+0x6e6>
 8001fd4:	4662      	mov	r2, ip
 8001fd6:	08db      	lsrs	r3, r3, #3
 8001fd8:	0752      	lsls	r2, r2, #29
 8001fda:	4313      	orrs	r3, r2
 8001fdc:	4662      	mov	r2, ip
 8001fde:	08d4      	lsrs	r4, r2, #3
 8001fe0:	e6b0      	b.n	8001d44 <__aeabi_dsub+0x314>
 8001fe2:	000b      	movs	r3, r1
 8001fe4:	433b      	orrs	r3, r7
 8001fe6:	d100      	bne.n	8001fea <__aeabi_dsub+0x5ba>
 8001fe8:	e728      	b.n	8001e3c <__aeabi_dsub+0x40c>
 8001fea:	08ff      	lsrs	r7, r7, #3
 8001fec:	074b      	lsls	r3, r1, #29
 8001fee:	465d      	mov	r5, fp
 8001ff0:	433b      	orrs	r3, r7
 8001ff2:	08cc      	lsrs	r4, r1, #3
 8001ff4:	e697      	b.n	8001d26 <__aeabi_dsub+0x2f6>
 8001ff6:	2302      	movs	r3, #2
 8001ff8:	4698      	mov	r8, r3
 8001ffa:	e736      	b.n	8001e6a <__aeabi_dsub+0x43a>
 8001ffc:	1afc      	subs	r4, r7, r3
 8001ffe:	42a7      	cmp	r7, r4
 8002000:	41bf      	sbcs	r7, r7
 8002002:	4663      	mov	r3, ip
 8002004:	427f      	negs	r7, r7
 8002006:	1ac9      	subs	r1, r1, r3
 8002008:	1bcb      	subs	r3, r1, r7
 800200a:	4699      	mov	r9, r3
 800200c:	2301      	movs	r3, #1
 800200e:	465d      	mov	r5, fp
 8002010:	4698      	mov	r8, r3
 8002012:	e55e      	b.n	8001ad2 <__aeabi_dsub+0xa2>
 8002014:	074b      	lsls	r3, r1, #29
 8002016:	08ff      	lsrs	r7, r7, #3
 8002018:	433b      	orrs	r3, r7
 800201a:	08cc      	lsrs	r4, r1, #3
 800201c:	e692      	b.n	8001d44 <__aeabi_dsub+0x314>
 800201e:	1bdc      	subs	r4, r3, r7
 8002020:	4660      	mov	r0, ip
 8002022:	42a3      	cmp	r3, r4
 8002024:	41b6      	sbcs	r6, r6
 8002026:	1a40      	subs	r0, r0, r1
 8002028:	4276      	negs	r6, r6
 800202a:	1b80      	subs	r0, r0, r6
 800202c:	4681      	mov	r9, r0
 800202e:	0200      	lsls	r0, r0, #8
 8002030:	d560      	bpl.n	80020f4 <__aeabi_dsub+0x6c4>
 8002032:	1afc      	subs	r4, r7, r3
 8002034:	42a7      	cmp	r7, r4
 8002036:	41bf      	sbcs	r7, r7
 8002038:	4663      	mov	r3, ip
 800203a:	427f      	negs	r7, r7
 800203c:	1ac9      	subs	r1, r1, r3
 800203e:	1bcb      	subs	r3, r1, r7
 8002040:	4699      	mov	r9, r3
 8002042:	465d      	mov	r5, fp
 8002044:	e576      	b.n	8001b34 <__aeabi_dsub+0x104>
 8002046:	08ff      	lsrs	r7, r7, #3
 8002048:	074b      	lsls	r3, r1, #29
 800204a:	433b      	orrs	r3, r7
 800204c:	08cc      	lsrs	r4, r1, #3
 800204e:	e667      	b.n	8001d20 <__aeabi_dsub+0x2f0>
 8002050:	000a      	movs	r2, r1
 8002052:	08db      	lsrs	r3, r3, #3
 8002054:	433a      	orrs	r2, r7
 8002056:	d100      	bne.n	800205a <__aeabi_dsub+0x62a>
 8002058:	e66f      	b.n	8001d3a <__aeabi_dsub+0x30a>
 800205a:	4662      	mov	r2, ip
 800205c:	0752      	lsls	r2, r2, #29
 800205e:	4313      	orrs	r3, r2
 8002060:	4662      	mov	r2, ip
 8002062:	08d4      	lsrs	r4, r2, #3
 8002064:	2280      	movs	r2, #128	; 0x80
 8002066:	0312      	lsls	r2, r2, #12
 8002068:	4214      	tst	r4, r2
 800206a:	d007      	beq.n	800207c <__aeabi_dsub+0x64c>
 800206c:	08c8      	lsrs	r0, r1, #3
 800206e:	4210      	tst	r0, r2
 8002070:	d104      	bne.n	800207c <__aeabi_dsub+0x64c>
 8002072:	465d      	mov	r5, fp
 8002074:	0004      	movs	r4, r0
 8002076:	08fb      	lsrs	r3, r7, #3
 8002078:	0749      	lsls	r1, r1, #29
 800207a:	430b      	orrs	r3, r1
 800207c:	0f5a      	lsrs	r2, r3, #29
 800207e:	00db      	lsls	r3, r3, #3
 8002080:	08db      	lsrs	r3, r3, #3
 8002082:	0752      	lsls	r2, r2, #29
 8002084:	4313      	orrs	r3, r2
 8002086:	e65d      	b.n	8001d44 <__aeabi_dsub+0x314>
 8002088:	074b      	lsls	r3, r1, #29
 800208a:	08ff      	lsrs	r7, r7, #3
 800208c:	433b      	orrs	r3, r7
 800208e:	08cc      	lsrs	r4, r1, #3
 8002090:	e649      	b.n	8001d26 <__aeabi_dsub+0x2f6>
 8002092:	19dc      	adds	r4, r3, r7
 8002094:	429c      	cmp	r4, r3
 8002096:	419b      	sbcs	r3, r3
 8002098:	4461      	add	r1, ip
 800209a:	4689      	mov	r9, r1
 800209c:	425b      	negs	r3, r3
 800209e:	4499      	add	r9, r3
 80020a0:	464b      	mov	r3, r9
 80020a2:	021b      	lsls	r3, r3, #8
 80020a4:	d400      	bmi.n	80020a8 <__aeabi_dsub+0x678>
 80020a6:	e631      	b.n	8001d0c <__aeabi_dsub+0x2dc>
 80020a8:	464a      	mov	r2, r9
 80020aa:	4b17      	ldr	r3, [pc, #92]	; (8002108 <__aeabi_dsub+0x6d8>)
 80020ac:	401a      	ands	r2, r3
 80020ae:	2301      	movs	r3, #1
 80020b0:	4691      	mov	r9, r2
 80020b2:	4698      	mov	r8, r3
 80020b4:	e62a      	b.n	8001d0c <__aeabi_dsub+0x2dc>
 80020b6:	0016      	movs	r6, r2
 80020b8:	4664      	mov	r4, ip
 80020ba:	3e20      	subs	r6, #32
 80020bc:	40f4      	lsrs	r4, r6
 80020be:	46a0      	mov	r8, r4
 80020c0:	2a20      	cmp	r2, #32
 80020c2:	d005      	beq.n	80020d0 <__aeabi_dsub+0x6a0>
 80020c4:	2640      	movs	r6, #64	; 0x40
 80020c6:	4664      	mov	r4, ip
 80020c8:	1ab2      	subs	r2, r6, r2
 80020ca:	4094      	lsls	r4, r2
 80020cc:	4323      	orrs	r3, r4
 80020ce:	469a      	mov	sl, r3
 80020d0:	4654      	mov	r4, sl
 80020d2:	1e63      	subs	r3, r4, #1
 80020d4:	419c      	sbcs	r4, r3
 80020d6:	4643      	mov	r3, r8
 80020d8:	431c      	orrs	r4, r3
 80020da:	e5db      	b.n	8001c94 <__aeabi_dsub+0x264>
 80020dc:	0002      	movs	r2, r0
 80020de:	2400      	movs	r4, #0
 80020e0:	2300      	movs	r3, #0
 80020e2:	e548      	b.n	8001b76 <__aeabi_dsub+0x146>
 80020e4:	19dc      	adds	r4, r3, r7
 80020e6:	42bc      	cmp	r4, r7
 80020e8:	41bf      	sbcs	r7, r7
 80020ea:	4461      	add	r1, ip
 80020ec:	4689      	mov	r9, r1
 80020ee:	427f      	negs	r7, r7
 80020f0:	44b9      	add	r9, r7
 80020f2:	e738      	b.n	8001f66 <__aeabi_dsub+0x536>
 80020f4:	464b      	mov	r3, r9
 80020f6:	4323      	orrs	r3, r4
 80020f8:	d100      	bne.n	80020fc <__aeabi_dsub+0x6cc>
 80020fa:	e69f      	b.n	8001e3c <__aeabi_dsub+0x40c>
 80020fc:	e606      	b.n	8001d0c <__aeabi_dsub+0x2dc>
 80020fe:	46c0      	nop			; (mov r8, r8)
 8002100:	000007fe 	.word	0x000007fe
 8002104:	000007ff 	.word	0x000007ff
 8002108:	ff7fffff 	.word	0xff7fffff
 800210c:	08ff      	lsrs	r7, r7, #3
 800210e:	074b      	lsls	r3, r1, #29
 8002110:	433b      	orrs	r3, r7
 8002112:	08cc      	lsrs	r4, r1, #3
 8002114:	e616      	b.n	8001d44 <__aeabi_dsub+0x314>
 8002116:	4662      	mov	r2, ip
 8002118:	08db      	lsrs	r3, r3, #3
 800211a:	0752      	lsls	r2, r2, #29
 800211c:	4313      	orrs	r3, r2
 800211e:	4662      	mov	r2, ip
 8002120:	08d4      	lsrs	r4, r2, #3
 8002122:	2280      	movs	r2, #128	; 0x80
 8002124:	0312      	lsls	r2, r2, #12
 8002126:	4214      	tst	r4, r2
 8002128:	d007      	beq.n	800213a <__aeabi_dsub+0x70a>
 800212a:	08c8      	lsrs	r0, r1, #3
 800212c:	4210      	tst	r0, r2
 800212e:	d104      	bne.n	800213a <__aeabi_dsub+0x70a>
 8002130:	465d      	mov	r5, fp
 8002132:	0004      	movs	r4, r0
 8002134:	08fb      	lsrs	r3, r7, #3
 8002136:	0749      	lsls	r1, r1, #29
 8002138:	430b      	orrs	r3, r1
 800213a:	0f5a      	lsrs	r2, r3, #29
 800213c:	00db      	lsls	r3, r3, #3
 800213e:	0752      	lsls	r2, r2, #29
 8002140:	08db      	lsrs	r3, r3, #3
 8002142:	4313      	orrs	r3, r2
 8002144:	e5fe      	b.n	8001d44 <__aeabi_dsub+0x314>
 8002146:	2300      	movs	r3, #0
 8002148:	4a01      	ldr	r2, [pc, #4]	; (8002150 <__aeabi_dsub+0x720>)
 800214a:	001c      	movs	r4, r3
 800214c:	e513      	b.n	8001b76 <__aeabi_dsub+0x146>
 800214e:	46c0      	nop			; (mov r8, r8)
 8002150:	000007ff 	.word	0x000007ff

08002154 <__aeabi_dcmpun>:
 8002154:	b570      	push	{r4, r5, r6, lr}
 8002156:	0005      	movs	r5, r0
 8002158:	480c      	ldr	r0, [pc, #48]	; (800218c <__aeabi_dcmpun+0x38>)
 800215a:	031c      	lsls	r4, r3, #12
 800215c:	0016      	movs	r6, r2
 800215e:	005b      	lsls	r3, r3, #1
 8002160:	030a      	lsls	r2, r1, #12
 8002162:	0049      	lsls	r1, r1, #1
 8002164:	0b12      	lsrs	r2, r2, #12
 8002166:	0d49      	lsrs	r1, r1, #21
 8002168:	0b24      	lsrs	r4, r4, #12
 800216a:	0d5b      	lsrs	r3, r3, #21
 800216c:	4281      	cmp	r1, r0
 800216e:	d008      	beq.n	8002182 <__aeabi_dcmpun+0x2e>
 8002170:	4a06      	ldr	r2, [pc, #24]	; (800218c <__aeabi_dcmpun+0x38>)
 8002172:	2000      	movs	r0, #0
 8002174:	4293      	cmp	r3, r2
 8002176:	d103      	bne.n	8002180 <__aeabi_dcmpun+0x2c>
 8002178:	0020      	movs	r0, r4
 800217a:	4330      	orrs	r0, r6
 800217c:	1e43      	subs	r3, r0, #1
 800217e:	4198      	sbcs	r0, r3
 8002180:	bd70      	pop	{r4, r5, r6, pc}
 8002182:	2001      	movs	r0, #1
 8002184:	432a      	orrs	r2, r5
 8002186:	d1fb      	bne.n	8002180 <__aeabi_dcmpun+0x2c>
 8002188:	e7f2      	b.n	8002170 <__aeabi_dcmpun+0x1c>
 800218a:	46c0      	nop			; (mov r8, r8)
 800218c:	000007ff 	.word	0x000007ff

08002190 <__aeabi_d2iz>:
 8002190:	000a      	movs	r2, r1
 8002192:	b530      	push	{r4, r5, lr}
 8002194:	4c13      	ldr	r4, [pc, #76]	; (80021e4 <__aeabi_d2iz+0x54>)
 8002196:	0053      	lsls	r3, r2, #1
 8002198:	0309      	lsls	r1, r1, #12
 800219a:	0005      	movs	r5, r0
 800219c:	0b09      	lsrs	r1, r1, #12
 800219e:	2000      	movs	r0, #0
 80021a0:	0d5b      	lsrs	r3, r3, #21
 80021a2:	0fd2      	lsrs	r2, r2, #31
 80021a4:	42a3      	cmp	r3, r4
 80021a6:	dd04      	ble.n	80021b2 <__aeabi_d2iz+0x22>
 80021a8:	480f      	ldr	r0, [pc, #60]	; (80021e8 <__aeabi_d2iz+0x58>)
 80021aa:	4283      	cmp	r3, r0
 80021ac:	dd02      	ble.n	80021b4 <__aeabi_d2iz+0x24>
 80021ae:	4b0f      	ldr	r3, [pc, #60]	; (80021ec <__aeabi_d2iz+0x5c>)
 80021b0:	18d0      	adds	r0, r2, r3
 80021b2:	bd30      	pop	{r4, r5, pc}
 80021b4:	2080      	movs	r0, #128	; 0x80
 80021b6:	0340      	lsls	r0, r0, #13
 80021b8:	4301      	orrs	r1, r0
 80021ba:	480d      	ldr	r0, [pc, #52]	; (80021f0 <__aeabi_d2iz+0x60>)
 80021bc:	1ac0      	subs	r0, r0, r3
 80021be:	281f      	cmp	r0, #31
 80021c0:	dd08      	ble.n	80021d4 <__aeabi_d2iz+0x44>
 80021c2:	480c      	ldr	r0, [pc, #48]	; (80021f4 <__aeabi_d2iz+0x64>)
 80021c4:	1ac3      	subs	r3, r0, r3
 80021c6:	40d9      	lsrs	r1, r3
 80021c8:	000b      	movs	r3, r1
 80021ca:	4258      	negs	r0, r3
 80021cc:	2a00      	cmp	r2, #0
 80021ce:	d1f0      	bne.n	80021b2 <__aeabi_d2iz+0x22>
 80021d0:	0018      	movs	r0, r3
 80021d2:	e7ee      	b.n	80021b2 <__aeabi_d2iz+0x22>
 80021d4:	4c08      	ldr	r4, [pc, #32]	; (80021f8 <__aeabi_d2iz+0x68>)
 80021d6:	40c5      	lsrs	r5, r0
 80021d8:	46a4      	mov	ip, r4
 80021da:	4463      	add	r3, ip
 80021dc:	4099      	lsls	r1, r3
 80021de:	000b      	movs	r3, r1
 80021e0:	432b      	orrs	r3, r5
 80021e2:	e7f2      	b.n	80021ca <__aeabi_d2iz+0x3a>
 80021e4:	000003fe 	.word	0x000003fe
 80021e8:	0000041d 	.word	0x0000041d
 80021ec:	7fffffff 	.word	0x7fffffff
 80021f0:	00000433 	.word	0x00000433
 80021f4:	00000413 	.word	0x00000413
 80021f8:	fffffbed 	.word	0xfffffbed

080021fc <__aeabi_i2d>:
 80021fc:	b570      	push	{r4, r5, r6, lr}
 80021fe:	2800      	cmp	r0, #0
 8002200:	d016      	beq.n	8002230 <__aeabi_i2d+0x34>
 8002202:	17c3      	asrs	r3, r0, #31
 8002204:	18c5      	adds	r5, r0, r3
 8002206:	405d      	eors	r5, r3
 8002208:	0fc4      	lsrs	r4, r0, #31
 800220a:	0028      	movs	r0, r5
 800220c:	f000 f84c 	bl	80022a8 <__clzsi2>
 8002210:	4a11      	ldr	r2, [pc, #68]	; (8002258 <__aeabi_i2d+0x5c>)
 8002212:	1a12      	subs	r2, r2, r0
 8002214:	280a      	cmp	r0, #10
 8002216:	dc16      	bgt.n	8002246 <__aeabi_i2d+0x4a>
 8002218:	0003      	movs	r3, r0
 800221a:	002e      	movs	r6, r5
 800221c:	3315      	adds	r3, #21
 800221e:	409e      	lsls	r6, r3
 8002220:	230b      	movs	r3, #11
 8002222:	1a18      	subs	r0, r3, r0
 8002224:	40c5      	lsrs	r5, r0
 8002226:	0552      	lsls	r2, r2, #21
 8002228:	032d      	lsls	r5, r5, #12
 800222a:	0b2d      	lsrs	r5, r5, #12
 800222c:	0d53      	lsrs	r3, r2, #21
 800222e:	e003      	b.n	8002238 <__aeabi_i2d+0x3c>
 8002230:	2400      	movs	r4, #0
 8002232:	2300      	movs	r3, #0
 8002234:	2500      	movs	r5, #0
 8002236:	2600      	movs	r6, #0
 8002238:	051b      	lsls	r3, r3, #20
 800223a:	432b      	orrs	r3, r5
 800223c:	07e4      	lsls	r4, r4, #31
 800223e:	4323      	orrs	r3, r4
 8002240:	0030      	movs	r0, r6
 8002242:	0019      	movs	r1, r3
 8002244:	bd70      	pop	{r4, r5, r6, pc}
 8002246:	380b      	subs	r0, #11
 8002248:	4085      	lsls	r5, r0
 800224a:	0552      	lsls	r2, r2, #21
 800224c:	032d      	lsls	r5, r5, #12
 800224e:	2600      	movs	r6, #0
 8002250:	0b2d      	lsrs	r5, r5, #12
 8002252:	0d53      	lsrs	r3, r2, #21
 8002254:	e7f0      	b.n	8002238 <__aeabi_i2d+0x3c>
 8002256:	46c0      	nop			; (mov r8, r8)
 8002258:	0000041e 	.word	0x0000041e

0800225c <__aeabi_ui2d>:
 800225c:	b510      	push	{r4, lr}
 800225e:	1e04      	subs	r4, r0, #0
 8002260:	d010      	beq.n	8002284 <__aeabi_ui2d+0x28>
 8002262:	f000 f821 	bl	80022a8 <__clzsi2>
 8002266:	4b0f      	ldr	r3, [pc, #60]	; (80022a4 <__aeabi_ui2d+0x48>)
 8002268:	1a1b      	subs	r3, r3, r0
 800226a:	280a      	cmp	r0, #10
 800226c:	dc11      	bgt.n	8002292 <__aeabi_ui2d+0x36>
 800226e:	220b      	movs	r2, #11
 8002270:	0021      	movs	r1, r4
 8002272:	1a12      	subs	r2, r2, r0
 8002274:	40d1      	lsrs	r1, r2
 8002276:	3015      	adds	r0, #21
 8002278:	030a      	lsls	r2, r1, #12
 800227a:	055b      	lsls	r3, r3, #21
 800227c:	4084      	lsls	r4, r0
 800227e:	0b12      	lsrs	r2, r2, #12
 8002280:	0d5b      	lsrs	r3, r3, #21
 8002282:	e001      	b.n	8002288 <__aeabi_ui2d+0x2c>
 8002284:	2300      	movs	r3, #0
 8002286:	2200      	movs	r2, #0
 8002288:	051b      	lsls	r3, r3, #20
 800228a:	4313      	orrs	r3, r2
 800228c:	0020      	movs	r0, r4
 800228e:	0019      	movs	r1, r3
 8002290:	bd10      	pop	{r4, pc}
 8002292:	0022      	movs	r2, r4
 8002294:	380b      	subs	r0, #11
 8002296:	4082      	lsls	r2, r0
 8002298:	055b      	lsls	r3, r3, #21
 800229a:	0312      	lsls	r2, r2, #12
 800229c:	2400      	movs	r4, #0
 800229e:	0b12      	lsrs	r2, r2, #12
 80022a0:	0d5b      	lsrs	r3, r3, #21
 80022a2:	e7f1      	b.n	8002288 <__aeabi_ui2d+0x2c>
 80022a4:	0000041e 	.word	0x0000041e

080022a8 <__clzsi2>:
 80022a8:	211c      	movs	r1, #28
 80022aa:	2301      	movs	r3, #1
 80022ac:	041b      	lsls	r3, r3, #16
 80022ae:	4298      	cmp	r0, r3
 80022b0:	d301      	bcc.n	80022b6 <__clzsi2+0xe>
 80022b2:	0c00      	lsrs	r0, r0, #16
 80022b4:	3910      	subs	r1, #16
 80022b6:	0a1b      	lsrs	r3, r3, #8
 80022b8:	4298      	cmp	r0, r3
 80022ba:	d301      	bcc.n	80022c0 <__clzsi2+0x18>
 80022bc:	0a00      	lsrs	r0, r0, #8
 80022be:	3908      	subs	r1, #8
 80022c0:	091b      	lsrs	r3, r3, #4
 80022c2:	4298      	cmp	r0, r3
 80022c4:	d301      	bcc.n	80022ca <__clzsi2+0x22>
 80022c6:	0900      	lsrs	r0, r0, #4
 80022c8:	3904      	subs	r1, #4
 80022ca:	a202      	add	r2, pc, #8	; (adr r2, 80022d4 <__clzsi2+0x2c>)
 80022cc:	5c10      	ldrb	r0, [r2, r0]
 80022ce:	1840      	adds	r0, r0, r1
 80022d0:	4770      	bx	lr
 80022d2:	46c0      	nop			; (mov r8, r8)
 80022d4:	02020304 	.word	0x02020304
 80022d8:	01010101 	.word	0x01010101
	...

080022e4 <__clzdi2>:
 80022e4:	b510      	push	{r4, lr}
 80022e6:	2900      	cmp	r1, #0
 80022e8:	d103      	bne.n	80022f2 <__clzdi2+0xe>
 80022ea:	f7ff ffdd 	bl	80022a8 <__clzsi2>
 80022ee:	3020      	adds	r0, #32
 80022f0:	e002      	b.n	80022f8 <__clzdi2+0x14>
 80022f2:	0008      	movs	r0, r1
 80022f4:	f7ff ffd8 	bl	80022a8 <__clzsi2>
 80022f8:	bd10      	pop	{r4, pc}
 80022fa:	46c0      	nop			; (mov r8, r8)

080022fc <main>:
uint32_t adcVal1;
uint32_t DOval;
ADC_ChannelConfTypeDef sConfig;

int main(void)
{
 80022fc:	b580      	push	{r7, lr}
 80022fe:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002300:	f000 fabc 	bl	800287c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002304:	f000 f84a 	bl	800239c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002308:	f000 f908 	bl	800251c <MX_GPIO_Init>
  MX_ADC_Init();
 800230c:	f000 f89a 	bl	8002444 <MX_ADC_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
      if (GPIOA->IDR & GPIO_IDR_ID5) {
 8002310:	23a0      	movs	r3, #160	; 0xa0
 8002312:	05db      	lsls	r3, r3, #23
 8002314:	691b      	ldr	r3, [r3, #16]
 8002316:	2220      	movs	r2, #32
 8002318:	4013      	ands	r3, r2
 800231a:	d003      	beq.n	8002324 <main+0x28>
          DOval = 1; // D13 is high
 800231c:	4b19      	ldr	r3, [pc, #100]	; (8002384 <main+0x88>)
 800231e:	2201      	movs	r2, #1
 8002320:	601a      	str	r2, [r3, #0]
 8002322:	e002      	b.n	800232a <main+0x2e>
      } else {
          DOval = 0; // D13 is low
 8002324:	4b17      	ldr	r3, [pc, #92]	; (8002384 <main+0x88>)
 8002326:	2200      	movs	r2, #0
 8002328:	601a      	str	r2, [r3, #0]
      }
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  sConfig.Channel = ADC_CHANNEL_0;
 800232a:	4b17      	ldr	r3, [pc, #92]	; (8002388 <main+0x8c>)
 800232c:	2201      	movs	r2, #1
 800232e:	601a      	str	r2, [r3, #0]
	  HAL_ADC_ConfigChannel(&hadc, &sConfig);
 8002330:	4a15      	ldr	r2, [pc, #84]	; (8002388 <main+0x8c>)
 8002332:	4b16      	ldr	r3, [pc, #88]	; (800238c <main+0x90>)
 8002334:	0011      	movs	r1, r2
 8002336:	0018      	movs	r0, r3
 8002338:	f000 fda4 	bl	8002e84 <HAL_ADC_ConfigChannel>
	  HAL_ADC_Start(&hadc);
 800233c:	4b13      	ldr	r3, [pc, #76]	; (800238c <main+0x90>)
 800233e:	0018      	movs	r0, r3
 8002340:	f000 fca4 	bl	8002c8c <HAL_ADC_Start>
	  if(HAL_ADC_PollForConversion(&hadc,5) == HAL_OK)
 8002344:	4b11      	ldr	r3, [pc, #68]	; (800238c <main+0x90>)
 8002346:	2105      	movs	r1, #5
 8002348:	0018      	movs	r0, r3
 800234a:	f000 fcf3 	bl	8002d34 <HAL_ADC_PollForConversion>
 800234e:	1e03      	subs	r3, r0, #0
 8002350:	d106      	bne.n	8002360 <main+0x64>
	  {
		  adcVal0 = HAL_ADC_GetValue(&hadc);
 8002352:	4b0e      	ldr	r3, [pc, #56]	; (800238c <main+0x90>)
 8002354:	0018      	movs	r0, r3
 8002356:	f000 fd89 	bl	8002e6c <HAL_ADC_GetValue>
 800235a:	0002      	movs	r2, r0
 800235c:	4b0c      	ldr	r3, [pc, #48]	; (8002390 <main+0x94>)
 800235e:	601a      	str	r2, [r3, #0]
	  HAL_ADC_Start(&hadc);
	  if(HAL_ADC_PollForConversion(&hadc,5) == HAL_OK)
	  {
		  adcVal0 = HAL_ADC_GetValue(&hadc);
	  }*/
	  printf("ADC = %ld\n",adcVal0);
 8002360:	4b0b      	ldr	r3, [pc, #44]	; (8002390 <main+0x94>)
 8002362:	681a      	ldr	r2, [r3, #0]
 8002364:	4b0b      	ldr	r3, [pc, #44]	; (8002394 <main+0x98>)
 8002366:	0011      	movs	r1, r2
 8002368:	0018      	movs	r0, r3
 800236a:	f002 fb4d 	bl	8004a08 <iprintf>
	  printf("Digital = %ld\n",DOval);
 800236e:	4b05      	ldr	r3, [pc, #20]	; (8002384 <main+0x88>)
 8002370:	681a      	ldr	r2, [r3, #0]
 8002372:	4b09      	ldr	r3, [pc, #36]	; (8002398 <main+0x9c>)
 8002374:	0011      	movs	r1, r2
 8002376:	0018      	movs	r0, r3
 8002378:	f002 fb46 	bl	8004a08 <iprintf>

	  HAL_Delay(50);
 800237c:	2032      	movs	r0, #50	; 0x32
 800237e:	f000 faed 	bl	800295c <HAL_Delay>
      if (GPIOA->IDR & GPIO_IDR_ID5) {
 8002382:	e7c5      	b.n	8002310 <main+0x14>
 8002384:	20000258 	.word	0x20000258
 8002388:	2000025c 	.word	0x2000025c
 800238c:	200001f8 	.word	0x200001f8
 8002390:	20000254 	.word	0x20000254
 8002394:	08006d10 	.word	0x08006d10
 8002398:	08006d1c 	.word	0x08006d1c

0800239c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800239c:	b590      	push	{r4, r7, lr}
 800239e:	b095      	sub	sp, #84	; 0x54
 80023a0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80023a2:	2418      	movs	r4, #24
 80023a4:	193b      	adds	r3, r7, r4
 80023a6:	0018      	movs	r0, r3
 80023a8:	2338      	movs	r3, #56	; 0x38
 80023aa:	001a      	movs	r2, r3
 80023ac:	2100      	movs	r1, #0
 80023ae:	f001 feb5 	bl	800411c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80023b2:	1d3b      	adds	r3, r7, #4
 80023b4:	0018      	movs	r0, r3
 80023b6:	2314      	movs	r3, #20
 80023b8:	001a      	movs	r2, r3
 80023ba:	2100      	movs	r1, #0
 80023bc:	f001 feae 	bl	800411c <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80023c0:	4b1e      	ldr	r3, [pc, #120]	; (800243c <SystemClock_Config+0xa0>)
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4a1e      	ldr	r2, [pc, #120]	; (8002440 <SystemClock_Config+0xa4>)
 80023c6:	401a      	ands	r2, r3
 80023c8:	4b1c      	ldr	r3, [pc, #112]	; (800243c <SystemClock_Config+0xa0>)
 80023ca:	2180      	movs	r1, #128	; 0x80
 80023cc:	0109      	lsls	r1, r1, #4
 80023ce:	430a      	orrs	r2, r1
 80023d0:	601a      	str	r2, [r3, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80023d2:	0021      	movs	r1, r4
 80023d4:	187b      	adds	r3, r7, r1
 80023d6:	2210      	movs	r2, #16
 80023d8:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80023da:	187b      	adds	r3, r7, r1
 80023dc:	2201      	movs	r2, #1
 80023de:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.MSICalibrationValue = 0;
 80023e0:	187b      	adds	r3, r7, r1
 80023e2:	2200      	movs	r2, #0
 80023e4:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 80023e6:	187b      	adds	r3, r7, r1
 80023e8:	22a0      	movs	r2, #160	; 0xa0
 80023ea:	0212      	lsls	r2, r2, #8
 80023ec:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80023ee:	187b      	adds	r3, r7, r1
 80023f0:	2200      	movs	r2, #0
 80023f2:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023f4:	187b      	adds	r3, r7, r1
 80023f6:	0018      	movs	r0, r3
 80023f8:	f001 f8b4 	bl	8003564 <HAL_RCC_OscConfig>
 80023fc:	1e03      	subs	r3, r0, #0
 80023fe:	d001      	beq.n	8002404 <SystemClock_Config+0x68>
  {
    Error_Handler();
 8002400:	f000 f8e2 	bl	80025c8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002404:	1d3b      	adds	r3, r7, #4
 8002406:	220f      	movs	r2, #15
 8002408:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 800240a:	1d3b      	adds	r3, r7, #4
 800240c:	2200      	movs	r2, #0
 800240e:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002410:	1d3b      	adds	r3, r7, #4
 8002412:	2200      	movs	r2, #0
 8002414:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002416:	1d3b      	adds	r3, r7, #4
 8002418:	2200      	movs	r2, #0
 800241a:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800241c:	1d3b      	adds	r3, r7, #4
 800241e:	2200      	movs	r2, #0
 8002420:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8002422:	1d3b      	adds	r3, r7, #4
 8002424:	2100      	movs	r1, #0
 8002426:	0018      	movs	r0, r3
 8002428:	f001 fc60 	bl	8003cec <HAL_RCC_ClockConfig>
 800242c:	1e03      	subs	r3, r0, #0
 800242e:	d001      	beq.n	8002434 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8002430:	f000 f8ca 	bl	80025c8 <Error_Handler>
  }
}
 8002434:	46c0      	nop			; (mov r8, r8)
 8002436:	46bd      	mov	sp, r7
 8002438:	b015      	add	sp, #84	; 0x54
 800243a:	bd90      	pop	{r4, r7, pc}
 800243c:	40007000 	.word	0x40007000
 8002440:	ffffe7ff 	.word	0xffffe7ff

08002444 <MX_ADC_Init>:
  * @brief ADC Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC_Init(void)
{
 8002444:	b580      	push	{r7, lr}
 8002446:	af00      	add	r7, sp, #0

  /* USER CODE END ADC_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc.Instance = ADC1;
 8002448:	4b30      	ldr	r3, [pc, #192]	; (800250c <MX_ADC_Init+0xc8>)
 800244a:	4a31      	ldr	r2, [pc, #196]	; (8002510 <MX_ADC_Init+0xcc>)
 800244c:	601a      	str	r2, [r3, #0]
  hadc.Init.OversamplingMode = DISABLE;
 800244e:	4b2f      	ldr	r3, [pc, #188]	; (800250c <MX_ADC_Init+0xc8>)
 8002450:	2200      	movs	r2, #0
 8002452:	63da      	str	r2, [r3, #60]	; 0x3c
  hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 8002454:	4b2d      	ldr	r3, [pc, #180]	; (800250c <MX_ADC_Init+0xc8>)
 8002456:	22c0      	movs	r2, #192	; 0xc0
 8002458:	0612      	lsls	r2, r2, #24
 800245a:	605a      	str	r2, [r3, #4]
  hadc.Init.Resolution = ADC_RESOLUTION_8B;
 800245c:	4b2b      	ldr	r3, [pc, #172]	; (800250c <MX_ADC_Init+0xc8>)
 800245e:	2210      	movs	r2, #16
 8002460:	609a      	str	r2, [r3, #8]
  hadc.Init.SamplingTime = ADC_SAMPLETIME_39CYCLES_5;
 8002462:	4b2a      	ldr	r3, [pc, #168]	; (800250c <MX_ADC_Init+0xc8>)
 8002464:	2205      	movs	r2, #5
 8002466:	639a      	str	r2, [r3, #56]	; 0x38
  hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 8002468:	4b28      	ldr	r3, [pc, #160]	; (800250c <MX_ADC_Init+0xc8>)
 800246a:	2201      	movs	r2, #1
 800246c:	611a      	str	r2, [r3, #16]
  hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800246e:	4b27      	ldr	r3, [pc, #156]	; (800250c <MX_ADC_Init+0xc8>)
 8002470:	2200      	movs	r2, #0
 8002472:	60da      	str	r2, [r3, #12]
  hadc.Init.ContinuousConvMode = DISABLE;
 8002474:	4b25      	ldr	r3, [pc, #148]	; (800250c <MX_ADC_Init+0xc8>)
 8002476:	2220      	movs	r2, #32
 8002478:	2100      	movs	r1, #0
 800247a:	5499      	strb	r1, [r3, r2]
  hadc.Init.DiscontinuousConvMode = DISABLE;
 800247c:	4b23      	ldr	r3, [pc, #140]	; (800250c <MX_ADC_Init+0xc8>)
 800247e:	2221      	movs	r2, #33	; 0x21
 8002480:	2100      	movs	r1, #0
 8002482:	5499      	strb	r1, [r3, r2]
  hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8002484:	4b21      	ldr	r3, [pc, #132]	; (800250c <MX_ADC_Init+0xc8>)
 8002486:	2200      	movs	r2, #0
 8002488:	629a      	str	r2, [r3, #40]	; 0x28
  hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800248a:	4b20      	ldr	r3, [pc, #128]	; (800250c <MX_ADC_Init+0xc8>)
 800248c:	22c2      	movs	r2, #194	; 0xc2
 800248e:	32ff      	adds	r2, #255	; 0xff
 8002490:	625a      	str	r2, [r3, #36]	; 0x24
  hadc.Init.DMAContinuousRequests = DISABLE;
 8002492:	4b1e      	ldr	r3, [pc, #120]	; (800250c <MX_ADC_Init+0xc8>)
 8002494:	222c      	movs	r2, #44	; 0x2c
 8002496:	2100      	movs	r1, #0
 8002498:	5499      	strb	r1, [r3, r2]
  hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800249a:	4b1c      	ldr	r3, [pc, #112]	; (800250c <MX_ADC_Init+0xc8>)
 800249c:	2204      	movs	r2, #4
 800249e:	615a      	str	r2, [r3, #20]
  hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80024a0:	4b1a      	ldr	r3, [pc, #104]	; (800250c <MX_ADC_Init+0xc8>)
 80024a2:	2200      	movs	r2, #0
 80024a4:	631a      	str	r2, [r3, #48]	; 0x30
  hadc.Init.LowPowerAutoWait = DISABLE;
 80024a6:	4b19      	ldr	r3, [pc, #100]	; (800250c <MX_ADC_Init+0xc8>)
 80024a8:	2200      	movs	r2, #0
 80024aa:	619a      	str	r2, [r3, #24]
  hadc.Init.LowPowerFrequencyMode = ENABLE;
 80024ac:	4b17      	ldr	r3, [pc, #92]	; (800250c <MX_ADC_Init+0xc8>)
 80024ae:	2201      	movs	r2, #1
 80024b0:	635a      	str	r2, [r3, #52]	; 0x34
  hadc.Init.LowPowerAutoPowerOff = DISABLE;
 80024b2:	4b16      	ldr	r3, [pc, #88]	; (800250c <MX_ADC_Init+0xc8>)
 80024b4:	2200      	movs	r2, #0
 80024b6:	61da      	str	r2, [r3, #28]
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 80024b8:	4b14      	ldr	r3, [pc, #80]	; (800250c <MX_ADC_Init+0xc8>)
 80024ba:	0018      	movs	r0, r3
 80024bc:	f000 fa72 	bl	80029a4 <HAL_ADC_Init>
 80024c0:	1e03      	subs	r3, r0, #0
 80024c2:	d001      	beq.n	80024c8 <MX_ADC_Init+0x84>
  {
    Error_Handler();
 80024c4:	f000 f880 	bl	80025c8 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel to be converted.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 80024c8:	4b12      	ldr	r3, [pc, #72]	; (8002514 <MX_ADC_Init+0xd0>)
 80024ca:	2201      	movs	r2, #1
 80024cc:	601a      	str	r2, [r3, #0]
  sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 80024ce:	4b11      	ldr	r3, [pc, #68]	; (8002514 <MX_ADC_Init+0xd0>)
 80024d0:	2280      	movs	r2, #128	; 0x80
 80024d2:	0152      	lsls	r2, r2, #5
 80024d4:	605a      	str	r2, [r3, #4]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80024d6:	4a0f      	ldr	r2, [pc, #60]	; (8002514 <MX_ADC_Init+0xd0>)
 80024d8:	4b0c      	ldr	r3, [pc, #48]	; (800250c <MX_ADC_Init+0xc8>)
 80024da:	0011      	movs	r1, r2
 80024dc:	0018      	movs	r0, r3
 80024de:	f000 fcd1 	bl	8002e84 <HAL_ADC_ConfigChannel>
 80024e2:	1e03      	subs	r3, r0, #0
 80024e4:	d001      	beq.n	80024ea <MX_ADC_Init+0xa6>
  {
    Error_Handler();
 80024e6:	f000 f86f 	bl	80025c8 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel to be converted.
  */
  sConfig.Channel = ADC_CHANNEL_1;
 80024ea:	4b0a      	ldr	r3, [pc, #40]	; (8002514 <MX_ADC_Init+0xd0>)
 80024ec:	4a0a      	ldr	r2, [pc, #40]	; (8002518 <MX_ADC_Init+0xd4>)
 80024ee:	601a      	str	r2, [r3, #0]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80024f0:	4a08      	ldr	r2, [pc, #32]	; (8002514 <MX_ADC_Init+0xd0>)
 80024f2:	4b06      	ldr	r3, [pc, #24]	; (800250c <MX_ADC_Init+0xc8>)
 80024f4:	0011      	movs	r1, r2
 80024f6:	0018      	movs	r0, r3
 80024f8:	f000 fcc4 	bl	8002e84 <HAL_ADC_ConfigChannel>
 80024fc:	1e03      	subs	r3, r0, #0
 80024fe:	d001      	beq.n	8002504 <MX_ADC_Init+0xc0>
  {
    Error_Handler();
 8002500:	f000 f862 	bl	80025c8 <Error_Handler>
  }
  /* USER CODE BEGIN ADC_Init 2 */

  /* USER CODE END ADC_Init 2 */

}
 8002504:	46c0      	nop			; (mov r8, r8)
 8002506:	46bd      	mov	sp, r7
 8002508:	bd80      	pop	{r7, pc}
 800250a:	46c0      	nop			; (mov r8, r8)
 800250c:	200001f8 	.word	0x200001f8
 8002510:	40012400 	.word	0x40012400
 8002514:	2000025c 	.word	0x2000025c
 8002518:	04000002 	.word	0x04000002

0800251c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800251c:	b590      	push	{r4, r7, lr}
 800251e:	b089      	sub	sp, #36	; 0x24
 8002520:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002522:	240c      	movs	r4, #12
 8002524:	193b      	adds	r3, r7, r4
 8002526:	0018      	movs	r0, r3
 8002528:	2314      	movs	r3, #20
 800252a:	001a      	movs	r2, r3
 800252c:	2100      	movs	r1, #0
 800252e:	f001 fdf5 	bl	800411c <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002532:	4b23      	ldr	r3, [pc, #140]	; (80025c0 <MX_GPIO_Init+0xa4>)
 8002534:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002536:	4b22      	ldr	r3, [pc, #136]	; (80025c0 <MX_GPIO_Init+0xa4>)
 8002538:	2104      	movs	r1, #4
 800253a:	430a      	orrs	r2, r1
 800253c:	62da      	str	r2, [r3, #44]	; 0x2c
 800253e:	4b20      	ldr	r3, [pc, #128]	; (80025c0 <MX_GPIO_Init+0xa4>)
 8002540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002542:	2204      	movs	r2, #4
 8002544:	4013      	ands	r3, r2
 8002546:	60bb      	str	r3, [r7, #8]
 8002548:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800254a:	4b1d      	ldr	r3, [pc, #116]	; (80025c0 <MX_GPIO_Init+0xa4>)
 800254c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800254e:	4b1c      	ldr	r3, [pc, #112]	; (80025c0 <MX_GPIO_Init+0xa4>)
 8002550:	2101      	movs	r1, #1
 8002552:	430a      	orrs	r2, r1
 8002554:	62da      	str	r2, [r3, #44]	; 0x2c
 8002556:	4b1a      	ldr	r3, [pc, #104]	; (80025c0 <MX_GPIO_Init+0xa4>)
 8002558:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800255a:	2201      	movs	r2, #1
 800255c:	4013      	ands	r3, r2
 800255e:	607b      	str	r3, [r7, #4]
 8002560:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8002562:	23a0      	movs	r3, #160	; 0xa0
 8002564:	05db      	lsls	r3, r3, #23
 8002566:	2200      	movs	r2, #0
 8002568:	2120      	movs	r1, #32
 800256a:	0018      	movs	r0, r3
 800256c:	f000 ffdc 	bl	8003528 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8002570:	193b      	adds	r3, r7, r4
 8002572:	2280      	movs	r2, #128	; 0x80
 8002574:	0192      	lsls	r2, r2, #6
 8002576:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002578:	193b      	adds	r3, r7, r4
 800257a:	2200      	movs	r2, #0
 800257c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800257e:	193b      	adds	r3, r7, r4
 8002580:	2200      	movs	r2, #0
 8002582:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002584:	193b      	adds	r3, r7, r4
 8002586:	4a0f      	ldr	r2, [pc, #60]	; (80025c4 <MX_GPIO_Init+0xa8>)
 8002588:	0019      	movs	r1, r3
 800258a:	0010      	movs	r0, r2
 800258c:	f000 fe56 	bl	800323c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8002590:	0021      	movs	r1, r4
 8002592:	187b      	adds	r3, r7, r1
 8002594:	2220      	movs	r2, #32
 8002596:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002598:	187b      	adds	r3, r7, r1
 800259a:	2200      	movs	r2, #0
 800259c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800259e:	187b      	adds	r3, r7, r1
 80025a0:	2200      	movs	r2, #0
 80025a2:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80025a4:	187b      	adds	r3, r7, r1
 80025a6:	2200      	movs	r2, #0
 80025a8:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025aa:	187a      	adds	r2, r7, r1
 80025ac:	23a0      	movs	r3, #160	; 0xa0
 80025ae:	05db      	lsls	r3, r3, #23
 80025b0:	0011      	movs	r1, r2
 80025b2:	0018      	movs	r0, r3
 80025b4:	f000 fe42 	bl	800323c <HAL_GPIO_Init>

}
 80025b8:	46c0      	nop			; (mov r8, r8)
 80025ba:	46bd      	mov	sp, r7
 80025bc:	b009      	add	sp, #36	; 0x24
 80025be:	bd90      	pop	{r4, r7, pc}
 80025c0:	40021000 	.word	0x40021000
 80025c4:	50000800 	.word	0x50000800

080025c8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80025c8:	b580      	push	{r7, lr}
 80025ca:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80025cc:	b672      	cpsid	i
}
 80025ce:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80025d0:	e7fe      	b.n	80025d0 <Error_Handler+0x8>
	...

080025d4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80025d4:	b580      	push	{r7, lr}
 80025d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80025d8:	4b07      	ldr	r3, [pc, #28]	; (80025f8 <HAL_MspInit+0x24>)
 80025da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80025dc:	4b06      	ldr	r3, [pc, #24]	; (80025f8 <HAL_MspInit+0x24>)
 80025de:	2101      	movs	r1, #1
 80025e0:	430a      	orrs	r2, r1
 80025e2:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 80025e4:	4b04      	ldr	r3, [pc, #16]	; (80025f8 <HAL_MspInit+0x24>)
 80025e6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80025e8:	4b03      	ldr	r3, [pc, #12]	; (80025f8 <HAL_MspInit+0x24>)
 80025ea:	2180      	movs	r1, #128	; 0x80
 80025ec:	0549      	lsls	r1, r1, #21
 80025ee:	430a      	orrs	r2, r1
 80025f0:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80025f2:	46c0      	nop			; (mov r8, r8)
 80025f4:	46bd      	mov	sp, r7
 80025f6:	bd80      	pop	{r7, pc}
 80025f8:	40021000 	.word	0x40021000

080025fc <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80025fc:	b590      	push	{r4, r7, lr}
 80025fe:	b089      	sub	sp, #36	; 0x24
 8002600:	af00      	add	r7, sp, #0
 8002602:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002604:	240c      	movs	r4, #12
 8002606:	193b      	adds	r3, r7, r4
 8002608:	0018      	movs	r0, r3
 800260a:	2314      	movs	r3, #20
 800260c:	001a      	movs	r2, r3
 800260e:	2100      	movs	r1, #0
 8002610:	f001 fd84 	bl	800411c <memset>
  if(hadc->Instance==ADC1)
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	4a14      	ldr	r2, [pc, #80]	; (800266c <HAL_ADC_MspInit+0x70>)
 800261a:	4293      	cmp	r3, r2
 800261c:	d122      	bne.n	8002664 <HAL_ADC_MspInit+0x68>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800261e:	4b14      	ldr	r3, [pc, #80]	; (8002670 <HAL_ADC_MspInit+0x74>)
 8002620:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002622:	4b13      	ldr	r3, [pc, #76]	; (8002670 <HAL_ADC_MspInit+0x74>)
 8002624:	2180      	movs	r1, #128	; 0x80
 8002626:	0089      	lsls	r1, r1, #2
 8002628:	430a      	orrs	r2, r1
 800262a:	635a      	str	r2, [r3, #52]	; 0x34

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800262c:	4b10      	ldr	r3, [pc, #64]	; (8002670 <HAL_ADC_MspInit+0x74>)
 800262e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002630:	4b0f      	ldr	r3, [pc, #60]	; (8002670 <HAL_ADC_MspInit+0x74>)
 8002632:	2101      	movs	r1, #1
 8002634:	430a      	orrs	r2, r1
 8002636:	62da      	str	r2, [r3, #44]	; 0x2c
 8002638:	4b0d      	ldr	r3, [pc, #52]	; (8002670 <HAL_ADC_MspInit+0x74>)
 800263a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800263c:	2201      	movs	r2, #1
 800263e:	4013      	ands	r3, r2
 8002640:	60bb      	str	r3, [r7, #8]
 8002642:	68bb      	ldr	r3, [r7, #8]
    /**ADC GPIO Configuration
    PA0     ------> ADC_IN0
    PA1     ------> ADC_IN1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002644:	193b      	adds	r3, r7, r4
 8002646:	2203      	movs	r2, #3
 8002648:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800264a:	193b      	adds	r3, r7, r4
 800264c:	2203      	movs	r2, #3
 800264e:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002650:	193b      	adds	r3, r7, r4
 8002652:	2200      	movs	r2, #0
 8002654:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002656:	193a      	adds	r2, r7, r4
 8002658:	23a0      	movs	r3, #160	; 0xa0
 800265a:	05db      	lsls	r3, r3, #23
 800265c:	0011      	movs	r1, r2
 800265e:	0018      	movs	r0, r3
 8002660:	f000 fdec 	bl	800323c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8002664:	46c0      	nop			; (mov r8, r8)
 8002666:	46bd      	mov	sp, r7
 8002668:	b009      	add	sp, #36	; 0x24
 800266a:	bd90      	pop	{r4, r7, pc}
 800266c:	40012400 	.word	0x40012400
 8002670:	40021000 	.word	0x40021000

08002674 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002674:	b580      	push	{r7, lr}
 8002676:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002678:	e7fe      	b.n	8002678 <NMI_Handler+0x4>

0800267a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800267a:	b580      	push	{r7, lr}
 800267c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800267e:	e7fe      	b.n	800267e <HardFault_Handler+0x4>

08002680 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002680:	b580      	push	{r7, lr}
 8002682:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002684:	46c0      	nop			; (mov r8, r8)
 8002686:	46bd      	mov	sp, r7
 8002688:	bd80      	pop	{r7, pc}

0800268a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800268a:	b580      	push	{r7, lr}
 800268c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800268e:	46c0      	nop			; (mov r8, r8)
 8002690:	46bd      	mov	sp, r7
 8002692:	bd80      	pop	{r7, pc}

08002694 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002694:	b580      	push	{r7, lr}
 8002696:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002698:	f000 f944 	bl	8002924 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800269c:	46c0      	nop			; (mov r8, r8)
 800269e:	46bd      	mov	sp, r7
 80026a0:	bd80      	pop	{r7, pc}

080026a2 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80026a2:	b580      	push	{r7, lr}
 80026a4:	af00      	add	r7, sp, #0
	return 1;
 80026a6:	2301      	movs	r3, #1
}
 80026a8:	0018      	movs	r0, r3
 80026aa:	46bd      	mov	sp, r7
 80026ac:	bd80      	pop	{r7, pc}

080026ae <_kill>:

int _kill(int pid, int sig)
{
 80026ae:	b580      	push	{r7, lr}
 80026b0:	b082      	sub	sp, #8
 80026b2:	af00      	add	r7, sp, #0
 80026b4:	6078      	str	r0, [r7, #4]
 80026b6:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80026b8:	f001 fd06 	bl	80040c8 <__errno>
 80026bc:	0003      	movs	r3, r0
 80026be:	2216      	movs	r2, #22
 80026c0:	601a      	str	r2, [r3, #0]
	return -1;
 80026c2:	2301      	movs	r3, #1
 80026c4:	425b      	negs	r3, r3
}
 80026c6:	0018      	movs	r0, r3
 80026c8:	46bd      	mov	sp, r7
 80026ca:	b002      	add	sp, #8
 80026cc:	bd80      	pop	{r7, pc}

080026ce <_exit>:

void _exit (int status)
{
 80026ce:	b580      	push	{r7, lr}
 80026d0:	b082      	sub	sp, #8
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80026d6:	2301      	movs	r3, #1
 80026d8:	425a      	negs	r2, r3
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	0011      	movs	r1, r2
 80026de:	0018      	movs	r0, r3
 80026e0:	f7ff ffe5 	bl	80026ae <_kill>
	while (1) {}		/* Make sure we hang here */
 80026e4:	e7fe      	b.n	80026e4 <_exit+0x16>

080026e6 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80026e6:	b580      	push	{r7, lr}
 80026e8:	b086      	sub	sp, #24
 80026ea:	af00      	add	r7, sp, #0
 80026ec:	60f8      	str	r0, [r7, #12]
 80026ee:	60b9      	str	r1, [r7, #8]
 80026f0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026f2:	2300      	movs	r3, #0
 80026f4:	617b      	str	r3, [r7, #20]
 80026f6:	e00a      	b.n	800270e <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80026f8:	e000      	b.n	80026fc <_read+0x16>
 80026fa:	bf00      	nop
 80026fc:	0001      	movs	r1, r0
 80026fe:	68bb      	ldr	r3, [r7, #8]
 8002700:	1c5a      	adds	r2, r3, #1
 8002702:	60ba      	str	r2, [r7, #8]
 8002704:	b2ca      	uxtb	r2, r1
 8002706:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002708:	697b      	ldr	r3, [r7, #20]
 800270a:	3301      	adds	r3, #1
 800270c:	617b      	str	r3, [r7, #20]
 800270e:	697a      	ldr	r2, [r7, #20]
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	429a      	cmp	r2, r3
 8002714:	dbf0      	blt.n	80026f8 <_read+0x12>
	}

return len;
 8002716:	687b      	ldr	r3, [r7, #4]
}
 8002718:	0018      	movs	r0, r3
 800271a:	46bd      	mov	sp, r7
 800271c:	b006      	add	sp, #24
 800271e:	bd80      	pop	{r7, pc}

08002720 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002720:	b580      	push	{r7, lr}
 8002722:	b086      	sub	sp, #24
 8002724:	af00      	add	r7, sp, #0
 8002726:	60f8      	str	r0, [r7, #12]
 8002728:	60b9      	str	r1, [r7, #8]
 800272a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800272c:	2300      	movs	r3, #0
 800272e:	617b      	str	r3, [r7, #20]
 8002730:	e009      	b.n	8002746 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002732:	68bb      	ldr	r3, [r7, #8]
 8002734:	1c5a      	adds	r2, r3, #1
 8002736:	60ba      	str	r2, [r7, #8]
 8002738:	781b      	ldrb	r3, [r3, #0]
 800273a:	0018      	movs	r0, r3
 800273c:	e000      	b.n	8002740 <_write+0x20>
 800273e:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002740:	697b      	ldr	r3, [r7, #20]
 8002742:	3301      	adds	r3, #1
 8002744:	617b      	str	r3, [r7, #20]
 8002746:	697a      	ldr	r2, [r7, #20]
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	429a      	cmp	r2, r3
 800274c:	dbf1      	blt.n	8002732 <_write+0x12>
	}
	return len;
 800274e:	687b      	ldr	r3, [r7, #4]
}
 8002750:	0018      	movs	r0, r3
 8002752:	46bd      	mov	sp, r7
 8002754:	b006      	add	sp, #24
 8002756:	bd80      	pop	{r7, pc}

08002758 <_close>:

int _close(int file)
{
 8002758:	b580      	push	{r7, lr}
 800275a:	b082      	sub	sp, #8
 800275c:	af00      	add	r7, sp, #0
 800275e:	6078      	str	r0, [r7, #4]
	return -1;
 8002760:	2301      	movs	r3, #1
 8002762:	425b      	negs	r3, r3
}
 8002764:	0018      	movs	r0, r3
 8002766:	46bd      	mov	sp, r7
 8002768:	b002      	add	sp, #8
 800276a:	bd80      	pop	{r7, pc}

0800276c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800276c:	b580      	push	{r7, lr}
 800276e:	b082      	sub	sp, #8
 8002770:	af00      	add	r7, sp, #0
 8002772:	6078      	str	r0, [r7, #4]
 8002774:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002776:	683b      	ldr	r3, [r7, #0]
 8002778:	2280      	movs	r2, #128	; 0x80
 800277a:	0192      	lsls	r2, r2, #6
 800277c:	605a      	str	r2, [r3, #4]
	return 0;
 800277e:	2300      	movs	r3, #0
}
 8002780:	0018      	movs	r0, r3
 8002782:	46bd      	mov	sp, r7
 8002784:	b002      	add	sp, #8
 8002786:	bd80      	pop	{r7, pc}

08002788 <_isatty>:

int _isatty(int file)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	b082      	sub	sp, #8
 800278c:	af00      	add	r7, sp, #0
 800278e:	6078      	str	r0, [r7, #4]
	return 1;
 8002790:	2301      	movs	r3, #1
}
 8002792:	0018      	movs	r0, r3
 8002794:	46bd      	mov	sp, r7
 8002796:	b002      	add	sp, #8
 8002798:	bd80      	pop	{r7, pc}

0800279a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800279a:	b580      	push	{r7, lr}
 800279c:	b084      	sub	sp, #16
 800279e:	af00      	add	r7, sp, #0
 80027a0:	60f8      	str	r0, [r7, #12]
 80027a2:	60b9      	str	r1, [r7, #8]
 80027a4:	607a      	str	r2, [r7, #4]
	return 0;
 80027a6:	2300      	movs	r3, #0
}
 80027a8:	0018      	movs	r0, r3
 80027aa:	46bd      	mov	sp, r7
 80027ac:	b004      	add	sp, #16
 80027ae:	bd80      	pop	{r7, pc}

080027b0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80027b0:	b580      	push	{r7, lr}
 80027b2:	b086      	sub	sp, #24
 80027b4:	af00      	add	r7, sp, #0
 80027b6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80027b8:	4a14      	ldr	r2, [pc, #80]	; (800280c <_sbrk+0x5c>)
 80027ba:	4b15      	ldr	r3, [pc, #84]	; (8002810 <_sbrk+0x60>)
 80027bc:	1ad3      	subs	r3, r2, r3
 80027be:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80027c0:	697b      	ldr	r3, [r7, #20]
 80027c2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80027c4:	4b13      	ldr	r3, [pc, #76]	; (8002814 <_sbrk+0x64>)
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	2b00      	cmp	r3, #0
 80027ca:	d102      	bne.n	80027d2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80027cc:	4b11      	ldr	r3, [pc, #68]	; (8002814 <_sbrk+0x64>)
 80027ce:	4a12      	ldr	r2, [pc, #72]	; (8002818 <_sbrk+0x68>)
 80027d0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80027d2:	4b10      	ldr	r3, [pc, #64]	; (8002814 <_sbrk+0x64>)
 80027d4:	681a      	ldr	r2, [r3, #0]
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	18d3      	adds	r3, r2, r3
 80027da:	693a      	ldr	r2, [r7, #16]
 80027dc:	429a      	cmp	r2, r3
 80027de:	d207      	bcs.n	80027f0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80027e0:	f001 fc72 	bl	80040c8 <__errno>
 80027e4:	0003      	movs	r3, r0
 80027e6:	220c      	movs	r2, #12
 80027e8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80027ea:	2301      	movs	r3, #1
 80027ec:	425b      	negs	r3, r3
 80027ee:	e009      	b.n	8002804 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80027f0:	4b08      	ldr	r3, [pc, #32]	; (8002814 <_sbrk+0x64>)
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80027f6:	4b07      	ldr	r3, [pc, #28]	; (8002814 <_sbrk+0x64>)
 80027f8:	681a      	ldr	r2, [r3, #0]
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	18d2      	adds	r2, r2, r3
 80027fe:	4b05      	ldr	r3, [pc, #20]	; (8002814 <_sbrk+0x64>)
 8002800:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002802:	68fb      	ldr	r3, [r7, #12]
}
 8002804:	0018      	movs	r0, r3
 8002806:	46bd      	mov	sp, r7
 8002808:	b006      	add	sp, #24
 800280a:	bd80      	pop	{r7, pc}
 800280c:	20002000 	.word	0x20002000
 8002810:	00000400 	.word	0x00000400
 8002814:	20000264 	.word	0x20000264
 8002818:	20000280 	.word	0x20000280

0800281c <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800281c:	b580      	push	{r7, lr}
 800281e:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location add offset address ------------------*/
#if defined (USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002820:	46c0      	nop			; (mov r8, r8)
 8002822:	46bd      	mov	sp, r7
 8002824:	bd80      	pop	{r7, pc}
	...

08002828 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   r0, =_estack
 8002828:	480d      	ldr	r0, [pc, #52]	; (8002860 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800282a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800282c:	480d      	ldr	r0, [pc, #52]	; (8002864 <LoopForever+0x6>)
  ldr r1, =_edata
 800282e:	490e      	ldr	r1, [pc, #56]	; (8002868 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002830:	4a0e      	ldr	r2, [pc, #56]	; (800286c <LoopForever+0xe>)
  movs r3, #0
 8002832:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002834:	e002      	b.n	800283c <LoopCopyDataInit>

08002836 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002836:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002838:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800283a:	3304      	adds	r3, #4

0800283c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800283c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800283e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002840:	d3f9      	bcc.n	8002836 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002842:	4a0b      	ldr	r2, [pc, #44]	; (8002870 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002844:	4c0b      	ldr	r4, [pc, #44]	; (8002874 <LoopForever+0x16>)
  movs r3, #0
 8002846:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002848:	e001      	b.n	800284e <LoopFillZerobss>

0800284a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800284a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800284c:	3204      	adds	r2, #4

0800284e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800284e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002850:	d3fb      	bcc.n	800284a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002852:	f7ff ffe3 	bl	800281c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002856:	f001 fc3d 	bl	80040d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800285a:	f7ff fd4f 	bl	80022fc <main>

0800285e <LoopForever>:

LoopForever:
    b LoopForever
 800285e:	e7fe      	b.n	800285e <LoopForever>
  ldr   r0, =_estack
 8002860:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8002864:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002868:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 800286c:	080071b4 	.word	0x080071b4
  ldr r2, =_sbss
 8002870:	200001dc 	.word	0x200001dc
  ldr r4, =_ebss
 8002874:	2000027c 	.word	0x2000027c

08002878 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002878:	e7fe      	b.n	8002878 <ADC1_COMP_IRQHandler>
	...

0800287c <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800287c:	b580      	push	{r7, lr}
 800287e:	b082      	sub	sp, #8
 8002880:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8002882:	1dfb      	adds	r3, r7, #7
 8002884:	2200      	movs	r2, #0
 8002886:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8002888:	4b0b      	ldr	r3, [pc, #44]	; (80028b8 <HAL_Init+0x3c>)
 800288a:	681a      	ldr	r2, [r3, #0]
 800288c:	4b0a      	ldr	r3, [pc, #40]	; (80028b8 <HAL_Init+0x3c>)
 800288e:	2140      	movs	r1, #64	; 0x40
 8002890:	430a      	orrs	r2, r1
 8002892:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002894:	2000      	movs	r0, #0
 8002896:	f000 f811 	bl	80028bc <HAL_InitTick>
 800289a:	1e03      	subs	r3, r0, #0
 800289c:	d003      	beq.n	80028a6 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 800289e:	1dfb      	adds	r3, r7, #7
 80028a0:	2201      	movs	r2, #1
 80028a2:	701a      	strb	r2, [r3, #0]
 80028a4:	e001      	b.n	80028aa <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 80028a6:	f7ff fe95 	bl	80025d4 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 80028aa:	1dfb      	adds	r3, r7, #7
 80028ac:	781b      	ldrb	r3, [r3, #0]
}
 80028ae:	0018      	movs	r0, r3
 80028b0:	46bd      	mov	sp, r7
 80028b2:	b002      	add	sp, #8
 80028b4:	bd80      	pop	{r7, pc}
 80028b6:	46c0      	nop			; (mov r8, r8)
 80028b8:	40022000 	.word	0x40022000

080028bc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80028bc:	b590      	push	{r4, r7, lr}
 80028be:	b083      	sub	sp, #12
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80028c4:	4b14      	ldr	r3, [pc, #80]	; (8002918 <HAL_InitTick+0x5c>)
 80028c6:	681c      	ldr	r4, [r3, #0]
 80028c8:	4b14      	ldr	r3, [pc, #80]	; (800291c <HAL_InitTick+0x60>)
 80028ca:	781b      	ldrb	r3, [r3, #0]
 80028cc:	0019      	movs	r1, r3
 80028ce:	23fa      	movs	r3, #250	; 0xfa
 80028d0:	0098      	lsls	r0, r3, #2
 80028d2:	f7fd fc35 	bl	8000140 <__udivsi3>
 80028d6:	0003      	movs	r3, r0
 80028d8:	0019      	movs	r1, r3
 80028da:	0020      	movs	r0, r4
 80028dc:	f7fd fc30 	bl	8000140 <__udivsi3>
 80028e0:	0003      	movs	r3, r0
 80028e2:	0018      	movs	r0, r3
 80028e4:	f000 fc9d 	bl	8003222 <HAL_SYSTICK_Config>
 80028e8:	1e03      	subs	r3, r0, #0
 80028ea:	d001      	beq.n	80028f0 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 80028ec:	2301      	movs	r3, #1
 80028ee:	e00f      	b.n	8002910 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	2b03      	cmp	r3, #3
 80028f4:	d80b      	bhi.n	800290e <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80028f6:	6879      	ldr	r1, [r7, #4]
 80028f8:	2301      	movs	r3, #1
 80028fa:	425b      	negs	r3, r3
 80028fc:	2200      	movs	r2, #0
 80028fe:	0018      	movs	r0, r3
 8002900:	f000 fc7a 	bl	80031f8 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002904:	4b06      	ldr	r3, [pc, #24]	; (8002920 <HAL_InitTick+0x64>)
 8002906:	687a      	ldr	r2, [r7, #4]
 8002908:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800290a:	2300      	movs	r3, #0
 800290c:	e000      	b.n	8002910 <HAL_InitTick+0x54>
    return HAL_ERROR;
 800290e:	2301      	movs	r3, #1
}
 8002910:	0018      	movs	r0, r3
 8002912:	46bd      	mov	sp, r7
 8002914:	b003      	add	sp, #12
 8002916:	bd90      	pop	{r4, r7, pc}
 8002918:	20000000 	.word	0x20000000
 800291c:	20000008 	.word	0x20000008
 8002920:	20000004 	.word	0x20000004

08002924 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002924:	b580      	push	{r7, lr}
 8002926:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002928:	4b05      	ldr	r3, [pc, #20]	; (8002940 <HAL_IncTick+0x1c>)
 800292a:	781b      	ldrb	r3, [r3, #0]
 800292c:	001a      	movs	r2, r3
 800292e:	4b05      	ldr	r3, [pc, #20]	; (8002944 <HAL_IncTick+0x20>)
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	18d2      	adds	r2, r2, r3
 8002934:	4b03      	ldr	r3, [pc, #12]	; (8002944 <HAL_IncTick+0x20>)
 8002936:	601a      	str	r2, [r3, #0]
}
 8002938:	46c0      	nop			; (mov r8, r8)
 800293a:	46bd      	mov	sp, r7
 800293c:	bd80      	pop	{r7, pc}
 800293e:	46c0      	nop			; (mov r8, r8)
 8002940:	20000008 	.word	0x20000008
 8002944:	20000268 	.word	0x20000268

08002948 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002948:	b580      	push	{r7, lr}
 800294a:	af00      	add	r7, sp, #0
  return uwTick;
 800294c:	4b02      	ldr	r3, [pc, #8]	; (8002958 <HAL_GetTick+0x10>)
 800294e:	681b      	ldr	r3, [r3, #0]
}
 8002950:	0018      	movs	r0, r3
 8002952:	46bd      	mov	sp, r7
 8002954:	bd80      	pop	{r7, pc}
 8002956:	46c0      	nop			; (mov r8, r8)
 8002958:	20000268 	.word	0x20000268

0800295c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800295c:	b580      	push	{r7, lr}
 800295e:	b084      	sub	sp, #16
 8002960:	af00      	add	r7, sp, #0
 8002962:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002964:	f7ff fff0 	bl	8002948 <HAL_GetTick>
 8002968:	0003      	movs	r3, r0
 800296a:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002970:	68fb      	ldr	r3, [r7, #12]
 8002972:	3301      	adds	r3, #1
 8002974:	d005      	beq.n	8002982 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002976:	4b0a      	ldr	r3, [pc, #40]	; (80029a0 <HAL_Delay+0x44>)
 8002978:	781b      	ldrb	r3, [r3, #0]
 800297a:	001a      	movs	r2, r3
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	189b      	adds	r3, r3, r2
 8002980:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002982:	46c0      	nop			; (mov r8, r8)
 8002984:	f7ff ffe0 	bl	8002948 <HAL_GetTick>
 8002988:	0002      	movs	r2, r0
 800298a:	68bb      	ldr	r3, [r7, #8]
 800298c:	1ad3      	subs	r3, r2, r3
 800298e:	68fa      	ldr	r2, [r7, #12]
 8002990:	429a      	cmp	r2, r3
 8002992:	d8f7      	bhi.n	8002984 <HAL_Delay+0x28>
  {
  }
}
 8002994:	46c0      	nop			; (mov r8, r8)
 8002996:	46c0      	nop			; (mov r8, r8)
 8002998:	46bd      	mov	sp, r7
 800299a:	b004      	add	sp, #16
 800299c:	bd80      	pop	{r7, pc}
 800299e:	46c0      	nop			; (mov r8, r8)
 80029a0:	20000008 	.word	0x20000008

080029a4 <HAL_ADC_Init>:
  *         function "HAL_ADCEx_EnableVREFINTTempSensor()" must be called similarilly.  
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 80029a4:	b580      	push	{r7, lr}
 80029a6:	b082      	sub	sp, #8
 80029a8:	af00      	add	r7, sp, #0
 80029aa:	6078      	str	r0, [r7, #4]
 
  /* Check ADC handle */
  if(hadc == NULL)
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d101      	bne.n	80029b6 <HAL_ADC_Init+0x12>
  {
    return HAL_ERROR;
 80029b2:	2301      	movs	r3, #1
 80029b4:	e159      	b.n	8002c6a <HAL_ADC_Init+0x2c6>
  /* Refer to header of this file for more details on clock enabling procedure*/
  
  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  /* - ADC voltage regulator enable                                           */
  if(hadc->State == HAL_ADC_STATE_RESET)
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	d10a      	bne.n	80029d4 <HAL_ADC_Init+0x30>
  {
    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	2200      	movs	r2, #0
 80029c2:	659a      	str	r2, [r3, #88]	; 0x58
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	2250      	movs	r2, #80	; 0x50
 80029c8:	2100      	movs	r1, #0
 80029ca:	5499      	strb	r1, [r3, r2]
    
    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	0018      	movs	r0, r3
 80029d0:	f7ff fe14 	bl	80025fc <HAL_ADC_MspInit>
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  /* and if there is no conversion on going on regular group (ADC can be      */
  /* enabled anyway, in case of call of this function to update a parameter   */
  /* on the fly).                                                             */
  if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) ||
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80029d8:	2210      	movs	r2, #16
 80029da:	4013      	ands	r3, r2
 80029dc:	2b10      	cmp	r3, #16
 80029de:	d005      	beq.n	80029ec <HAL_ADC_Init+0x48>
     (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) != RESET)  )
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	689b      	ldr	r3, [r3, #8]
 80029e6:	2204      	movs	r2, #4
 80029e8:	4013      	ands	r3, r2
  if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) ||
 80029ea:	d00b      	beq.n	8002a04 <HAL_ADC_Init+0x60>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80029f0:	2210      	movs	r2, #16
 80029f2:	431a      	orrs	r2, r3
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	655a      	str	r2, [r3, #84]	; 0x54
        
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	2250      	movs	r2, #80	; 0x50
 80029fc:	2100      	movs	r1, #0
 80029fe:	5499      	strb	r1, [r3, r2]
    return HAL_ERROR;
 8002a00:	2301      	movs	r3, #1
 8002a02:	e132      	b.n	8002c6a <HAL_ADC_Init+0x2c6>
  }

  /* Set ADC state */
  ADC_STATE_CLR_SET(hadc->State,
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002a08:	4a9a      	ldr	r2, [pc, #616]	; (8002c74 <HAL_ADC_Init+0x2d0>)
 8002a0a:	4013      	ands	r3, r2
 8002a0c:	2202      	movs	r2, #2
 8002a0e:	431a      	orrs	r2, r3
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	655a      	str	r2, [r3, #84]	; 0x54
  /* Parameters update conditioned to ADC state:                            */
  /* Parameters that can be updated only when ADC is disabled:              */
  /*  - ADC clock mode                                                      */
  /*  - ADC clock prescaler                                                 */
  /*  - ADC Resolution                                                      */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	689b      	ldr	r3, [r3, #8]
 8002a1a:	2203      	movs	r2, #3
 8002a1c:	4013      	ands	r3, r2
 8002a1e:	2b01      	cmp	r3, #1
 8002a20:	d108      	bne.n	8002a34 <HAL_ADC_Init+0x90>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	681b      	ldr	r3, [r3, #0]
 8002a28:	2201      	movs	r2, #1
 8002a2a:	4013      	ands	r3, r2
 8002a2c:	2b01      	cmp	r3, #1
 8002a2e:	d101      	bne.n	8002a34 <HAL_ADC_Init+0x90>
 8002a30:	2301      	movs	r3, #1
 8002a32:	e000      	b.n	8002a36 <HAL_ADC_Init+0x92>
 8002a34:	2300      	movs	r3, #0
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d149      	bne.n	8002ace <HAL_ADC_Init+0x12a>
    /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
    /*     (set into HAL_ADC_ConfigChannel() )                              */
   
    /* Configuration of ADC clock: clock source PCLK or asynchronous with 
    selectable prescaler */
    __HAL_ADC_CLOCK_PRESCALER(hadc);
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	685a      	ldr	r2, [r3, #4]
 8002a3e:	23c0      	movs	r3, #192	; 0xc0
 8002a40:	061b      	lsls	r3, r3, #24
 8002a42:	429a      	cmp	r2, r3
 8002a44:	d00b      	beq.n	8002a5e <HAL_ADC_Init+0xba>
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	685a      	ldr	r2, [r3, #4]
 8002a4a:	2380      	movs	r3, #128	; 0x80
 8002a4c:	05db      	lsls	r3, r3, #23
 8002a4e:	429a      	cmp	r2, r3
 8002a50:	d005      	beq.n	8002a5e <HAL_ADC_Init+0xba>
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	685a      	ldr	r2, [r3, #4]
 8002a56:	2380      	movs	r3, #128	; 0x80
 8002a58:	061b      	lsls	r3, r3, #24
 8002a5a:	429a      	cmp	r2, r3
 8002a5c:	d111      	bne.n	8002a82 <HAL_ADC_Init+0xde>
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	691a      	ldr	r2, [r3, #16]
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	0092      	lsls	r2, r2, #2
 8002a6a:	0892      	lsrs	r2, r2, #2
 8002a6c:	611a      	str	r2, [r3, #16]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	6919      	ldr	r1, [r3, #16]
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	685a      	ldr	r2, [r3, #4]
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	430a      	orrs	r2, r1
 8002a7e:	611a      	str	r2, [r3, #16]
 8002a80:	e014      	b.n	8002aac <HAL_ADC_Init+0x108>
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	691a      	ldr	r2, [r3, #16]
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	681b      	ldr	r3, [r3, #0]
 8002a8c:	0092      	lsls	r2, r2, #2
 8002a8e:	0892      	lsrs	r2, r2, #2
 8002a90:	611a      	str	r2, [r3, #16]
 8002a92:	4b79      	ldr	r3, [pc, #484]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002a94:	681a      	ldr	r2, [r3, #0]
 8002a96:	4b78      	ldr	r3, [pc, #480]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002a98:	4978      	ldr	r1, [pc, #480]	; (8002c7c <HAL_ADC_Init+0x2d8>)
 8002a9a:	400a      	ands	r2, r1
 8002a9c:	601a      	str	r2, [r3, #0]
 8002a9e:	4b76      	ldr	r3, [pc, #472]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002aa0:	6819      	ldr	r1, [r3, #0]
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	685a      	ldr	r2, [r3, #4]
 8002aa6:	4b74      	ldr	r3, [pc, #464]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002aa8:	430a      	orrs	r2, r1
 8002aaa:	601a      	str	r2, [r3, #0]
    
    /* Configuration of ADC:                                                */
    /*  - Resolution                                                        */
    hadc->Instance->CFGR1 &= ~( ADC_CFGR1_RES);
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	68da      	ldr	r2, [r3, #12]
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	681b      	ldr	r3, [r3, #0]
 8002ab6:	2118      	movs	r1, #24
 8002ab8:	438a      	bics	r2, r1
 8002aba:	60da      	str	r2, [r3, #12]
    hadc->Instance->CFGR1 |= hadc->Init.Resolution;    
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	68d9      	ldr	r1, [r3, #12]
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	689a      	ldr	r2, [r3, #8]
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	430a      	orrs	r2, r1
 8002acc:	60da      	str	r2, [r3, #12]
  }
  
  /* Set the Low Frequency mode */
  ADC->CCR &= (uint32_t)~ADC_CCR_LFMEN;
 8002ace:	4b6a      	ldr	r3, [pc, #424]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002ad0:	681a      	ldr	r2, [r3, #0]
 8002ad2:	4b69      	ldr	r3, [pc, #420]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002ad4:	496a      	ldr	r1, [pc, #424]	; (8002c80 <HAL_ADC_Init+0x2dc>)
 8002ad6:	400a      	ands	r2, r1
 8002ad8:	601a      	str	r2, [r3, #0]
  ADC->CCR |=__HAL_ADC_CCR_LOWFREQUENCY(hadc->Init.LowPowerFrequencyMode);  
 8002ada:	4b67      	ldr	r3, [pc, #412]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002adc:	6819      	ldr	r1, [r3, #0]
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002ae2:	065a      	lsls	r2, r3, #25
 8002ae4:	4b64      	ldr	r3, [pc, #400]	; (8002c78 <HAL_ADC_Init+0x2d4>)
 8002ae6:	430a      	orrs	r2, r1
 8002ae8:	601a      	str	r2, [r3, #0]
   
  /* Enable voltage regulator (if disabled at this step) */
  if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	689a      	ldr	r2, [r3, #8]
 8002af0:	2380      	movs	r3, #128	; 0x80
 8002af2:	055b      	lsls	r3, r3, #21
 8002af4:	4013      	ands	r3, r2
 8002af6:	d108      	bne.n	8002b0a <HAL_ADC_Init+0x166>
  {
    /* Set ADVREGEN bit */
    hadc->Instance->CR |= ADC_CR_ADVREGEN;
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	689a      	ldr	r2, [r3, #8]
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	2180      	movs	r1, #128	; 0x80
 8002b04:	0549      	lsls	r1, r1, #21
 8002b06:	430a      	orrs	r2, r1
 8002b08:	609a      	str	r2, [r3, #8]
  /*  - Continuous conversion mode                                            */
  /*  - DMA continuous request                                                */
  /*  - Overrun                                                               */
  /*  - AutoDelay feature                                                     */
  /*  - Discontinuous mode                                                    */
  hadc->Instance->CFGR1 &= ~(ADC_CFGR1_ALIGN   |
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	68da      	ldr	r2, [r3, #12]
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	495b      	ldr	r1, [pc, #364]	; (8002c84 <HAL_ADC_Init+0x2e0>)
 8002b16:	400a      	ands	r2, r1
 8002b18:	60da      	str	r2, [r3, #12]
                             ADC_CFGR1_OVRMOD  |
                             ADC_CFGR1_AUTDLY  |
                             ADC_CFGR1_AUTOFF  |
                             ADC_CFGR1_DISCEN   );
  
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	68d9      	ldr	r1, [r3, #12]
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	68da      	ldr	r2, [r3, #12]
                            ADC_SCANDIR(hadc->Init.ScanConvMode)             |
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	691b      	ldr	r3, [r3, #16]
 8002b28:	2b02      	cmp	r3, #2
 8002b2a:	d101      	bne.n	8002b30 <HAL_ADC_Init+0x18c>
 8002b2c:	2304      	movs	r3, #4
 8002b2e:	e000      	b.n	8002b32 <HAL_ADC_Init+0x18e>
 8002b30:	2300      	movs	r3, #0
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 8002b32:	431a      	orrs	r2, r3
                            ADC_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2020      	movs	r0, #32
 8002b38:	5c1b      	ldrb	r3, [r3, r0]
 8002b3a:	035b      	lsls	r3, r3, #13
                            ADC_SCANDIR(hadc->Init.ScanConvMode)             |
 8002b3c:	431a      	orrs	r2, r3
                            ADC_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	202c      	movs	r0, #44	; 0x2c
 8002b42:	5c1b      	ldrb	r3, [r3, r0]
 8002b44:	005b      	lsls	r3, r3, #1
                            ADC_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002b46:	431a      	orrs	r2, r3
                            hadc->Init.Overrun                               |
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
                            ADC_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 8002b4c:	431a      	orrs	r2, r3
                            __HAL_ADC_CFGR1_AutoDelay(hadc->Init.LowPowerAutoWait) |
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	699b      	ldr	r3, [r3, #24]
 8002b52:	039b      	lsls	r3, r3, #14
                            hadc->Init.Overrun                               |
 8002b54:	431a      	orrs	r2, r3
                            __HAL_ADC_CFGR1_AUTOFF(hadc->Init.LowPowerAutoPowerOff));
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	69db      	ldr	r3, [r3, #28]
 8002b5a:	03db      	lsls	r3, r3, #15
                            __HAL_ADC_CFGR1_AutoDelay(hadc->Init.LowPowerAutoWait) |
 8002b5c:	431a      	orrs	r2, r3
  hadc->Instance->CFGR1 |= (hadc->Init.DataAlign                             |
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	430a      	orrs	r2, r1
 8002b64:	60da      	str	r2, [r3, #12]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002b6a:	23c2      	movs	r3, #194	; 0xc2
 8002b6c:	33ff      	adds	r3, #255	; 0xff
 8002b6e:	429a      	cmp	r2, r3
 8002b70:	d00b      	beq.n	8002b8a <HAL_ADC_Init+0x1e6>
  {
    hadc->Instance->CFGR1 |= hadc->Init.ExternalTrigConv |
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	68d9      	ldr	r1, [r3, #12]
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
                             hadc->Init.ExternalTrigConvEdge;
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    hadc->Instance->CFGR1 |= hadc->Init.ExternalTrigConv |
 8002b80:	431a      	orrs	r2, r3
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	430a      	orrs	r2, r1
 8002b88:	60da      	str	r2, [r3, #12]
  }
  
  /* Enable discontinuous mode only if continuous mode is disabled */
  if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	2221      	movs	r2, #33	; 0x21
 8002b8e:	5c9b      	ldrb	r3, [r3, r2]
 8002b90:	2b01      	cmp	r3, #1
 8002b92:	d11a      	bne.n	8002bca <HAL_ADC_Init+0x226>
  {
    if (hadc->Init.ContinuousConvMode == DISABLE)
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	2220      	movs	r2, #32
 8002b98:	5c9b      	ldrb	r3, [r3, r2]
 8002b9a:	2b00      	cmp	r3, #0
 8002b9c:	d109      	bne.n	8002bb2 <HAL_ADC_Init+0x20e>
    {
      /* Enable the selected ADC group regular discontinuous mode */
      hadc->Instance->CFGR1 |= (ADC_CFGR1_DISCEN);
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	68da      	ldr	r2, [r3, #12]
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	2180      	movs	r1, #128	; 0x80
 8002baa:	0249      	lsls	r1, r1, #9
 8002bac:	430a      	orrs	r2, r1
 8002bae:	60da      	str	r2, [r3, #12]
 8002bb0:	e00b      	b.n	8002bca <HAL_ADC_Init+0x226>
      /* ADC regular group discontinuous was intended to be enabled,        */
      /* but ADC regular group modes continuous and sequencer discontinuous */
      /* cannot be enabled simultaneously.                                  */
      
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002bb6:	2220      	movs	r2, #32
 8002bb8:	431a      	orrs	r2, r3
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002bc2:	2201      	movs	r2, #1
 8002bc4:	431a      	orrs	r2, r3
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	659a      	str	r2, [r3, #88]	; 0x58
    }
  }
  
  if (hadc->Init.OversamplingMode == ENABLE)
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002bce:	2b01      	cmp	r3, #1
 8002bd0:	d11f      	bne.n	8002c12 <HAL_ADC_Init+0x26e>
    /* Configuration of Oversampler:                                          */
    /*  - Oversampling Ratio                                                  */
    /*  - Right bit shift                                                     */
    /*  - Triggered mode                                                      */
    
    hadc->Instance->CFGR2 &= ~( ADC_CFGR2_OVSR |
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	691a      	ldr	r2, [r3, #16]
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	681b      	ldr	r3, [r3, #0]
 8002bdc:	492a      	ldr	r1, [pc, #168]	; (8002c88 <HAL_ADC_Init+0x2e4>)
 8002bde:	400a      	ands	r2, r1
 8002be0:	611a      	str	r2, [r3, #16]
                                ADC_CFGR2_OVSS |
                                ADC_CFGR2_TOVS );
    
    hadc->Instance->CFGR2 |= ( hadc->Init.Oversample.Ratio         |
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	6919      	ldr	r1, [r3, #16]
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	6c1a      	ldr	r2, [r3, #64]	; 0x40
                               hadc->Init.Oversample.RightBitShift             |
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    hadc->Instance->CFGR2 |= ( hadc->Init.Oversample.Ratio         |
 8002bf0:	431a      	orrs	r2, r3
                               hadc->Init.Oversample.TriggeredMode );
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
                               hadc->Init.Oversample.RightBitShift             |
 8002bf6:	431a      	orrs	r2, r3
    hadc->Instance->CFGR2 |= ( hadc->Init.Oversample.Ratio         |
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	430a      	orrs	r2, r1
 8002bfe:	611a      	str	r2, [r3, #16]
    
    /* Enable OverSampling mode */
     hadc->Instance->CFGR2 |= ADC_CFGR2_OVSE;
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	691a      	ldr	r2, [r3, #16]
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	2101      	movs	r1, #1
 8002c0c:	430a      	orrs	r2, r1
 8002c0e:	611a      	str	r2, [r3, #16]
 8002c10:	e00e      	b.n	8002c30 <HAL_ADC_Init+0x28c>
  }
  else
  {
    if(HAL_IS_BIT_SET(hadc->Instance->CFGR2, ADC_CFGR2_OVSE))
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	691b      	ldr	r3, [r3, #16]
 8002c18:	2201      	movs	r2, #1
 8002c1a:	4013      	ands	r3, r2
 8002c1c:	2b01      	cmp	r3, #1
 8002c1e:	d107      	bne.n	8002c30 <HAL_ADC_Init+0x28c>
    {
      /* Disable OverSampling mode if needed */
      hadc->Instance->CFGR2 &= ~ADC_CFGR2_OVSE;
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	691a      	ldr	r2, [r3, #16]
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	2101      	movs	r1, #1
 8002c2c:	438a      	bics	r2, r1
 8002c2e:	611a      	str	r2, [r3, #16]
    }
  }    
  
  /* Clear the old sampling time */
  hadc->Instance->SMPR &= (uint32_t)(~ADC_SMPR_SMPR);
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	681b      	ldr	r3, [r3, #0]
 8002c34:	695a      	ldr	r2, [r3, #20]
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	2107      	movs	r1, #7
 8002c3c:	438a      	bics	r2, r1
 8002c3e:	615a      	str	r2, [r3, #20]
  
  /* Set the new sample time */
  hadc->Instance->SMPR |= hadc->Init.SamplingTime;
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	6959      	ldr	r1, [r3, #20]
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	430a      	orrs	r2, r1
 8002c50:	615a      	str	r2, [r3, #20]
  
  /* Clear ADC error code */
  ADC_CLEAR_ERRORCODE(hadc);
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	2200      	movs	r2, #0
 8002c56:	659a      	str	r2, [r3, #88]	; 0x58

  /* Set the ADC state */
  ADC_STATE_CLR_SET(hadc->State,
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002c5c:	2203      	movs	r2, #3
 8002c5e:	4393      	bics	r3, r2
 8002c60:	2201      	movs	r2, #1
 8002c62:	431a      	orrs	r2, r3
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	655a      	str	r2, [r3, #84]	; 0x54
                    HAL_ADC_STATE_BUSY_INTERNAL,
                    HAL_ADC_STATE_READY);


  /* Return function status */
  return HAL_OK;
 8002c68:	2300      	movs	r3, #0
}
 8002c6a:	0018      	movs	r0, r3
 8002c6c:	46bd      	mov	sp, r7
 8002c6e:	b002      	add	sp, #8
 8002c70:	bd80      	pop	{r7, pc}
 8002c72:	46c0      	nop			; (mov r8, r8)
 8002c74:	fffffefd 	.word	0xfffffefd
 8002c78:	40012708 	.word	0x40012708
 8002c7c:	ffc3ffff 	.word	0xffc3ffff
 8002c80:	fdffffff 	.word	0xfdffffff
 8002c84:	fffe0219 	.word	0xfffe0219
 8002c88:	fffffc03 	.word	0xfffffc03

08002c8c <HAL_ADC_Start>:
  * @note   Interruptions enabled in this function: None.
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8002c8c:	b590      	push	{r4, r7, lr}
 8002c8e:	b085      	sub	sp, #20
 8002c90:	af00      	add	r7, sp, #0
 8002c92:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002c94:	230f      	movs	r3, #15
 8002c96:	18fb      	adds	r3, r7, r3
 8002c98:	2200      	movs	r2, #0
 8002c9a:	701a      	strb	r2, [r3, #0]
  
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Perform ADC enable and conversion start if no conversion is on going */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	689b      	ldr	r3, [r3, #8]
 8002ca2:	2204      	movs	r2, #4
 8002ca4:	4013      	ands	r3, r2
 8002ca6:	d138      	bne.n	8002d1a <HAL_ADC_Start+0x8e>
  {
    /* Process locked */
    __HAL_LOCK(hadc);
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	2250      	movs	r2, #80	; 0x50
 8002cac:	5c9b      	ldrb	r3, [r3, r2]
 8002cae:	2b01      	cmp	r3, #1
 8002cb0:	d101      	bne.n	8002cb6 <HAL_ADC_Start+0x2a>
 8002cb2:	2302      	movs	r3, #2
 8002cb4:	e038      	b.n	8002d28 <HAL_ADC_Start+0x9c>
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	2250      	movs	r2, #80	; 0x50
 8002cba:	2101      	movs	r1, #1
 8002cbc:	5499      	strb	r1, [r3, r2]
    
    /* Enable the ADC peripheral */
    /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
    /* performed automatically by hardware.                                   */
    if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	69db      	ldr	r3, [r3, #28]
 8002cc2:	2b01      	cmp	r3, #1
 8002cc4:	d007      	beq.n	8002cd6 <HAL_ADC_Start+0x4a>
    {
      tmp_hal_status = ADC_Enable(hadc);
 8002cc6:	230f      	movs	r3, #15
 8002cc8:	18fc      	adds	r4, r7, r3
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	0018      	movs	r0, r3
 8002cce:	f000 f979 	bl	8002fc4 <ADC_Enable>
 8002cd2:	0003      	movs	r3, r0
 8002cd4:	7023      	strb	r3, [r4, #0]
    }
    
    /* Start conversion if ADC is effectively enabled */
    if (tmp_hal_status == HAL_OK)
 8002cd6:	230f      	movs	r3, #15
 8002cd8:	18fb      	adds	r3, r7, r3
 8002cda:	781b      	ldrb	r3, [r3, #0]
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	d120      	bne.n	8002d22 <HAL_ADC_Start+0x96>
    {
      /* Set ADC state                                                        */
      /* - Clear state bitfield related to regular group conversion results   */
      /* - Set state bitfield related to regular operation                    */
      ADC_STATE_CLR_SET(hadc->State,
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002ce4:	4a12      	ldr	r2, [pc, #72]	; (8002d30 <HAL_ADC_Start+0xa4>)
 8002ce6:	4013      	ands	r3, r2
 8002ce8:	2280      	movs	r2, #128	; 0x80
 8002cea:	0052      	lsls	r2, r2, #1
 8002cec:	431a      	orrs	r2, r3
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	655a      	str	r2, [r3, #84]	; 0x54
                        HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC_STATE_REG_EOSMP,
                        HAL_ADC_STATE_REG_BUSY);
      
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	659a      	str	r2, [r3, #88]	; 0x58
      
      /* Process unlocked */
      /* Unlock before starting ADC conversions: in case of potential         */
      /* interruption, to let the process to ADC IRQ Handler.                 */
      __HAL_UNLOCK(hadc);
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	2250      	movs	r2, #80	; 0x50
 8002cfc:	2100      	movs	r1, #0
 8002cfe:	5499      	strb	r1, [r3, r2]
      
      /* Clear regular group conversion flag and overrun flag */
      /* (To ensure of no unknown state from potential previous ADC           */
      /* operations)                                                          */
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	221c      	movs	r2, #28
 8002d06:	601a      	str	r2, [r3, #0]
      
      /* Enable conversion of regular group.                                  */
      /* If software start has been selected, conversion starts immediately.  */
      /* If external trigger has been selected, conversion will start at next */
      /* trigger event.                                                       */
      hadc->Instance->CR |= ADC_CR_ADSTART;
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	689a      	ldr	r2, [r3, #8]
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	2104      	movs	r1, #4
 8002d14:	430a      	orrs	r2, r1
 8002d16:	609a      	str	r2, [r3, #8]
 8002d18:	e003      	b.n	8002d22 <HAL_ADC_Start+0x96>
    }
  }
  else
  {
    tmp_hal_status = HAL_BUSY;
 8002d1a:	230f      	movs	r3, #15
 8002d1c:	18fb      	adds	r3, r7, r3
 8002d1e:	2202      	movs	r2, #2
 8002d20:	701a      	strb	r2, [r3, #0]
  }
  
  /* Return function status */
  return tmp_hal_status;
 8002d22:	230f      	movs	r3, #15
 8002d24:	18fb      	adds	r3, r7, r3
 8002d26:	781b      	ldrb	r3, [r3, #0]
}
 8002d28:	0018      	movs	r0, r3
 8002d2a:	46bd      	mov	sp, r7
 8002d2c:	b005      	add	sp, #20
 8002d2e:	bd90      	pop	{r4, r7, pc}
 8002d30:	fffff0fe 	.word	0xfffff0fe

08002d34 <HAL_ADC_PollForConversion>:
  * @param  hadc ADC handle
  * @param  Timeout Timeout value in millisecond.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 8002d34:	b580      	push	{r7, lr}
 8002d36:	b084      	sub	sp, #16
 8002d38:	af00      	add	r7, sp, #0
 8002d3a:	6078      	str	r0, [r7, #4]
 8002d3c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 8002d3e:	2300      	movs	r3, #0
 8002d40:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_Flag_EOC   = 0x00;
 8002d42:	2300      	movs	r3, #0
 8002d44:	60fb      	str	r3, [r7, #12]
  
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* If end of conversion selected to end of sequence conversions */
  if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	695b      	ldr	r3, [r3, #20]
 8002d4a:	2b08      	cmp	r3, #8
 8002d4c:	d102      	bne.n	8002d54 <HAL_ADC_PollForConversion+0x20>
  {
    tmp_Flag_EOC = ADC_FLAG_EOS;
 8002d4e:	2308      	movs	r3, #8
 8002d50:	60fb      	str	r3, [r7, #12]
 8002d52:	e014      	b.n	8002d7e <HAL_ADC_PollForConversion+0x4a>
    /* each conversion:                                                       */
    /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
    /* several ranks and polling for end of each conversion.                  */
    /* For code simplicity sake, this particular case is generalized to       */
    /* ADC configured in DMA mode and and polling for end of each conversion. */
    if (HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN))
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	68db      	ldr	r3, [r3, #12]
 8002d5a:	2201      	movs	r2, #1
 8002d5c:	4013      	ands	r3, r2
 8002d5e:	2b01      	cmp	r3, #1
 8002d60:	d10b      	bne.n	8002d7a <HAL_ADC_PollForConversion+0x46>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002d66:	2220      	movs	r2, #32
 8002d68:	431a      	orrs	r2, r3
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Process unlocked */
      __HAL_UNLOCK(hadc);
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	2250      	movs	r2, #80	; 0x50
 8002d72:	2100      	movs	r1, #0
 8002d74:	5499      	strb	r1, [r3, r2]
      
      return HAL_ERROR;
 8002d76:	2301      	movs	r3, #1
 8002d78:	e072      	b.n	8002e60 <HAL_ADC_PollForConversion+0x12c>
    }
    else
    {
      tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
 8002d7a:	230c      	movs	r3, #12
 8002d7c:	60fb      	str	r3, [r7, #12]
    }
  }
  
  /* Get tick count */
  tickstart = HAL_GetTick();
 8002d7e:	f7ff fde3 	bl	8002948 <HAL_GetTick>
 8002d82:	0003      	movs	r3, r0
 8002d84:	60bb      	str	r3, [r7, #8]
  
  /* Wait until End of unitary conversion or sequence conversions flag is raised */
  while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8002d86:	e01f      	b.n	8002dc8 <HAL_ADC_PollForConversion+0x94>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8002d88:	683b      	ldr	r3, [r7, #0]
 8002d8a:	3301      	adds	r3, #1
 8002d8c:	d01c      	beq.n	8002dc8 <HAL_ADC_PollForConversion+0x94>
    {
      if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 8002d8e:	683b      	ldr	r3, [r7, #0]
 8002d90:	2b00      	cmp	r3, #0
 8002d92:	d007      	beq.n	8002da4 <HAL_ADC_PollForConversion+0x70>
 8002d94:	f7ff fdd8 	bl	8002948 <HAL_GetTick>
 8002d98:	0002      	movs	r2, r0
 8002d9a:	68bb      	ldr	r3, [r7, #8]
 8002d9c:	1ad3      	subs	r3, r2, r3
 8002d9e:	683a      	ldr	r2, [r7, #0]
 8002da0:	429a      	cmp	r2, r3
 8002da2:	d211      	bcs.n	8002dc8 <HAL_ADC_PollForConversion+0x94>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	68fa      	ldr	r2, [r7, #12]
 8002dac:	4013      	ands	r3, r2
 8002dae:	d10b      	bne.n	8002dc8 <HAL_ADC_PollForConversion+0x94>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002db4:	2204      	movs	r2, #4
 8002db6:	431a      	orrs	r2, r3
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	655a      	str	r2, [r3, #84]	; 0x54

          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	2250      	movs	r2, #80	; 0x50
 8002dc0:	2100      	movs	r1, #0
 8002dc2:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 8002dc4:	2303      	movs	r3, #3
 8002dc6:	e04b      	b.n	8002e60 <HAL_ADC_PollForConversion+0x12c>
  while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	68fa      	ldr	r2, [r7, #12]
 8002dd0:	4013      	ands	r3, r2
 8002dd2:	d0d9      	beq.n	8002d88 <HAL_ADC_PollForConversion+0x54>
      }
    }
  }
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002dd8:	2280      	movs	r2, #128	; 0x80
 8002dda:	0092      	lsls	r2, r2, #2
 8002ddc:	431a      	orrs	r2, r3
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	655a      	str	r2, [r3, #84]	; 0x54
  
  /* Determine whether any further conversion upcoming on group regular       */
  /* by external trigger, continuous mode or scan sequence on going.          */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	68da      	ldr	r2, [r3, #12]
 8002de8:	23c0      	movs	r3, #192	; 0xc0
 8002dea:	011b      	lsls	r3, r3, #4
 8002dec:	4013      	ands	r3, r2
 8002dee:	d12e      	bne.n	8002e4e <HAL_ADC_PollForConversion+0x11a>
     (hadc->Init.ContinuousConvMode == DISABLE)   )
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	2220      	movs	r2, #32
 8002df4:	5c9b      	ldrb	r3, [r3, r2]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d129      	bne.n	8002e4e <HAL_ADC_PollForConversion+0x11a>
  {
    /* If End of Sequence is reached, disable interrupts */
    if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	2208      	movs	r2, #8
 8002e02:	4013      	ands	r3, r2
 8002e04:	2b08      	cmp	r3, #8
 8002e06:	d122      	bne.n	8002e4e <HAL_ADC_PollForConversion+0x11a>
    {
      /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
      /* ADSTART==0 (no conversion on going)                                  */
      if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	689b      	ldr	r3, [r3, #8]
 8002e0e:	2204      	movs	r2, #4
 8002e10:	4013      	ands	r3, r2
 8002e12:	d110      	bne.n	8002e36 <HAL_ADC_PollForConversion+0x102>
      {
        /* Disable ADC end of single conversion interrupt on group regular */
        /* Note: Overrun interrupt was enabled with EOC interrupt in          */
        /* HAL_Start_IT(), but is not disabled here because can be used       */
        /* by overrun IRQ process below.                                      */
        __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	685a      	ldr	r2, [r3, #4]
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	210c      	movs	r1, #12
 8002e20:	438a      	bics	r2, r1
 8002e22:	605a      	str	r2, [r3, #4]
        
        /* Set ADC state */
        ADC_STATE_CLR_SET(hadc->State,
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002e28:	4a0f      	ldr	r2, [pc, #60]	; (8002e68 <HAL_ADC_PollForConversion+0x134>)
 8002e2a:	4013      	ands	r3, r2
 8002e2c:	2201      	movs	r2, #1
 8002e2e:	431a      	orrs	r2, r3
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	655a      	str	r2, [r3, #84]	; 0x54
 8002e34:	e00b      	b.n	8002e4e <HAL_ADC_PollForConversion+0x11a>
                          HAL_ADC_STATE_READY);
      }
      else
      {
        /* Change ADC state to error state */
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002e3a:	2220      	movs	r2, #32
 8002e3c:	431a      	orrs	r2, r3
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Set ADC error code to ADC peripheral internal error */
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002e46:	2201      	movs	r2, #1
 8002e48:	431a      	orrs	r2, r3
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	659a      	str	r2, [r3, #88]	; 0x58
  }
  
  /* Clear end of conversion flag of regular group if low power feature       */
  /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
  /* until data register is read using function HAL_ADC_GetValue().           */
  if (hadc->Init.LowPowerAutoWait == DISABLE)
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	699b      	ldr	r3, [r3, #24]
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	d103      	bne.n	8002e5e <HAL_ADC_PollForConversion+0x12a>
  {
    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	220c      	movs	r2, #12
 8002e5c:	601a      	str	r2, [r3, #0]
  }
  
  /* Return function status */
  return HAL_OK;
 8002e5e:	2300      	movs	r3, #0
}
 8002e60:	0018      	movs	r0, r3
 8002e62:	46bd      	mov	sp, r7
 8002e64:	b004      	add	sp, #16
 8002e66:	bd80      	pop	{r7, pc}
 8002e68:	fffffefe 	.word	0xfffffefe

08002e6c <HAL_ADC_GetValue>:
  *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
  * @param  hadc ADC handle
  * @retval ADC group regular conversion data
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{
 8002e6c:	b580      	push	{r7, lr}
 8002e6e:	b082      	sub	sp, #8
 8002e70:	af00      	add	r7, sp, #0
 8002e72:	6078      	str	r0, [r7, #4]

  /* Note: EOC flag is not cleared here by software because automatically     */
  /*       cleared by hardware when reading register DR.                      */
  
  /* Return ADC converted value */ 
  return hadc->Instance->DR;
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 8002e7a:	0018      	movs	r0, r3
 8002e7c:	46bd      	mov	sp, r7
 8002e7e:	b002      	add	sp, #8
 8002e80:	bd80      	pop	{r7, pc}
	...

08002e84 <HAL_ADC_ConfigChannel>:
  * @param  hadc ADC handle
  * @param  sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8002e84:	b580      	push	{r7, lr}
 8002e86:	b082      	sub	sp, #8
 8002e88:	af00      	add	r7, sp, #0
 8002e8a:	6078      	str	r0, [r7, #4]
 8002e8c:	6039      	str	r1, [r7, #0]
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_RANK(sConfig->Rank));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	2250      	movs	r2, #80	; 0x50
 8002e92:	5c9b      	ldrb	r3, [r3, r2]
 8002e94:	2b01      	cmp	r3, #1
 8002e96:	d101      	bne.n	8002e9c <HAL_ADC_ConfigChannel+0x18>
 8002e98:	2302      	movs	r3, #2
 8002e9a:	e085      	b.n	8002fa8 <HAL_ADC_ConfigChannel+0x124>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	2250      	movs	r2, #80	; 0x50
 8002ea0:	2101      	movs	r1, #1
 8002ea2:	5499      	strb	r1, [r3, r2]
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Management of internal measurement channels: Vbat/VrefInt/TempSensor  */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) != RESET)
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	689b      	ldr	r3, [r3, #8]
 8002eaa:	2204      	movs	r2, #4
 8002eac:	4013      	ands	r3, r2
 8002eae:	d00b      	beq.n	8002ec8 <HAL_ADC_ConfigChannel+0x44>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002eb4:	2220      	movs	r2, #32
 8002eb6:	431a      	orrs	r2, r3
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	655a      	str	r2, [r3, #84]	; 0x54
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	2250      	movs	r2, #80	; 0x50
 8002ec0:	2100      	movs	r1, #0
 8002ec2:	5499      	strb	r1, [r3, r2]
    return HAL_ERROR;
 8002ec4:	2301      	movs	r3, #1
 8002ec6:	e06f      	b.n	8002fa8 <HAL_ADC_ConfigChannel+0x124>
  }
  
  if (sConfig->Rank != ADC_RANK_NONE)
 8002ec8:	683b      	ldr	r3, [r7, #0]
 8002eca:	685b      	ldr	r3, [r3, #4]
 8002ecc:	4a38      	ldr	r2, [pc, #224]	; (8002fb0 <HAL_ADC_ConfigChannel+0x12c>)
 8002ece:	4293      	cmp	r3, r2
 8002ed0:	d035      	beq.n	8002f3e <HAL_ADC_ConfigChannel+0xba>
  {
    /* Enable selected channels */
    hadc->Instance->CHSELR |= (uint32_t)(sConfig->Channel & ADC_CHANNEL_MASK);
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8002ed8:	683b      	ldr	r3, [r7, #0]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	035b      	lsls	r3, r3, #13
 8002ede:	0b5a      	lsrs	r2, r3, #13
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	430a      	orrs	r2, r1
 8002ee6:	629a      	str	r2, [r3, #40]	; 0x28
    /* dedicated internal buffers and path.                                     */
    
    #if defined(ADC_CCR_TSEN)
    /* If Temperature sensor channel is selected, then enable the internal      */
    /* buffers and path  */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_TEMPSENSOR ) == (ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_MASK))
 8002ee8:	683b      	ldr	r3, [r7, #0]
 8002eea:	681a      	ldr	r2, [r3, #0]
 8002eec:	2380      	movs	r3, #128	; 0x80
 8002eee:	02db      	lsls	r3, r3, #11
 8002ef0:	4013      	ands	r3, r2
 8002ef2:	d009      	beq.n	8002f08 <HAL_ADC_ConfigChannel+0x84>
    {
      ADC->CCR |= ADC_CCR_TSEN;   
 8002ef4:	4b2f      	ldr	r3, [pc, #188]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002ef6:	681a      	ldr	r2, [r3, #0]
 8002ef8:	4b2e      	ldr	r3, [pc, #184]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002efa:	2180      	movs	r1, #128	; 0x80
 8002efc:	0409      	lsls	r1, r1, #16
 8002efe:	430a      	orrs	r2, r1
 8002f00:	601a      	str	r2, [r3, #0]
      
      /* Delay for temperature sensor stabilization time */
      ADC_DelayMicroSecond(ADC_TEMPSENSOR_DELAY_US);
 8002f02:	200a      	movs	r0, #10
 8002f04:	f000 f8c6 	bl	8003094 <ADC_DelayMicroSecond>
    }
    #endif
    
    /* If VRefInt channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VREFINT) == (ADC_CHANNEL_VREFINT & ADC_CHANNEL_MASK))
 8002f08:	683b      	ldr	r3, [r7, #0]
 8002f0a:	681a      	ldr	r2, [r3, #0]
 8002f0c:	2380      	movs	r3, #128	; 0x80
 8002f0e:	029b      	lsls	r3, r3, #10
 8002f10:	4013      	ands	r3, r2
 8002f12:	d006      	beq.n	8002f22 <HAL_ADC_ConfigChannel+0x9e>
    {
      ADC->CCR |= ADC_CCR_VREFEN;   
 8002f14:	4b27      	ldr	r3, [pc, #156]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f16:	681a      	ldr	r2, [r3, #0]
 8002f18:	4b26      	ldr	r3, [pc, #152]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f1a:	2180      	movs	r1, #128	; 0x80
 8002f1c:	03c9      	lsls	r1, r1, #15
 8002f1e:	430a      	orrs	r2, r1
 8002f20:	601a      	str	r2, [r3, #0]
    }
    
#if defined (STM32L053xx) || defined (STM32L063xx) || defined (STM32L073xx) || defined (STM32L083xx)
    /* If Vlcd channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VLCD) == (ADC_CHANNEL_VLCD & ADC_CHANNEL_MASK))
 8002f22:	683b      	ldr	r3, [r7, #0]
 8002f24:	681a      	ldr	r2, [r3, #0]
 8002f26:	2380      	movs	r3, #128	; 0x80
 8002f28:	025b      	lsls	r3, r3, #9
 8002f2a:	4013      	ands	r3, r2
 8002f2c:	d037      	beq.n	8002f9e <HAL_ADC_ConfigChannel+0x11a>
    {
      ADC->CCR |= ADC_CCR_VLCDEN;   
 8002f2e:	4b21      	ldr	r3, [pc, #132]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f30:	681a      	ldr	r2, [r3, #0]
 8002f32:	4b20      	ldr	r3, [pc, #128]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f34:	2180      	movs	r1, #128	; 0x80
 8002f36:	0449      	lsls	r1, r1, #17
 8002f38:	430a      	orrs	r2, r1
 8002f3a:	601a      	str	r2, [r3, #0]
 8002f3c:	e02f      	b.n	8002f9e <HAL_ADC_ConfigChannel+0x11a>
  }
  else
  {
    /* Regular sequence configuration */
    /* Reset the channel selection register from the selected channel */
    hadc->Instance->CHSELR &= ~((uint32_t)(sConfig->Channel & ADC_CHANNEL_MASK));
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002f44:	683b      	ldr	r3, [r7, #0]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	035b      	lsls	r3, r3, #13
 8002f4a:	0b5b      	lsrs	r3, r3, #13
 8002f4c:	43d9      	mvns	r1, r3
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	400a      	ands	r2, r1
 8002f54:	629a      	str	r2, [r3, #40]	; 0x28
    
    /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
    /* internal measurement paths disable: If internal channel selected,    */
    /* disable dedicated internal buffers and path.                         */
    #if defined(ADC_CCR_TSEN)
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_TEMPSENSOR ) == (ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_MASK))
 8002f56:	683b      	ldr	r3, [r7, #0]
 8002f58:	681a      	ldr	r2, [r3, #0]
 8002f5a:	2380      	movs	r3, #128	; 0x80
 8002f5c:	02db      	lsls	r3, r3, #11
 8002f5e:	4013      	ands	r3, r2
 8002f60:	d005      	beq.n	8002f6e <HAL_ADC_ConfigChannel+0xea>
    {
      ADC->CCR &= ~ADC_CCR_TSEN;   
 8002f62:	4b14      	ldr	r3, [pc, #80]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f64:	681a      	ldr	r2, [r3, #0]
 8002f66:	4b13      	ldr	r3, [pc, #76]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f68:	4913      	ldr	r1, [pc, #76]	; (8002fb8 <HAL_ADC_ConfigChannel+0x134>)
 8002f6a:	400a      	ands	r2, r1
 8002f6c:	601a      	str	r2, [r3, #0]
    }
    #endif
    
    /* If VRefInt channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VREFINT) == (ADC_CHANNEL_VREFINT & ADC_CHANNEL_MASK))
 8002f6e:	683b      	ldr	r3, [r7, #0]
 8002f70:	681a      	ldr	r2, [r3, #0]
 8002f72:	2380      	movs	r3, #128	; 0x80
 8002f74:	029b      	lsls	r3, r3, #10
 8002f76:	4013      	ands	r3, r2
 8002f78:	d005      	beq.n	8002f86 <HAL_ADC_ConfigChannel+0x102>
    {
      ADC->CCR &= ~ADC_CCR_VREFEN;   
 8002f7a:	4b0e      	ldr	r3, [pc, #56]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f7c:	681a      	ldr	r2, [r3, #0]
 8002f7e:	4b0d      	ldr	r3, [pc, #52]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f80:	490e      	ldr	r1, [pc, #56]	; (8002fbc <HAL_ADC_ConfigChannel+0x138>)
 8002f82:	400a      	ands	r2, r1
 8002f84:	601a      	str	r2, [r3, #0]
    }
    
#if defined (STM32L053xx) || defined (STM32L063xx) || defined (STM32L073xx) || defined (STM32L083xx)
    /* If Vlcd channel is selected, then enable the internal buffers and path   */
    if (((sConfig->Channel & ADC_CHANNEL_MASK) & ADC_CHANNEL_VLCD) == (ADC_CHANNEL_VLCD & ADC_CHANNEL_MASK))
 8002f86:	683b      	ldr	r3, [r7, #0]
 8002f88:	681a      	ldr	r2, [r3, #0]
 8002f8a:	2380      	movs	r3, #128	; 0x80
 8002f8c:	025b      	lsls	r3, r3, #9
 8002f8e:	4013      	ands	r3, r2
 8002f90:	d005      	beq.n	8002f9e <HAL_ADC_ConfigChannel+0x11a>
    {
      ADC->CCR &= ~ADC_CCR_VLCDEN;   
 8002f92:	4b08      	ldr	r3, [pc, #32]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f94:	681a      	ldr	r2, [r3, #0]
 8002f96:	4b07      	ldr	r3, [pc, #28]	; (8002fb4 <HAL_ADC_ConfigChannel+0x130>)
 8002f98:	4909      	ldr	r1, [pc, #36]	; (8002fc0 <HAL_ADC_ConfigChannel+0x13c>)
 8002f9a:	400a      	ands	r2, r1
 8002f9c:	601a      	str	r2, [r3, #0]
    }
#endif
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	2250      	movs	r2, #80	; 0x50
 8002fa2:	2100      	movs	r1, #0
 8002fa4:	5499      	strb	r1, [r3, r2]
  
  /* Return function status */
  return HAL_OK;
 8002fa6:	2300      	movs	r3, #0
}
 8002fa8:	0018      	movs	r0, r3
 8002faa:	46bd      	mov	sp, r7
 8002fac:	b002      	add	sp, #8
 8002fae:	bd80      	pop	{r7, pc}
 8002fb0:	00001001 	.word	0x00001001
 8002fb4:	40012708 	.word	0x40012708
 8002fb8:	ff7fffff 	.word	0xff7fffff
 8002fbc:	ffbfffff 	.word	0xffbfffff
 8002fc0:	feffffff 	.word	0xfeffffff

08002fc4 <ADC_Enable>:
  *         "if (hadc->Init.LowPowerAutoPowerOff != ENABLE)".
  * @param  hadc ADC handle
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
{
 8002fc4:	b580      	push	{r7, lr}
 8002fc6:	b084      	sub	sp, #16
 8002fc8:	af00      	add	r7, sp, #0
 8002fca:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8002fcc:	2300      	movs	r3, #0
 8002fce:	60fb      	str	r3, [r7, #12]

  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	689b      	ldr	r3, [r3, #8]
 8002fd6:	2203      	movs	r2, #3
 8002fd8:	4013      	ands	r3, r2
 8002fda:	2b01      	cmp	r3, #1
 8002fdc:	d108      	bne.n	8002ff0 <ADC_Enable+0x2c>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	2201      	movs	r2, #1
 8002fe6:	4013      	ands	r3, r2
 8002fe8:	2b01      	cmp	r3, #1
 8002fea:	d101      	bne.n	8002ff0 <ADC_Enable+0x2c>
 8002fec:	2301      	movs	r3, #1
 8002fee:	e000      	b.n	8002ff2 <ADC_Enable+0x2e>
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d146      	bne.n	8003084 <ADC_Enable+0xc0>
  {
    /* Check if conditions to enable the ADC are fulfilled */
    if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	689b      	ldr	r3, [r3, #8]
 8002ffc:	4a24      	ldr	r2, [pc, #144]	; (8003090 <ADC_Enable+0xcc>)
 8002ffe:	4013      	ands	r3, r2
 8003000:	d00d      	beq.n	800301e <ADC_Enable+0x5a>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003006:	2210      	movs	r2, #16
 8003008:	431a      	orrs	r2, r3
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003012:	2201      	movs	r2, #1
 8003014:	431a      	orrs	r2, r3
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	659a      	str	r2, [r3, #88]	; 0x58
      
      return HAL_ERROR;
 800301a:	2301      	movs	r3, #1
 800301c:	e033      	b.n	8003086 <ADC_Enable+0xc2>
    }
    
    /* Enable the ADC peripheral */
    __HAL_ADC_ENABLE(hadc);
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	689a      	ldr	r2, [r3, #8]
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	2101      	movs	r1, #1
 800302a:	430a      	orrs	r2, r1
 800302c:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time. */
    ADC_DelayMicroSecond(ADC_STAB_DELAY_US);
 800302e:	2001      	movs	r0, #1
 8003030:	f000 f830 	bl	8003094 <ADC_DelayMicroSecond>

    /* Get tick count */
    tickstart = HAL_GetTick();
 8003034:	f7ff fc88 	bl	8002948 <HAL_GetTick>
 8003038:	0003      	movs	r3, r0
 800303a:	60fb      	str	r3, [r7, #12]
    
    /* Wait for ADC effectively enabled */
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 800303c:	e01b      	b.n	8003076 <ADC_Enable+0xb2>
    {
      if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 800303e:	f7ff fc83 	bl	8002948 <HAL_GetTick>
 8003042:	0002      	movs	r2, r0
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	1ad3      	subs	r3, r2, r3
 8003048:	2b0a      	cmp	r3, #10
 800304a:	d914      	bls.n	8003076 <ADC_Enable+0xb2>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	2201      	movs	r2, #1
 8003054:	4013      	ands	r3, r2
 8003056:	2b01      	cmp	r3, #1
 8003058:	d00d      	beq.n	8003076 <ADC_Enable+0xb2>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800305e:	2210      	movs	r2, #16
 8003060:	431a      	orrs	r2, r3
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	655a      	str	r2, [r3, #84]	; 0x54

          /* Set ADC error code to ADC peripheral internal error */
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800306a:	2201      	movs	r2, #1
 800306c:	431a      	orrs	r2, r3
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	659a      	str	r2, [r3, #88]	; 0x58

          return HAL_ERROR;
 8003072:	2301      	movs	r3, #1
 8003074:	e007      	b.n	8003086 <ADC_Enable+0xc2>
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	2201      	movs	r2, #1
 800307e:	4013      	ands	r3, r2
 8003080:	2b01      	cmp	r3, #1
 8003082:	d1dc      	bne.n	800303e <ADC_Enable+0x7a>
      }
    }
  }
   
  /* Return HAL status */
  return HAL_OK;
 8003084:	2300      	movs	r3, #0
}
 8003086:	0018      	movs	r0, r3
 8003088:	46bd      	mov	sp, r7
 800308a:	b004      	add	sp, #16
 800308c:	bd80      	pop	{r7, pc}
 800308e:	46c0      	nop			; (mov r8, r8)
 8003090:	80000017 	.word	0x80000017

08003094 <ADC_DelayMicroSecond>:
  * @brief  Delay micro seconds 
  * @param  microSecond  delay
  * @retval None
  */
static void ADC_DelayMicroSecond(uint32_t microSecond)
{
 8003094:	b580      	push	{r7, lr}
 8003096:	b084      	sub	sp, #16
 8003098:	af00      	add	r7, sp, #0
 800309a:	6078      	str	r0, [r7, #4]
  /* Compute number of CPU cycles to wait for */
  __IO uint32_t waitLoopIndex = (microSecond * (SystemCoreClock / 1000000U));
 800309c:	4b0b      	ldr	r3, [pc, #44]	; (80030cc <ADC_DelayMicroSecond+0x38>)
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	490b      	ldr	r1, [pc, #44]	; (80030d0 <ADC_DelayMicroSecond+0x3c>)
 80030a2:	0018      	movs	r0, r3
 80030a4:	f7fd f84c 	bl	8000140 <__udivsi3>
 80030a8:	0003      	movs	r3, r0
 80030aa:	001a      	movs	r2, r3
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	4353      	muls	r3, r2
 80030b0:	60fb      	str	r3, [r7, #12]

  while(waitLoopIndex != 0U)
 80030b2:	e002      	b.n	80030ba <ADC_DelayMicroSecond+0x26>
  {
    waitLoopIndex--;
 80030b4:	68fb      	ldr	r3, [r7, #12]
 80030b6:	3b01      	subs	r3, #1
 80030b8:	60fb      	str	r3, [r7, #12]
  while(waitLoopIndex != 0U)
 80030ba:	68fb      	ldr	r3, [r7, #12]
 80030bc:	2b00      	cmp	r3, #0
 80030be:	d1f9      	bne.n	80030b4 <ADC_DelayMicroSecond+0x20>
  } 
}
 80030c0:	46c0      	nop			; (mov r8, r8)
 80030c2:	46c0      	nop			; (mov r8, r8)
 80030c4:	46bd      	mov	sp, r7
 80030c6:	b004      	add	sp, #16
 80030c8:	bd80      	pop	{r7, pc}
 80030ca:	46c0      	nop			; (mov r8, r8)
 80030cc:	20000000 	.word	0x20000000
 80030d0:	000f4240 	.word	0x000f4240

080030d4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80030d4:	b590      	push	{r4, r7, lr}
 80030d6:	b083      	sub	sp, #12
 80030d8:	af00      	add	r7, sp, #0
 80030da:	0002      	movs	r2, r0
 80030dc:	6039      	str	r1, [r7, #0]
 80030de:	1dfb      	adds	r3, r7, #7
 80030e0:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80030e2:	1dfb      	adds	r3, r7, #7
 80030e4:	781b      	ldrb	r3, [r3, #0]
 80030e6:	2b7f      	cmp	r3, #127	; 0x7f
 80030e8:	d828      	bhi.n	800313c <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80030ea:	4a2f      	ldr	r2, [pc, #188]	; (80031a8 <__NVIC_SetPriority+0xd4>)
 80030ec:	1dfb      	adds	r3, r7, #7
 80030ee:	781b      	ldrb	r3, [r3, #0]
 80030f0:	b25b      	sxtb	r3, r3
 80030f2:	089b      	lsrs	r3, r3, #2
 80030f4:	33c0      	adds	r3, #192	; 0xc0
 80030f6:	009b      	lsls	r3, r3, #2
 80030f8:	589b      	ldr	r3, [r3, r2]
 80030fa:	1dfa      	adds	r2, r7, #7
 80030fc:	7812      	ldrb	r2, [r2, #0]
 80030fe:	0011      	movs	r1, r2
 8003100:	2203      	movs	r2, #3
 8003102:	400a      	ands	r2, r1
 8003104:	00d2      	lsls	r2, r2, #3
 8003106:	21ff      	movs	r1, #255	; 0xff
 8003108:	4091      	lsls	r1, r2
 800310a:	000a      	movs	r2, r1
 800310c:	43d2      	mvns	r2, r2
 800310e:	401a      	ands	r2, r3
 8003110:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003112:	683b      	ldr	r3, [r7, #0]
 8003114:	019b      	lsls	r3, r3, #6
 8003116:	22ff      	movs	r2, #255	; 0xff
 8003118:	401a      	ands	r2, r3
 800311a:	1dfb      	adds	r3, r7, #7
 800311c:	781b      	ldrb	r3, [r3, #0]
 800311e:	0018      	movs	r0, r3
 8003120:	2303      	movs	r3, #3
 8003122:	4003      	ands	r3, r0
 8003124:	00db      	lsls	r3, r3, #3
 8003126:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003128:	481f      	ldr	r0, [pc, #124]	; (80031a8 <__NVIC_SetPriority+0xd4>)
 800312a:	1dfb      	adds	r3, r7, #7
 800312c:	781b      	ldrb	r3, [r3, #0]
 800312e:	b25b      	sxtb	r3, r3
 8003130:	089b      	lsrs	r3, r3, #2
 8003132:	430a      	orrs	r2, r1
 8003134:	33c0      	adds	r3, #192	; 0xc0
 8003136:	009b      	lsls	r3, r3, #2
 8003138:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 800313a:	e031      	b.n	80031a0 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800313c:	4a1b      	ldr	r2, [pc, #108]	; (80031ac <__NVIC_SetPriority+0xd8>)
 800313e:	1dfb      	adds	r3, r7, #7
 8003140:	781b      	ldrb	r3, [r3, #0]
 8003142:	0019      	movs	r1, r3
 8003144:	230f      	movs	r3, #15
 8003146:	400b      	ands	r3, r1
 8003148:	3b08      	subs	r3, #8
 800314a:	089b      	lsrs	r3, r3, #2
 800314c:	3306      	adds	r3, #6
 800314e:	009b      	lsls	r3, r3, #2
 8003150:	18d3      	adds	r3, r2, r3
 8003152:	3304      	adds	r3, #4
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	1dfa      	adds	r2, r7, #7
 8003158:	7812      	ldrb	r2, [r2, #0]
 800315a:	0011      	movs	r1, r2
 800315c:	2203      	movs	r2, #3
 800315e:	400a      	ands	r2, r1
 8003160:	00d2      	lsls	r2, r2, #3
 8003162:	21ff      	movs	r1, #255	; 0xff
 8003164:	4091      	lsls	r1, r2
 8003166:	000a      	movs	r2, r1
 8003168:	43d2      	mvns	r2, r2
 800316a:	401a      	ands	r2, r3
 800316c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800316e:	683b      	ldr	r3, [r7, #0]
 8003170:	019b      	lsls	r3, r3, #6
 8003172:	22ff      	movs	r2, #255	; 0xff
 8003174:	401a      	ands	r2, r3
 8003176:	1dfb      	adds	r3, r7, #7
 8003178:	781b      	ldrb	r3, [r3, #0]
 800317a:	0018      	movs	r0, r3
 800317c:	2303      	movs	r3, #3
 800317e:	4003      	ands	r3, r0
 8003180:	00db      	lsls	r3, r3, #3
 8003182:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003184:	4809      	ldr	r0, [pc, #36]	; (80031ac <__NVIC_SetPriority+0xd8>)
 8003186:	1dfb      	adds	r3, r7, #7
 8003188:	781b      	ldrb	r3, [r3, #0]
 800318a:	001c      	movs	r4, r3
 800318c:	230f      	movs	r3, #15
 800318e:	4023      	ands	r3, r4
 8003190:	3b08      	subs	r3, #8
 8003192:	089b      	lsrs	r3, r3, #2
 8003194:	430a      	orrs	r2, r1
 8003196:	3306      	adds	r3, #6
 8003198:	009b      	lsls	r3, r3, #2
 800319a:	18c3      	adds	r3, r0, r3
 800319c:	3304      	adds	r3, #4
 800319e:	601a      	str	r2, [r3, #0]
}
 80031a0:	46c0      	nop			; (mov r8, r8)
 80031a2:	46bd      	mov	sp, r7
 80031a4:	b003      	add	sp, #12
 80031a6:	bd90      	pop	{r4, r7, pc}
 80031a8:	e000e100 	.word	0xe000e100
 80031ac:	e000ed00 	.word	0xe000ed00

080031b0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80031b0:	b580      	push	{r7, lr}
 80031b2:	b082      	sub	sp, #8
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	1e5a      	subs	r2, r3, #1
 80031bc:	2380      	movs	r3, #128	; 0x80
 80031be:	045b      	lsls	r3, r3, #17
 80031c0:	429a      	cmp	r2, r3
 80031c2:	d301      	bcc.n	80031c8 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 80031c4:	2301      	movs	r3, #1
 80031c6:	e010      	b.n	80031ea <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80031c8:	4b0a      	ldr	r3, [pc, #40]	; (80031f4 <SysTick_Config+0x44>)
 80031ca:	687a      	ldr	r2, [r7, #4]
 80031cc:	3a01      	subs	r2, #1
 80031ce:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80031d0:	2301      	movs	r3, #1
 80031d2:	425b      	negs	r3, r3
 80031d4:	2103      	movs	r1, #3
 80031d6:	0018      	movs	r0, r3
 80031d8:	f7ff ff7c 	bl	80030d4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80031dc:	4b05      	ldr	r3, [pc, #20]	; (80031f4 <SysTick_Config+0x44>)
 80031de:	2200      	movs	r2, #0
 80031e0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80031e2:	4b04      	ldr	r3, [pc, #16]	; (80031f4 <SysTick_Config+0x44>)
 80031e4:	2207      	movs	r2, #7
 80031e6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80031e8:	2300      	movs	r3, #0
}
 80031ea:	0018      	movs	r0, r3
 80031ec:	46bd      	mov	sp, r7
 80031ee:	b002      	add	sp, #8
 80031f0:	bd80      	pop	{r7, pc}
 80031f2:	46c0      	nop			; (mov r8, r8)
 80031f4:	e000e010 	.word	0xe000e010

080031f8 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80031f8:	b580      	push	{r7, lr}
 80031fa:	b084      	sub	sp, #16
 80031fc:	af00      	add	r7, sp, #0
 80031fe:	60b9      	str	r1, [r7, #8]
 8003200:	607a      	str	r2, [r7, #4]
 8003202:	210f      	movs	r1, #15
 8003204:	187b      	adds	r3, r7, r1
 8003206:	1c02      	adds	r2, r0, #0
 8003208:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 800320a:	68ba      	ldr	r2, [r7, #8]
 800320c:	187b      	adds	r3, r7, r1
 800320e:	781b      	ldrb	r3, [r3, #0]
 8003210:	b25b      	sxtb	r3, r3
 8003212:	0011      	movs	r1, r2
 8003214:	0018      	movs	r0, r3
 8003216:	f7ff ff5d 	bl	80030d4 <__NVIC_SetPriority>
}
 800321a:	46c0      	nop			; (mov r8, r8)
 800321c:	46bd      	mov	sp, r7
 800321e:	b004      	add	sp, #16
 8003220:	bd80      	pop	{r7, pc}

08003222 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8003222:	b580      	push	{r7, lr}
 8003224:	b082      	sub	sp, #8
 8003226:	af00      	add	r7, sp, #0
 8003228:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	0018      	movs	r0, r3
 800322e:	f7ff ffbf 	bl	80031b0 <SysTick_Config>
 8003232:	0003      	movs	r3, r0
}
 8003234:	0018      	movs	r0, r3
 8003236:	46bd      	mov	sp, r7
 8003238:	b002      	add	sp, #8
 800323a:	bd80      	pop	{r7, pc}

0800323c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800323c:	b580      	push	{r7, lr}
 800323e:	b086      	sub	sp, #24
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8003246:	2300      	movs	r3, #0
 8003248:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 800324a:	2300      	movs	r3, #0
 800324c:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 800324e:	2300      	movs	r3, #0
 8003250:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 8003252:	e14f      	b.n	80034f4 <HAL_GPIO_Init+0x2b8>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 8003254:	683b      	ldr	r3, [r7, #0]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	2101      	movs	r1, #1
 800325a:	697a      	ldr	r2, [r7, #20]
 800325c:	4091      	lsls	r1, r2
 800325e:	000a      	movs	r2, r1
 8003260:	4013      	ands	r3, r2
 8003262:	60fb      	str	r3, [r7, #12]

    if (iocurrent)
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	2b00      	cmp	r3, #0
 8003268:	d100      	bne.n	800326c <HAL_GPIO_Init+0x30>
 800326a:	e140      	b.n	80034ee <HAL_GPIO_Init+0x2b2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 800326c:	683b      	ldr	r3, [r7, #0]
 800326e:	685b      	ldr	r3, [r3, #4]
 8003270:	2203      	movs	r2, #3
 8003272:	4013      	ands	r3, r2
 8003274:	2b01      	cmp	r3, #1
 8003276:	d005      	beq.n	8003284 <HAL_GPIO_Init+0x48>
          ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003278:	683b      	ldr	r3, [r7, #0]
 800327a:	685b      	ldr	r3, [r3, #4]
 800327c:	2203      	movs	r2, #3
 800327e:	4013      	ands	r3, r2
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8003280:	2b02      	cmp	r3, #2
 8003282:	d130      	bne.n	80032e6 <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	689b      	ldr	r3, [r3, #8]
 8003288:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 800328a:	697b      	ldr	r3, [r7, #20]
 800328c:	005b      	lsls	r3, r3, #1
 800328e:	2203      	movs	r2, #3
 8003290:	409a      	lsls	r2, r3
 8003292:	0013      	movs	r3, r2
 8003294:	43da      	mvns	r2, r3
 8003296:	693b      	ldr	r3, [r7, #16]
 8003298:	4013      	ands	r3, r2
 800329a:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800329c:	683b      	ldr	r3, [r7, #0]
 800329e:	68da      	ldr	r2, [r3, #12]
 80032a0:	697b      	ldr	r3, [r7, #20]
 80032a2:	005b      	lsls	r3, r3, #1
 80032a4:	409a      	lsls	r2, r3
 80032a6:	0013      	movs	r3, r2
 80032a8:	693a      	ldr	r2, [r7, #16]
 80032aa:	4313      	orrs	r3, r2
 80032ac:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	693a      	ldr	r2, [r7, #16]
 80032b2:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	685b      	ldr	r3, [r3, #4]
 80032b8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80032ba:	2201      	movs	r2, #1
 80032bc:	697b      	ldr	r3, [r7, #20]
 80032be:	409a      	lsls	r2, r3
 80032c0:	0013      	movs	r3, r2
 80032c2:	43da      	mvns	r2, r3
 80032c4:	693b      	ldr	r3, [r7, #16]
 80032c6:	4013      	ands	r3, r2
 80032c8:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80032ca:	683b      	ldr	r3, [r7, #0]
 80032cc:	685b      	ldr	r3, [r3, #4]
 80032ce:	091b      	lsrs	r3, r3, #4
 80032d0:	2201      	movs	r2, #1
 80032d2:	401a      	ands	r2, r3
 80032d4:	697b      	ldr	r3, [r7, #20]
 80032d6:	409a      	lsls	r2, r3
 80032d8:	0013      	movs	r3, r2
 80032da:	693a      	ldr	r2, [r7, #16]
 80032dc:	4313      	orrs	r3, r2
 80032de:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	693a      	ldr	r2, [r7, #16]
 80032e4:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80032e6:	683b      	ldr	r3, [r7, #0]
 80032e8:	685b      	ldr	r3, [r3, #4]
 80032ea:	2203      	movs	r2, #3
 80032ec:	4013      	ands	r3, r2
 80032ee:	2b03      	cmp	r3, #3
 80032f0:	d017      	beq.n	8003322 <HAL_GPIO_Init+0xe6>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	68db      	ldr	r3, [r3, #12]
 80032f6:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80032f8:	697b      	ldr	r3, [r7, #20]
 80032fa:	005b      	lsls	r3, r3, #1
 80032fc:	2203      	movs	r2, #3
 80032fe:	409a      	lsls	r2, r3
 8003300:	0013      	movs	r3, r2
 8003302:	43da      	mvns	r2, r3
 8003304:	693b      	ldr	r3, [r7, #16]
 8003306:	4013      	ands	r3, r2
 8003308:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800330a:	683b      	ldr	r3, [r7, #0]
 800330c:	689a      	ldr	r2, [r3, #8]
 800330e:	697b      	ldr	r3, [r7, #20]
 8003310:	005b      	lsls	r3, r3, #1
 8003312:	409a      	lsls	r2, r3
 8003314:	0013      	movs	r3, r2
 8003316:	693a      	ldr	r2, [r7, #16]
 8003318:	4313      	orrs	r3, r2
 800331a:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	693a      	ldr	r2, [r7, #16]
 8003320:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003322:	683b      	ldr	r3, [r7, #0]
 8003324:	685b      	ldr	r3, [r3, #4]
 8003326:	2203      	movs	r2, #3
 8003328:	4013      	ands	r3, r2
 800332a:	2b02      	cmp	r3, #2
 800332c:	d123      	bne.n	8003376 <HAL_GPIO_Init+0x13a>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800332e:	697b      	ldr	r3, [r7, #20]
 8003330:	08da      	lsrs	r2, r3, #3
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	3208      	adds	r2, #8
 8003336:	0092      	lsls	r2, r2, #2
 8003338:	58d3      	ldr	r3, [r2, r3]
 800333a:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFUL << ((uint32_t)(position & 0x07UL) * 4U));
 800333c:	697b      	ldr	r3, [r7, #20]
 800333e:	2207      	movs	r2, #7
 8003340:	4013      	ands	r3, r2
 8003342:	009b      	lsls	r3, r3, #2
 8003344:	220f      	movs	r2, #15
 8003346:	409a      	lsls	r2, r3
 8003348:	0013      	movs	r3, r2
 800334a:	43da      	mvns	r2, r3
 800334c:	693b      	ldr	r3, [r7, #16]
 800334e:	4013      	ands	r3, r2
 8003350:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 8003352:	683b      	ldr	r3, [r7, #0]
 8003354:	691a      	ldr	r2, [r3, #16]
 8003356:	697b      	ldr	r3, [r7, #20]
 8003358:	2107      	movs	r1, #7
 800335a:	400b      	ands	r3, r1
 800335c:	009b      	lsls	r3, r3, #2
 800335e:	409a      	lsls	r2, r3
 8003360:	0013      	movs	r3, r2
 8003362:	693a      	ldr	r2, [r7, #16]
 8003364:	4313      	orrs	r3, r2
 8003366:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 8003368:	697b      	ldr	r3, [r7, #20]
 800336a:	08da      	lsrs	r2, r3, #3
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	3208      	adds	r2, #8
 8003370:	0092      	lsls	r2, r2, #2
 8003372:	6939      	ldr	r1, [r7, #16]
 8003374:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 800337c:	697b      	ldr	r3, [r7, #20]
 800337e:	005b      	lsls	r3, r3, #1
 8003380:	2203      	movs	r2, #3
 8003382:	409a      	lsls	r2, r3
 8003384:	0013      	movs	r3, r2
 8003386:	43da      	mvns	r2, r3
 8003388:	693b      	ldr	r3, [r7, #16]
 800338a:	4013      	ands	r3, r2
 800338c:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800338e:	683b      	ldr	r3, [r7, #0]
 8003390:	685b      	ldr	r3, [r3, #4]
 8003392:	2203      	movs	r2, #3
 8003394:	401a      	ands	r2, r3
 8003396:	697b      	ldr	r3, [r7, #20]
 8003398:	005b      	lsls	r3, r3, #1
 800339a:	409a      	lsls	r2, r3
 800339c:	0013      	movs	r3, r2
 800339e:	693a      	ldr	r2, [r7, #16]
 80033a0:	4313      	orrs	r3, r2
 80033a2:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	693a      	ldr	r2, [r7, #16]
 80033a8:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80033aa:	683b      	ldr	r3, [r7, #0]
 80033ac:	685a      	ldr	r2, [r3, #4]
 80033ae:	23c0      	movs	r3, #192	; 0xc0
 80033b0:	029b      	lsls	r3, r3, #10
 80033b2:	4013      	ands	r3, r2
 80033b4:	d100      	bne.n	80033b8 <HAL_GPIO_Init+0x17c>
 80033b6:	e09a      	b.n	80034ee <HAL_GPIO_Init+0x2b2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80033b8:	4b54      	ldr	r3, [pc, #336]	; (800350c <HAL_GPIO_Init+0x2d0>)
 80033ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80033bc:	4b53      	ldr	r3, [pc, #332]	; (800350c <HAL_GPIO_Init+0x2d0>)
 80033be:	2101      	movs	r1, #1
 80033c0:	430a      	orrs	r2, r1
 80033c2:	635a      	str	r2, [r3, #52]	; 0x34

        temp = SYSCFG->EXTICR[position >> 2U];
 80033c4:	4a52      	ldr	r2, [pc, #328]	; (8003510 <HAL_GPIO_Init+0x2d4>)
 80033c6:	697b      	ldr	r3, [r7, #20]
 80033c8:	089b      	lsrs	r3, r3, #2
 80033ca:	3302      	adds	r3, #2
 80033cc:	009b      	lsls	r3, r3, #2
 80033ce:	589b      	ldr	r3, [r3, r2]
 80033d0:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, (0x0FUL) << (4U * (position & 0x03U)));
 80033d2:	697b      	ldr	r3, [r7, #20]
 80033d4:	2203      	movs	r2, #3
 80033d6:	4013      	ands	r3, r2
 80033d8:	009b      	lsls	r3, r3, #2
 80033da:	220f      	movs	r2, #15
 80033dc:	409a      	lsls	r2, r3
 80033de:	0013      	movs	r3, r2
 80033e0:	43da      	mvns	r2, r3
 80033e2:	693b      	ldr	r3, [r7, #16]
 80033e4:	4013      	ands	r3, r2
 80033e6:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80033e8:	687a      	ldr	r2, [r7, #4]
 80033ea:	23a0      	movs	r3, #160	; 0xa0
 80033ec:	05db      	lsls	r3, r3, #23
 80033ee:	429a      	cmp	r2, r3
 80033f0:	d019      	beq.n	8003426 <HAL_GPIO_Init+0x1ea>
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	4a47      	ldr	r2, [pc, #284]	; (8003514 <HAL_GPIO_Init+0x2d8>)
 80033f6:	4293      	cmp	r3, r2
 80033f8:	d013      	beq.n	8003422 <HAL_GPIO_Init+0x1e6>
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	4a46      	ldr	r2, [pc, #280]	; (8003518 <HAL_GPIO_Init+0x2dc>)
 80033fe:	4293      	cmp	r3, r2
 8003400:	d00d      	beq.n	800341e <HAL_GPIO_Init+0x1e2>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	4a45      	ldr	r2, [pc, #276]	; (800351c <HAL_GPIO_Init+0x2e0>)
 8003406:	4293      	cmp	r3, r2
 8003408:	d007      	beq.n	800341a <HAL_GPIO_Init+0x1de>
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	4a44      	ldr	r2, [pc, #272]	; (8003520 <HAL_GPIO_Init+0x2e4>)
 800340e:	4293      	cmp	r3, r2
 8003410:	d101      	bne.n	8003416 <HAL_GPIO_Init+0x1da>
 8003412:	2305      	movs	r3, #5
 8003414:	e008      	b.n	8003428 <HAL_GPIO_Init+0x1ec>
 8003416:	2306      	movs	r3, #6
 8003418:	e006      	b.n	8003428 <HAL_GPIO_Init+0x1ec>
 800341a:	2303      	movs	r3, #3
 800341c:	e004      	b.n	8003428 <HAL_GPIO_Init+0x1ec>
 800341e:	2302      	movs	r3, #2
 8003420:	e002      	b.n	8003428 <HAL_GPIO_Init+0x1ec>
 8003422:	2301      	movs	r3, #1
 8003424:	e000      	b.n	8003428 <HAL_GPIO_Init+0x1ec>
 8003426:	2300      	movs	r3, #0
 8003428:	697a      	ldr	r2, [r7, #20]
 800342a:	2103      	movs	r1, #3
 800342c:	400a      	ands	r2, r1
 800342e:	0092      	lsls	r2, r2, #2
 8003430:	4093      	lsls	r3, r2
 8003432:	693a      	ldr	r2, [r7, #16]
 8003434:	4313      	orrs	r3, r2
 8003436:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003438:	4935      	ldr	r1, [pc, #212]	; (8003510 <HAL_GPIO_Init+0x2d4>)
 800343a:	697b      	ldr	r3, [r7, #20]
 800343c:	089b      	lsrs	r3, r3, #2
 800343e:	3302      	adds	r3, #2
 8003440:	009b      	lsls	r3, r3, #2
 8003442:	693a      	ldr	r2, [r7, #16]
 8003444:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003446:	4b37      	ldr	r3, [pc, #220]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	43da      	mvns	r2, r3
 8003450:	693b      	ldr	r3, [r7, #16]
 8003452:	4013      	ands	r3, r2
 8003454:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003456:	683b      	ldr	r3, [r7, #0]
 8003458:	685a      	ldr	r2, [r3, #4]
 800345a:	2380      	movs	r3, #128	; 0x80
 800345c:	025b      	lsls	r3, r3, #9
 800345e:	4013      	ands	r3, r2
 8003460:	d003      	beq.n	800346a <HAL_GPIO_Init+0x22e>
        {
          temp |= iocurrent;
 8003462:	693a      	ldr	r2, [r7, #16]
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	4313      	orrs	r3, r2
 8003468:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 800346a:	4b2e      	ldr	r3, [pc, #184]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 800346c:	693a      	ldr	r2, [r7, #16]
 800346e:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8003470:	4b2c      	ldr	r3, [pc, #176]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 8003472:	685b      	ldr	r3, [r3, #4]
 8003474:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8003476:	68fb      	ldr	r3, [r7, #12]
 8003478:	43da      	mvns	r2, r3
 800347a:	693b      	ldr	r3, [r7, #16]
 800347c:	4013      	ands	r3, r2
 800347e:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003480:	683b      	ldr	r3, [r7, #0]
 8003482:	685a      	ldr	r2, [r3, #4]
 8003484:	2380      	movs	r3, #128	; 0x80
 8003486:	029b      	lsls	r3, r3, #10
 8003488:	4013      	ands	r3, r2
 800348a:	d003      	beq.n	8003494 <HAL_GPIO_Init+0x258>
        {
          temp |= iocurrent;
 800348c:	693a      	ldr	r2, [r7, #16]
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	4313      	orrs	r3, r2
 8003492:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8003494:	4b23      	ldr	r3, [pc, #140]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 8003496:	693a      	ldr	r2, [r7, #16]
 8003498:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800349a:	4b22      	ldr	r3, [pc, #136]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 800349c:	689b      	ldr	r3, [r3, #8]
 800349e:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80034a0:	68fb      	ldr	r3, [r7, #12]
 80034a2:	43da      	mvns	r2, r3
 80034a4:	693b      	ldr	r3, [r7, #16]
 80034a6:	4013      	ands	r3, r2
 80034a8:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80034aa:	683b      	ldr	r3, [r7, #0]
 80034ac:	685a      	ldr	r2, [r3, #4]
 80034ae:	2380      	movs	r3, #128	; 0x80
 80034b0:	035b      	lsls	r3, r3, #13
 80034b2:	4013      	ands	r3, r2
 80034b4:	d003      	beq.n	80034be <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80034b6:	693a      	ldr	r2, [r7, #16]
 80034b8:	68fb      	ldr	r3, [r7, #12]
 80034ba:	4313      	orrs	r3, r2
 80034bc:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80034be:	4b19      	ldr	r3, [pc, #100]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 80034c0:	693a      	ldr	r2, [r7, #16]
 80034c2:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80034c4:	4b17      	ldr	r3, [pc, #92]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 80034c6:	68db      	ldr	r3, [r3, #12]
 80034c8:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	43da      	mvns	r2, r3
 80034ce:	693b      	ldr	r3, [r7, #16]
 80034d0:	4013      	ands	r3, r2
 80034d2:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80034d4:	683b      	ldr	r3, [r7, #0]
 80034d6:	685a      	ldr	r2, [r3, #4]
 80034d8:	2380      	movs	r3, #128	; 0x80
 80034da:	039b      	lsls	r3, r3, #14
 80034dc:	4013      	ands	r3, r2
 80034de:	d003      	beq.n	80034e8 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 80034e0:	693a      	ldr	r2, [r7, #16]
 80034e2:	68fb      	ldr	r3, [r7, #12]
 80034e4:	4313      	orrs	r3, r2
 80034e6:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80034e8:	4b0e      	ldr	r3, [pc, #56]	; (8003524 <HAL_GPIO_Init+0x2e8>)
 80034ea:	693a      	ldr	r2, [r7, #16]
 80034ec:	60da      	str	r2, [r3, #12]
      }
    }
    position++;
 80034ee:	697b      	ldr	r3, [r7, #20]
 80034f0:	3301      	adds	r3, #1
 80034f2:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 80034f4:	683b      	ldr	r3, [r7, #0]
 80034f6:	681a      	ldr	r2, [r3, #0]
 80034f8:	697b      	ldr	r3, [r7, #20]
 80034fa:	40da      	lsrs	r2, r3
 80034fc:	1e13      	subs	r3, r2, #0
 80034fe:	d000      	beq.n	8003502 <HAL_GPIO_Init+0x2c6>
 8003500:	e6a8      	b.n	8003254 <HAL_GPIO_Init+0x18>
  }
}
 8003502:	46c0      	nop			; (mov r8, r8)
 8003504:	46c0      	nop			; (mov r8, r8)
 8003506:	46bd      	mov	sp, r7
 8003508:	b006      	add	sp, #24
 800350a:	bd80      	pop	{r7, pc}
 800350c:	40021000 	.word	0x40021000
 8003510:	40010000 	.word	0x40010000
 8003514:	50000400 	.word	0x50000400
 8003518:	50000800 	.word	0x50000800
 800351c:	50000c00 	.word	0x50000c00
 8003520:	50001c00 	.word	0x50001c00
 8003524:	40010400 	.word	0x40010400

08003528 <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003528:	b580      	push	{r7, lr}
 800352a:	b082      	sub	sp, #8
 800352c:	af00      	add	r7, sp, #0
 800352e:	6078      	str	r0, [r7, #4]
 8003530:	0008      	movs	r0, r1
 8003532:	0011      	movs	r1, r2
 8003534:	1cbb      	adds	r3, r7, #2
 8003536:	1c02      	adds	r2, r0, #0
 8003538:	801a      	strh	r2, [r3, #0]
 800353a:	1c7b      	adds	r3, r7, #1
 800353c:	1c0a      	adds	r2, r1, #0
 800353e:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003540:	1c7b      	adds	r3, r7, #1
 8003542:	781b      	ldrb	r3, [r3, #0]
 8003544:	2b00      	cmp	r3, #0
 8003546:	d004      	beq.n	8003552 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 8003548:	1cbb      	adds	r3, r7, #2
 800354a:	881a      	ldrh	r2, [r3, #0]
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 8003550:	e003      	b.n	800355a <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 8003552:	1cbb      	adds	r3, r7, #2
 8003554:	881a      	ldrh	r2, [r3, #0]
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	629a      	str	r2, [r3, #40]	; 0x28
}
 800355a:	46c0      	nop			; (mov r8, r8)
 800355c:	46bd      	mov	sp, r7
 800355e:	b002      	add	sp, #8
 8003560:	bd80      	pop	{r7, pc}
	...

08003564 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8003564:	b5b0      	push	{r4, r5, r7, lr}
 8003566:	b08a      	sub	sp, #40	; 0x28
 8003568:	af00      	add	r7, sp, #0
 800356a:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	2b00      	cmp	r3, #0
 8003570:	d102      	bne.n	8003578 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8003572:	2301      	movs	r3, #1
 8003574:	f000 fbaf 	bl	8003cd6 <HAL_RCC_OscConfig+0x772>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8003578:	4bcf      	ldr	r3, [pc, #828]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800357a:	68db      	ldr	r3, [r3, #12]
 800357c:	220c      	movs	r2, #12
 800357e:	4013      	ands	r3, r2
 8003580:	623b      	str	r3, [r7, #32]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8003582:	4bcd      	ldr	r3, [pc, #820]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003584:	68da      	ldr	r2, [r3, #12]
 8003586:	2380      	movs	r3, #128	; 0x80
 8003588:	025b      	lsls	r3, r3, #9
 800358a:	4013      	ands	r3, r2
 800358c:	61fb      	str	r3, [r7, #28]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	2201      	movs	r2, #1
 8003594:	4013      	ands	r3, r2
 8003596:	d100      	bne.n	800359a <HAL_RCC_OscConfig+0x36>
 8003598:	e07e      	b.n	8003698 <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 800359a:	6a3b      	ldr	r3, [r7, #32]
 800359c:	2b08      	cmp	r3, #8
 800359e:	d007      	beq.n	80035b0 <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 80035a0:	6a3b      	ldr	r3, [r7, #32]
 80035a2:	2b0c      	cmp	r3, #12
 80035a4:	d112      	bne.n	80035cc <HAL_RCC_OscConfig+0x68>
 80035a6:	69fa      	ldr	r2, [r7, #28]
 80035a8:	2380      	movs	r3, #128	; 0x80
 80035aa:	025b      	lsls	r3, r3, #9
 80035ac:	429a      	cmp	r2, r3
 80035ae:	d10d      	bne.n	80035cc <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80035b0:	4bc1      	ldr	r3, [pc, #772]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80035b2:	681a      	ldr	r2, [r3, #0]
 80035b4:	2380      	movs	r3, #128	; 0x80
 80035b6:	029b      	lsls	r3, r3, #10
 80035b8:	4013      	ands	r3, r2
 80035ba:	d100      	bne.n	80035be <HAL_RCC_OscConfig+0x5a>
 80035bc:	e06b      	b.n	8003696 <HAL_RCC_OscConfig+0x132>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	685b      	ldr	r3, [r3, #4]
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d167      	bne.n	8003696 <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 80035c6:	2301      	movs	r3, #1
 80035c8:	f000 fb85 	bl	8003cd6 <HAL_RCC_OscConfig+0x772>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	685a      	ldr	r2, [r3, #4]
 80035d0:	2380      	movs	r3, #128	; 0x80
 80035d2:	025b      	lsls	r3, r3, #9
 80035d4:	429a      	cmp	r2, r3
 80035d6:	d107      	bne.n	80035e8 <HAL_RCC_OscConfig+0x84>
 80035d8:	4bb7      	ldr	r3, [pc, #732]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80035da:	681a      	ldr	r2, [r3, #0]
 80035dc:	4bb6      	ldr	r3, [pc, #728]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80035de:	2180      	movs	r1, #128	; 0x80
 80035e0:	0249      	lsls	r1, r1, #9
 80035e2:	430a      	orrs	r2, r1
 80035e4:	601a      	str	r2, [r3, #0]
 80035e6:	e027      	b.n	8003638 <HAL_RCC_OscConfig+0xd4>
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	685a      	ldr	r2, [r3, #4]
 80035ec:	23a0      	movs	r3, #160	; 0xa0
 80035ee:	02db      	lsls	r3, r3, #11
 80035f0:	429a      	cmp	r2, r3
 80035f2:	d10e      	bne.n	8003612 <HAL_RCC_OscConfig+0xae>
 80035f4:	4bb0      	ldr	r3, [pc, #704]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80035f6:	681a      	ldr	r2, [r3, #0]
 80035f8:	4baf      	ldr	r3, [pc, #700]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80035fa:	2180      	movs	r1, #128	; 0x80
 80035fc:	02c9      	lsls	r1, r1, #11
 80035fe:	430a      	orrs	r2, r1
 8003600:	601a      	str	r2, [r3, #0]
 8003602:	4bad      	ldr	r3, [pc, #692]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003604:	681a      	ldr	r2, [r3, #0]
 8003606:	4bac      	ldr	r3, [pc, #688]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003608:	2180      	movs	r1, #128	; 0x80
 800360a:	0249      	lsls	r1, r1, #9
 800360c:	430a      	orrs	r2, r1
 800360e:	601a      	str	r2, [r3, #0]
 8003610:	e012      	b.n	8003638 <HAL_RCC_OscConfig+0xd4>
 8003612:	4ba9      	ldr	r3, [pc, #676]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003614:	681a      	ldr	r2, [r3, #0]
 8003616:	4ba8      	ldr	r3, [pc, #672]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003618:	49a8      	ldr	r1, [pc, #672]	; (80038bc <HAL_RCC_OscConfig+0x358>)
 800361a:	400a      	ands	r2, r1
 800361c:	601a      	str	r2, [r3, #0]
 800361e:	4ba6      	ldr	r3, [pc, #664]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003620:	681a      	ldr	r2, [r3, #0]
 8003622:	2380      	movs	r3, #128	; 0x80
 8003624:	025b      	lsls	r3, r3, #9
 8003626:	4013      	ands	r3, r2
 8003628:	60fb      	str	r3, [r7, #12]
 800362a:	68fb      	ldr	r3, [r7, #12]
 800362c:	4ba2      	ldr	r3, [pc, #648]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800362e:	681a      	ldr	r2, [r3, #0]
 8003630:	4ba1      	ldr	r3, [pc, #644]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003632:	49a3      	ldr	r1, [pc, #652]	; (80038c0 <HAL_RCC_OscConfig+0x35c>)
 8003634:	400a      	ands	r2, r1
 8003636:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	685b      	ldr	r3, [r3, #4]
 800363c:	2b00      	cmp	r3, #0
 800363e:	d015      	beq.n	800366c <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003640:	f7ff f982 	bl	8002948 <HAL_GetTick>
 8003644:	0003      	movs	r3, r0
 8003646:	61bb      	str	r3, [r7, #24]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8003648:	e009      	b.n	800365e <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800364a:	f7ff f97d 	bl	8002948 <HAL_GetTick>
 800364e:	0002      	movs	r2, r0
 8003650:	69bb      	ldr	r3, [r7, #24]
 8003652:	1ad3      	subs	r3, r2, r3
 8003654:	2b64      	cmp	r3, #100	; 0x64
 8003656:	d902      	bls.n	800365e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8003658:	2303      	movs	r3, #3
 800365a:	f000 fb3c 	bl	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800365e:	4b96      	ldr	r3, [pc, #600]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003660:	681a      	ldr	r2, [r3, #0]
 8003662:	2380      	movs	r3, #128	; 0x80
 8003664:	029b      	lsls	r3, r3, #10
 8003666:	4013      	ands	r3, r2
 8003668:	d0ef      	beq.n	800364a <HAL_RCC_OscConfig+0xe6>
 800366a:	e015      	b.n	8003698 <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800366c:	f7ff f96c 	bl	8002948 <HAL_GetTick>
 8003670:	0003      	movs	r3, r0
 8003672:	61bb      	str	r3, [r7, #24]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8003674:	e008      	b.n	8003688 <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003676:	f7ff f967 	bl	8002948 <HAL_GetTick>
 800367a:	0002      	movs	r2, r0
 800367c:	69bb      	ldr	r3, [r7, #24]
 800367e:	1ad3      	subs	r3, r2, r3
 8003680:	2b64      	cmp	r3, #100	; 0x64
 8003682:	d901      	bls.n	8003688 <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 8003684:	2303      	movs	r3, #3
 8003686:	e326      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8003688:	4b8b      	ldr	r3, [pc, #556]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800368a:	681a      	ldr	r2, [r3, #0]
 800368c:	2380      	movs	r3, #128	; 0x80
 800368e:	029b      	lsls	r3, r3, #10
 8003690:	4013      	ands	r3, r2
 8003692:	d1f0      	bne.n	8003676 <HAL_RCC_OscConfig+0x112>
 8003694:	e000      	b.n	8003698 <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003696:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	2202      	movs	r2, #2
 800369e:	4013      	ands	r3, r2
 80036a0:	d100      	bne.n	80036a4 <HAL_RCC_OscConfig+0x140>
 80036a2:	e08b      	b.n	80037bc <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	68db      	ldr	r3, [r3, #12]
 80036a8:	617b      	str	r3, [r7, #20]
      hsi_state &= ~RCC_CR_HSIOUTEN;
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 80036aa:	6a3b      	ldr	r3, [r7, #32]
 80036ac:	2b04      	cmp	r3, #4
 80036ae:	d005      	beq.n	80036bc <HAL_RCC_OscConfig+0x158>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 80036b0:	6a3b      	ldr	r3, [r7, #32]
 80036b2:	2b0c      	cmp	r3, #12
 80036b4:	d13e      	bne.n	8003734 <HAL_RCC_OscConfig+0x1d0>
 80036b6:	69fb      	ldr	r3, [r7, #28]
 80036b8:	2b00      	cmp	r3, #0
 80036ba:	d13b      	bne.n	8003734 <HAL_RCC_OscConfig+0x1d0>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 80036bc:	4b7e      	ldr	r3, [pc, #504]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	2204      	movs	r2, #4
 80036c2:	4013      	ands	r3, r2
 80036c4:	d004      	beq.n	80036d0 <HAL_RCC_OscConfig+0x16c>
 80036c6:	697b      	ldr	r3, [r7, #20]
 80036c8:	2b00      	cmp	r3, #0
 80036ca:	d101      	bne.n	80036d0 <HAL_RCC_OscConfig+0x16c>
      {
        return HAL_ERROR;
 80036cc:	2301      	movs	r3, #1
 80036ce:	e302      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80036d0:	4b79      	ldr	r3, [pc, #484]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80036d2:	685b      	ldr	r3, [r3, #4]
 80036d4:	4a7b      	ldr	r2, [pc, #492]	; (80038c4 <HAL_RCC_OscConfig+0x360>)
 80036d6:	4013      	ands	r3, r2
 80036d8:	0019      	movs	r1, r3
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	691b      	ldr	r3, [r3, #16]
 80036de:	021a      	lsls	r2, r3, #8
 80036e0:	4b75      	ldr	r3, [pc, #468]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80036e2:	430a      	orrs	r2, r1
 80036e4:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 80036e6:	4b74      	ldr	r3, [pc, #464]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	2209      	movs	r2, #9
 80036ec:	4393      	bics	r3, r2
 80036ee:	0019      	movs	r1, r3
 80036f0:	4b71      	ldr	r3, [pc, #452]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80036f2:	697a      	ldr	r2, [r7, #20]
 80036f4:	430a      	orrs	r2, r1
 80036f6:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80036f8:	f000 fc40 	bl	8003f7c <HAL_RCC_GetSysClockFreq>
 80036fc:	0001      	movs	r1, r0
 80036fe:	4b6e      	ldr	r3, [pc, #440]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003700:	68db      	ldr	r3, [r3, #12]
 8003702:	091b      	lsrs	r3, r3, #4
 8003704:	220f      	movs	r2, #15
 8003706:	4013      	ands	r3, r2
 8003708:	4a6f      	ldr	r2, [pc, #444]	; (80038c8 <HAL_RCC_OscConfig+0x364>)
 800370a:	5cd3      	ldrb	r3, [r2, r3]
 800370c:	000a      	movs	r2, r1
 800370e:	40da      	lsrs	r2, r3
 8003710:	4b6e      	ldr	r3, [pc, #440]	; (80038cc <HAL_RCC_OscConfig+0x368>)
 8003712:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (uwTickPrio);
 8003714:	4b6e      	ldr	r3, [pc, #440]	; (80038d0 <HAL_RCC_OscConfig+0x36c>)
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	2513      	movs	r5, #19
 800371a:	197c      	adds	r4, r7, r5
 800371c:	0018      	movs	r0, r3
 800371e:	f7ff f8cd 	bl	80028bc <HAL_InitTick>
 8003722:	0003      	movs	r3, r0
 8003724:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 8003726:	197b      	adds	r3, r7, r5
 8003728:	781b      	ldrb	r3, [r3, #0]
 800372a:	2b00      	cmp	r3, #0
 800372c:	d046      	beq.n	80037bc <HAL_RCC_OscConfig+0x258>
      {
        return status;
 800372e:	197b      	adds	r3, r7, r5
 8003730:	781b      	ldrb	r3, [r3, #0]
 8003732:	e2d0      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 8003734:	697b      	ldr	r3, [r7, #20]
 8003736:	2b00      	cmp	r3, #0
 8003738:	d027      	beq.n	800378a <HAL_RCC_OscConfig+0x226>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 800373a:	4b5f      	ldr	r3, [pc, #380]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	2209      	movs	r2, #9
 8003740:	4393      	bics	r3, r2
 8003742:	0019      	movs	r1, r3
 8003744:	4b5c      	ldr	r3, [pc, #368]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003746:	697a      	ldr	r2, [r7, #20]
 8003748:	430a      	orrs	r2, r1
 800374a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800374c:	f7ff f8fc 	bl	8002948 <HAL_GetTick>
 8003750:	0003      	movs	r3, r0
 8003752:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8003754:	e008      	b.n	8003768 <HAL_RCC_OscConfig+0x204>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003756:	f7ff f8f7 	bl	8002948 <HAL_GetTick>
 800375a:	0002      	movs	r2, r0
 800375c:	69bb      	ldr	r3, [r7, #24]
 800375e:	1ad3      	subs	r3, r2, r3
 8003760:	2b02      	cmp	r3, #2
 8003762:	d901      	bls.n	8003768 <HAL_RCC_OscConfig+0x204>
          {
            return HAL_TIMEOUT;
 8003764:	2303      	movs	r3, #3
 8003766:	e2b6      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8003768:	4b53      	ldr	r3, [pc, #332]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	2204      	movs	r2, #4
 800376e:	4013      	ands	r3, r2
 8003770:	d0f1      	beq.n	8003756 <HAL_RCC_OscConfig+0x1f2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003772:	4b51      	ldr	r3, [pc, #324]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003774:	685b      	ldr	r3, [r3, #4]
 8003776:	4a53      	ldr	r2, [pc, #332]	; (80038c4 <HAL_RCC_OscConfig+0x360>)
 8003778:	4013      	ands	r3, r2
 800377a:	0019      	movs	r1, r3
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	691b      	ldr	r3, [r3, #16]
 8003780:	021a      	lsls	r2, r3, #8
 8003782:	4b4d      	ldr	r3, [pc, #308]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003784:	430a      	orrs	r2, r1
 8003786:	605a      	str	r2, [r3, #4]
 8003788:	e018      	b.n	80037bc <HAL_RCC_OscConfig+0x258>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800378a:	4b4b      	ldr	r3, [pc, #300]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800378c:	681a      	ldr	r2, [r3, #0]
 800378e:	4b4a      	ldr	r3, [pc, #296]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003790:	2101      	movs	r1, #1
 8003792:	438a      	bics	r2, r1
 8003794:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003796:	f7ff f8d7 	bl	8002948 <HAL_GetTick>
 800379a:	0003      	movs	r3, r0
 800379c:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 800379e:	e008      	b.n	80037b2 <HAL_RCC_OscConfig+0x24e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80037a0:	f7ff f8d2 	bl	8002948 <HAL_GetTick>
 80037a4:	0002      	movs	r2, r0
 80037a6:	69bb      	ldr	r3, [r7, #24]
 80037a8:	1ad3      	subs	r3, r2, r3
 80037aa:	2b02      	cmp	r3, #2
 80037ac:	d901      	bls.n	80037b2 <HAL_RCC_OscConfig+0x24e>
          {
            return HAL_TIMEOUT;
 80037ae:	2303      	movs	r3, #3
 80037b0:	e291      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80037b2:	4b41      	ldr	r3, [pc, #260]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	2204      	movs	r2, #4
 80037b8:	4013      	ands	r3, r2
 80037ba:	d1f1      	bne.n	80037a0 <HAL_RCC_OscConfig+0x23c>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	2210      	movs	r2, #16
 80037c2:	4013      	ands	r3, r2
 80037c4:	d100      	bne.n	80037c8 <HAL_RCC_OscConfig+0x264>
 80037c6:	e0a1      	b.n	800390c <HAL_RCC_OscConfig+0x3a8>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 80037c8:	6a3b      	ldr	r3, [r7, #32]
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	d140      	bne.n	8003850 <HAL_RCC_OscConfig+0x2ec>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 80037ce:	4b3a      	ldr	r3, [pc, #232]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80037d0:	681a      	ldr	r2, [r3, #0]
 80037d2:	2380      	movs	r3, #128	; 0x80
 80037d4:	009b      	lsls	r3, r3, #2
 80037d6:	4013      	ands	r3, r2
 80037d8:	d005      	beq.n	80037e6 <HAL_RCC_OscConfig+0x282>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	69db      	ldr	r3, [r3, #28]
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d101      	bne.n	80037e6 <HAL_RCC_OscConfig+0x282>
      {
        return HAL_ERROR;
 80037e2:	2301      	movs	r3, #1
 80037e4:	e277      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80037e6:	4b34      	ldr	r3, [pc, #208]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80037e8:	685b      	ldr	r3, [r3, #4]
 80037ea:	4a3a      	ldr	r2, [pc, #232]	; (80038d4 <HAL_RCC_OscConfig+0x370>)
 80037ec:	4013      	ands	r3, r2
 80037ee:	0019      	movs	r1, r3
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80037f4:	4b30      	ldr	r3, [pc, #192]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80037f6:	430a      	orrs	r2, r1
 80037f8:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80037fa:	4b2f      	ldr	r3, [pc, #188]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80037fc:	685b      	ldr	r3, [r3, #4]
 80037fe:	021b      	lsls	r3, r3, #8
 8003800:	0a19      	lsrs	r1, r3, #8
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	6a1b      	ldr	r3, [r3, #32]
 8003806:	061a      	lsls	r2, r3, #24
 8003808:	4b2b      	ldr	r3, [pc, #172]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800380a:	430a      	orrs	r2, r1
 800380c:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003812:	0b5b      	lsrs	r3, r3, #13
 8003814:	3301      	adds	r3, #1
 8003816:	2280      	movs	r2, #128	; 0x80
 8003818:	0212      	lsls	r2, r2, #8
 800381a:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 800381c:	4b26      	ldr	r3, [pc, #152]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800381e:	68db      	ldr	r3, [r3, #12]
 8003820:	091b      	lsrs	r3, r3, #4
 8003822:	210f      	movs	r1, #15
 8003824:	400b      	ands	r3, r1
 8003826:	4928      	ldr	r1, [pc, #160]	; (80038c8 <HAL_RCC_OscConfig+0x364>)
 8003828:	5ccb      	ldrb	r3, [r1, r3]
 800382a:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 800382c:	4b27      	ldr	r3, [pc, #156]	; (80038cc <HAL_RCC_OscConfig+0x368>)
 800382e:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (uwTickPrio);
 8003830:	4b27      	ldr	r3, [pc, #156]	; (80038d0 <HAL_RCC_OscConfig+0x36c>)
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	2513      	movs	r5, #19
 8003836:	197c      	adds	r4, r7, r5
 8003838:	0018      	movs	r0, r3
 800383a:	f7ff f83f 	bl	80028bc <HAL_InitTick>
 800383e:	0003      	movs	r3, r0
 8003840:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8003842:	197b      	adds	r3, r7, r5
 8003844:	781b      	ldrb	r3, [r3, #0]
 8003846:	2b00      	cmp	r3, #0
 8003848:	d060      	beq.n	800390c <HAL_RCC_OscConfig+0x3a8>
        {
          return status;
 800384a:	197b      	adds	r3, r7, r5
 800384c:	781b      	ldrb	r3, [r3, #0]
 800384e:	e242      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	69db      	ldr	r3, [r3, #28]
 8003854:	2b00      	cmp	r3, #0
 8003856:	d03f      	beq.n	80038d8 <HAL_RCC_OscConfig+0x374>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 8003858:	4b17      	ldr	r3, [pc, #92]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800385a:	681a      	ldr	r2, [r3, #0]
 800385c:	4b16      	ldr	r3, [pc, #88]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800385e:	2180      	movs	r1, #128	; 0x80
 8003860:	0049      	lsls	r1, r1, #1
 8003862:	430a      	orrs	r2, r1
 8003864:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003866:	f7ff f86f 	bl	8002948 <HAL_GetTick>
 800386a:	0003      	movs	r3, r0
 800386c:	61bb      	str	r3, [r7, #24]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 800386e:	e008      	b.n	8003882 <HAL_RCC_OscConfig+0x31e>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8003870:	f7ff f86a 	bl	8002948 <HAL_GetTick>
 8003874:	0002      	movs	r2, r0
 8003876:	69bb      	ldr	r3, [r7, #24]
 8003878:	1ad3      	subs	r3, r2, r3
 800387a:	2b02      	cmp	r3, #2
 800387c:	d901      	bls.n	8003882 <HAL_RCC_OscConfig+0x31e>
          {
            return HAL_TIMEOUT;
 800387e:	2303      	movs	r3, #3
 8003880:	e229      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8003882:	4b0d      	ldr	r3, [pc, #52]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003884:	681a      	ldr	r2, [r3, #0]
 8003886:	2380      	movs	r3, #128	; 0x80
 8003888:	009b      	lsls	r3, r3, #2
 800388a:	4013      	ands	r3, r2
 800388c:	d0f0      	beq.n	8003870 <HAL_RCC_OscConfig+0x30c>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 800388e:	4b0a      	ldr	r3, [pc, #40]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 8003890:	685b      	ldr	r3, [r3, #4]
 8003892:	4a10      	ldr	r2, [pc, #64]	; (80038d4 <HAL_RCC_OscConfig+0x370>)
 8003894:	4013      	ands	r3, r2
 8003896:	0019      	movs	r1, r3
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800389c:	4b06      	ldr	r3, [pc, #24]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 800389e:	430a      	orrs	r2, r1
 80038a0:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80038a2:	4b05      	ldr	r3, [pc, #20]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80038a4:	685b      	ldr	r3, [r3, #4]
 80038a6:	021b      	lsls	r3, r3, #8
 80038a8:	0a19      	lsrs	r1, r3, #8
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	6a1b      	ldr	r3, [r3, #32]
 80038ae:	061a      	lsls	r2, r3, #24
 80038b0:	4b01      	ldr	r3, [pc, #4]	; (80038b8 <HAL_RCC_OscConfig+0x354>)
 80038b2:	430a      	orrs	r2, r1
 80038b4:	605a      	str	r2, [r3, #4]
 80038b6:	e029      	b.n	800390c <HAL_RCC_OscConfig+0x3a8>
 80038b8:	40021000 	.word	0x40021000
 80038bc:	fffeffff 	.word	0xfffeffff
 80038c0:	fffbffff 	.word	0xfffbffff
 80038c4:	ffffe0ff 	.word	0xffffe0ff
 80038c8:	08006dac 	.word	0x08006dac
 80038cc:	20000000 	.word	0x20000000
 80038d0:	20000004 	.word	0x20000004
 80038d4:	ffff1fff 	.word	0xffff1fff
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 80038d8:	4bbd      	ldr	r3, [pc, #756]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 80038da:	681a      	ldr	r2, [r3, #0]
 80038dc:	4bbc      	ldr	r3, [pc, #752]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 80038de:	49bd      	ldr	r1, [pc, #756]	; (8003bd4 <HAL_RCC_OscConfig+0x670>)
 80038e0:	400a      	ands	r2, r1
 80038e2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80038e4:	f7ff f830 	bl	8002948 <HAL_GetTick>
 80038e8:	0003      	movs	r3, r0
 80038ea:	61bb      	str	r3, [r7, #24]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 80038ec:	e008      	b.n	8003900 <HAL_RCC_OscConfig+0x39c>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80038ee:	f7ff f82b 	bl	8002948 <HAL_GetTick>
 80038f2:	0002      	movs	r2, r0
 80038f4:	69bb      	ldr	r3, [r7, #24]
 80038f6:	1ad3      	subs	r3, r2, r3
 80038f8:	2b02      	cmp	r3, #2
 80038fa:	d901      	bls.n	8003900 <HAL_RCC_OscConfig+0x39c>
          {
            return HAL_TIMEOUT;
 80038fc:	2303      	movs	r3, #3
 80038fe:	e1ea      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8003900:	4bb3      	ldr	r3, [pc, #716]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003902:	681a      	ldr	r2, [r3, #0]
 8003904:	2380      	movs	r3, #128	; 0x80
 8003906:	009b      	lsls	r3, r3, #2
 8003908:	4013      	ands	r3, r2
 800390a:	d1f0      	bne.n	80038ee <HAL_RCC_OscConfig+0x38a>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	2208      	movs	r2, #8
 8003912:	4013      	ands	r3, r2
 8003914:	d036      	beq.n	8003984 <HAL_RCC_OscConfig+0x420>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	695b      	ldr	r3, [r3, #20]
 800391a:	2b00      	cmp	r3, #0
 800391c:	d019      	beq.n	8003952 <HAL_RCC_OscConfig+0x3ee>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800391e:	4bac      	ldr	r3, [pc, #688]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003920:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003922:	4bab      	ldr	r3, [pc, #684]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003924:	2101      	movs	r1, #1
 8003926:	430a      	orrs	r2, r1
 8003928:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800392a:	f7ff f80d 	bl	8002948 <HAL_GetTick>
 800392e:	0003      	movs	r3, r0
 8003930:	61bb      	str	r3, [r7, #24]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8003932:	e008      	b.n	8003946 <HAL_RCC_OscConfig+0x3e2>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003934:	f7ff f808 	bl	8002948 <HAL_GetTick>
 8003938:	0002      	movs	r2, r0
 800393a:	69bb      	ldr	r3, [r7, #24]
 800393c:	1ad3      	subs	r3, r2, r3
 800393e:	2b02      	cmp	r3, #2
 8003940:	d901      	bls.n	8003946 <HAL_RCC_OscConfig+0x3e2>
        {
          return HAL_TIMEOUT;
 8003942:	2303      	movs	r3, #3
 8003944:	e1c7      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8003946:	4ba2      	ldr	r3, [pc, #648]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003948:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800394a:	2202      	movs	r2, #2
 800394c:	4013      	ands	r3, r2
 800394e:	d0f1      	beq.n	8003934 <HAL_RCC_OscConfig+0x3d0>
 8003950:	e018      	b.n	8003984 <HAL_RCC_OscConfig+0x420>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8003952:	4b9f      	ldr	r3, [pc, #636]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003954:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003956:	4b9e      	ldr	r3, [pc, #632]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003958:	2101      	movs	r1, #1
 800395a:	438a      	bics	r2, r1
 800395c:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800395e:	f7fe fff3 	bl	8002948 <HAL_GetTick>
 8003962:	0003      	movs	r3, r0
 8003964:	61bb      	str	r3, [r7, #24]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8003966:	e008      	b.n	800397a <HAL_RCC_OscConfig+0x416>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003968:	f7fe ffee 	bl	8002948 <HAL_GetTick>
 800396c:	0002      	movs	r2, r0
 800396e:	69bb      	ldr	r3, [r7, #24]
 8003970:	1ad3      	subs	r3, r2, r3
 8003972:	2b02      	cmp	r3, #2
 8003974:	d901      	bls.n	800397a <HAL_RCC_OscConfig+0x416>
        {
          return HAL_TIMEOUT;
 8003976:	2303      	movs	r3, #3
 8003978:	e1ad      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 800397a:	4b95      	ldr	r3, [pc, #596]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 800397c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800397e:	2202      	movs	r2, #2
 8003980:	4013      	ands	r3, r2
 8003982:	d1f1      	bne.n	8003968 <HAL_RCC_OscConfig+0x404>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	2204      	movs	r2, #4
 800398a:	4013      	ands	r3, r2
 800398c:	d100      	bne.n	8003990 <HAL_RCC_OscConfig+0x42c>
 800398e:	e0ae      	b.n	8003aee <HAL_RCC_OscConfig+0x58a>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003990:	2027      	movs	r0, #39	; 0x27
 8003992:	183b      	adds	r3, r7, r0
 8003994:	2200      	movs	r2, #0
 8003996:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003998:	4b8d      	ldr	r3, [pc, #564]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 800399a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800399c:	2380      	movs	r3, #128	; 0x80
 800399e:	055b      	lsls	r3, r3, #21
 80039a0:	4013      	ands	r3, r2
 80039a2:	d109      	bne.n	80039b8 <HAL_RCC_OscConfig+0x454>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80039a4:	4b8a      	ldr	r3, [pc, #552]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 80039a6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80039a8:	4b89      	ldr	r3, [pc, #548]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 80039aa:	2180      	movs	r1, #128	; 0x80
 80039ac:	0549      	lsls	r1, r1, #21
 80039ae:	430a      	orrs	r2, r1
 80039b0:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 80039b2:	183b      	adds	r3, r7, r0
 80039b4:	2201      	movs	r2, #1
 80039b6:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80039b8:	4b87      	ldr	r3, [pc, #540]	; (8003bd8 <HAL_RCC_OscConfig+0x674>)
 80039ba:	681a      	ldr	r2, [r3, #0]
 80039bc:	2380      	movs	r3, #128	; 0x80
 80039be:	005b      	lsls	r3, r3, #1
 80039c0:	4013      	ands	r3, r2
 80039c2:	d11a      	bne.n	80039fa <HAL_RCC_OscConfig+0x496>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80039c4:	4b84      	ldr	r3, [pc, #528]	; (8003bd8 <HAL_RCC_OscConfig+0x674>)
 80039c6:	681a      	ldr	r2, [r3, #0]
 80039c8:	4b83      	ldr	r3, [pc, #524]	; (8003bd8 <HAL_RCC_OscConfig+0x674>)
 80039ca:	2180      	movs	r1, #128	; 0x80
 80039cc:	0049      	lsls	r1, r1, #1
 80039ce:	430a      	orrs	r2, r1
 80039d0:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80039d2:	f7fe ffb9 	bl	8002948 <HAL_GetTick>
 80039d6:	0003      	movs	r3, r0
 80039d8:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80039da:	e008      	b.n	80039ee <HAL_RCC_OscConfig+0x48a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80039dc:	f7fe ffb4 	bl	8002948 <HAL_GetTick>
 80039e0:	0002      	movs	r2, r0
 80039e2:	69bb      	ldr	r3, [r7, #24]
 80039e4:	1ad3      	subs	r3, r2, r3
 80039e6:	2b64      	cmp	r3, #100	; 0x64
 80039e8:	d901      	bls.n	80039ee <HAL_RCC_OscConfig+0x48a>
        {
          return HAL_TIMEOUT;
 80039ea:	2303      	movs	r3, #3
 80039ec:	e173      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80039ee:	4b7a      	ldr	r3, [pc, #488]	; (8003bd8 <HAL_RCC_OscConfig+0x674>)
 80039f0:	681a      	ldr	r2, [r3, #0]
 80039f2:	2380      	movs	r3, #128	; 0x80
 80039f4:	005b      	lsls	r3, r3, #1
 80039f6:	4013      	ands	r3, r2
 80039f8:	d0f0      	beq.n	80039dc <HAL_RCC_OscConfig+0x478>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	689a      	ldr	r2, [r3, #8]
 80039fe:	2380      	movs	r3, #128	; 0x80
 8003a00:	005b      	lsls	r3, r3, #1
 8003a02:	429a      	cmp	r2, r3
 8003a04:	d107      	bne.n	8003a16 <HAL_RCC_OscConfig+0x4b2>
 8003a06:	4b72      	ldr	r3, [pc, #456]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a08:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a0a:	4b71      	ldr	r3, [pc, #452]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a0c:	2180      	movs	r1, #128	; 0x80
 8003a0e:	0049      	lsls	r1, r1, #1
 8003a10:	430a      	orrs	r2, r1
 8003a12:	651a      	str	r2, [r3, #80]	; 0x50
 8003a14:	e031      	b.n	8003a7a <HAL_RCC_OscConfig+0x516>
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	689b      	ldr	r3, [r3, #8]
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d10c      	bne.n	8003a38 <HAL_RCC_OscConfig+0x4d4>
 8003a1e:	4b6c      	ldr	r3, [pc, #432]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a20:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a22:	4b6b      	ldr	r3, [pc, #428]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a24:	496b      	ldr	r1, [pc, #428]	; (8003bd4 <HAL_RCC_OscConfig+0x670>)
 8003a26:	400a      	ands	r2, r1
 8003a28:	651a      	str	r2, [r3, #80]	; 0x50
 8003a2a:	4b69      	ldr	r3, [pc, #420]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a2c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a2e:	4b68      	ldr	r3, [pc, #416]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a30:	496a      	ldr	r1, [pc, #424]	; (8003bdc <HAL_RCC_OscConfig+0x678>)
 8003a32:	400a      	ands	r2, r1
 8003a34:	651a      	str	r2, [r3, #80]	; 0x50
 8003a36:	e020      	b.n	8003a7a <HAL_RCC_OscConfig+0x516>
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	689a      	ldr	r2, [r3, #8]
 8003a3c:	23a0      	movs	r3, #160	; 0xa0
 8003a3e:	00db      	lsls	r3, r3, #3
 8003a40:	429a      	cmp	r2, r3
 8003a42:	d10e      	bne.n	8003a62 <HAL_RCC_OscConfig+0x4fe>
 8003a44:	4b62      	ldr	r3, [pc, #392]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a46:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a48:	4b61      	ldr	r3, [pc, #388]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a4a:	2180      	movs	r1, #128	; 0x80
 8003a4c:	00c9      	lsls	r1, r1, #3
 8003a4e:	430a      	orrs	r2, r1
 8003a50:	651a      	str	r2, [r3, #80]	; 0x50
 8003a52:	4b5f      	ldr	r3, [pc, #380]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a54:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a56:	4b5e      	ldr	r3, [pc, #376]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a58:	2180      	movs	r1, #128	; 0x80
 8003a5a:	0049      	lsls	r1, r1, #1
 8003a5c:	430a      	orrs	r2, r1
 8003a5e:	651a      	str	r2, [r3, #80]	; 0x50
 8003a60:	e00b      	b.n	8003a7a <HAL_RCC_OscConfig+0x516>
 8003a62:	4b5b      	ldr	r3, [pc, #364]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a64:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a66:	4b5a      	ldr	r3, [pc, #360]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a68:	495a      	ldr	r1, [pc, #360]	; (8003bd4 <HAL_RCC_OscConfig+0x670>)
 8003a6a:	400a      	ands	r2, r1
 8003a6c:	651a      	str	r2, [r3, #80]	; 0x50
 8003a6e:	4b58      	ldr	r3, [pc, #352]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a70:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003a72:	4b57      	ldr	r3, [pc, #348]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003a74:	4959      	ldr	r1, [pc, #356]	; (8003bdc <HAL_RCC_OscConfig+0x678>)
 8003a76:	400a      	ands	r2, r1
 8003a78:	651a      	str	r2, [r3, #80]	; 0x50

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	689b      	ldr	r3, [r3, #8]
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d015      	beq.n	8003aae <HAL_RCC_OscConfig+0x54a>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003a82:	f7fe ff61 	bl	8002948 <HAL_GetTick>
 8003a86:	0003      	movs	r3, r0
 8003a88:	61bb      	str	r3, [r7, #24]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003a8a:	e009      	b.n	8003aa0 <HAL_RCC_OscConfig+0x53c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003a8c:	f7fe ff5c 	bl	8002948 <HAL_GetTick>
 8003a90:	0002      	movs	r2, r0
 8003a92:	69bb      	ldr	r3, [r7, #24]
 8003a94:	1ad3      	subs	r3, r2, r3
 8003a96:	4a52      	ldr	r2, [pc, #328]	; (8003be0 <HAL_RCC_OscConfig+0x67c>)
 8003a98:	4293      	cmp	r3, r2
 8003a9a:	d901      	bls.n	8003aa0 <HAL_RCC_OscConfig+0x53c>
        {
          return HAL_TIMEOUT;
 8003a9c:	2303      	movs	r3, #3
 8003a9e:	e11a      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003aa0:	4b4b      	ldr	r3, [pc, #300]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003aa2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003aa4:	2380      	movs	r3, #128	; 0x80
 8003aa6:	009b      	lsls	r3, r3, #2
 8003aa8:	4013      	ands	r3, r2
 8003aaa:	d0ef      	beq.n	8003a8c <HAL_RCC_OscConfig+0x528>
 8003aac:	e014      	b.n	8003ad8 <HAL_RCC_OscConfig+0x574>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003aae:	f7fe ff4b 	bl	8002948 <HAL_GetTick>
 8003ab2:	0003      	movs	r3, r0
 8003ab4:	61bb      	str	r3, [r7, #24]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8003ab6:	e009      	b.n	8003acc <HAL_RCC_OscConfig+0x568>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003ab8:	f7fe ff46 	bl	8002948 <HAL_GetTick>
 8003abc:	0002      	movs	r2, r0
 8003abe:	69bb      	ldr	r3, [r7, #24]
 8003ac0:	1ad3      	subs	r3, r2, r3
 8003ac2:	4a47      	ldr	r2, [pc, #284]	; (8003be0 <HAL_RCC_OscConfig+0x67c>)
 8003ac4:	4293      	cmp	r3, r2
 8003ac6:	d901      	bls.n	8003acc <HAL_RCC_OscConfig+0x568>
        {
          return HAL_TIMEOUT;
 8003ac8:	2303      	movs	r3, #3
 8003aca:	e104      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8003acc:	4b40      	ldr	r3, [pc, #256]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003ace:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003ad0:	2380      	movs	r3, #128	; 0x80
 8003ad2:	009b      	lsls	r3, r3, #2
 8003ad4:	4013      	ands	r3, r2
 8003ad6:	d1ef      	bne.n	8003ab8 <HAL_RCC_OscConfig+0x554>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003ad8:	2327      	movs	r3, #39	; 0x27
 8003ada:	18fb      	adds	r3, r7, r3
 8003adc:	781b      	ldrb	r3, [r3, #0]
 8003ade:	2b01      	cmp	r3, #1
 8003ae0:	d105      	bne.n	8003aee <HAL_RCC_OscConfig+0x58a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003ae2:	4b3b      	ldr	r3, [pc, #236]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003ae4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003ae6:	4b3a      	ldr	r3, [pc, #232]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003ae8:	493e      	ldr	r1, [pc, #248]	; (8003be4 <HAL_RCC_OscConfig+0x680>)
 8003aea:	400a      	ands	r2, r1
 8003aec:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	2220      	movs	r2, #32
 8003af4:	4013      	ands	r3, r2
 8003af6:	d049      	beq.n	8003b8c <HAL_RCC_OscConfig+0x628>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	699b      	ldr	r3, [r3, #24]
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d026      	beq.n	8003b4e <HAL_RCC_OscConfig+0x5ea>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8003b00:	4b33      	ldr	r3, [pc, #204]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b02:	689a      	ldr	r2, [r3, #8]
 8003b04:	4b32      	ldr	r3, [pc, #200]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b06:	2101      	movs	r1, #1
 8003b08:	430a      	orrs	r2, r1
 8003b0a:	609a      	str	r2, [r3, #8]
 8003b0c:	4b30      	ldr	r3, [pc, #192]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003b10:	4b2f      	ldr	r3, [pc, #188]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b12:	2101      	movs	r1, #1
 8003b14:	430a      	orrs	r2, r1
 8003b16:	635a      	str	r2, [r3, #52]	; 0x34
 8003b18:	4b33      	ldr	r3, [pc, #204]	; (8003be8 <HAL_RCC_OscConfig+0x684>)
 8003b1a:	6a1a      	ldr	r2, [r3, #32]
 8003b1c:	4b32      	ldr	r3, [pc, #200]	; (8003be8 <HAL_RCC_OscConfig+0x684>)
 8003b1e:	2180      	movs	r1, #128	; 0x80
 8003b20:	0189      	lsls	r1, r1, #6
 8003b22:	430a      	orrs	r2, r1
 8003b24:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003b26:	f7fe ff0f 	bl	8002948 <HAL_GetTick>
 8003b2a:	0003      	movs	r3, r0
 8003b2c:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8003b2e:	e008      	b.n	8003b42 <HAL_RCC_OscConfig+0x5de>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003b30:	f7fe ff0a 	bl	8002948 <HAL_GetTick>
 8003b34:	0002      	movs	r2, r0
 8003b36:	69bb      	ldr	r3, [r7, #24]
 8003b38:	1ad3      	subs	r3, r2, r3
 8003b3a:	2b02      	cmp	r3, #2
 8003b3c:	d901      	bls.n	8003b42 <HAL_RCC_OscConfig+0x5de>
          {
            return HAL_TIMEOUT;
 8003b3e:	2303      	movs	r3, #3
 8003b40:	e0c9      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8003b42:	4b23      	ldr	r3, [pc, #140]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b44:	689b      	ldr	r3, [r3, #8]
 8003b46:	2202      	movs	r2, #2
 8003b48:	4013      	ands	r3, r2
 8003b4a:	d0f1      	beq.n	8003b30 <HAL_RCC_OscConfig+0x5cc>
 8003b4c:	e01e      	b.n	8003b8c <HAL_RCC_OscConfig+0x628>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 8003b4e:	4b20      	ldr	r3, [pc, #128]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b50:	689a      	ldr	r2, [r3, #8]
 8003b52:	4b1f      	ldr	r3, [pc, #124]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b54:	2101      	movs	r1, #1
 8003b56:	438a      	bics	r2, r1
 8003b58:	609a      	str	r2, [r3, #8]
 8003b5a:	4b23      	ldr	r3, [pc, #140]	; (8003be8 <HAL_RCC_OscConfig+0x684>)
 8003b5c:	6a1a      	ldr	r2, [r3, #32]
 8003b5e:	4b22      	ldr	r3, [pc, #136]	; (8003be8 <HAL_RCC_OscConfig+0x684>)
 8003b60:	4922      	ldr	r1, [pc, #136]	; (8003bec <HAL_RCC_OscConfig+0x688>)
 8003b62:	400a      	ands	r2, r1
 8003b64:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003b66:	f7fe feef 	bl	8002948 <HAL_GetTick>
 8003b6a:	0003      	movs	r3, r0
 8003b6c:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8003b6e:	e008      	b.n	8003b82 <HAL_RCC_OscConfig+0x61e>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003b70:	f7fe feea 	bl	8002948 <HAL_GetTick>
 8003b74:	0002      	movs	r2, r0
 8003b76:	69bb      	ldr	r3, [r7, #24]
 8003b78:	1ad3      	subs	r3, r2, r3
 8003b7a:	2b02      	cmp	r3, #2
 8003b7c:	d901      	bls.n	8003b82 <HAL_RCC_OscConfig+0x61e>
          {
            return HAL_TIMEOUT;
 8003b7e:	2303      	movs	r3, #3
 8003b80:	e0a9      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8003b82:	4b13      	ldr	r3, [pc, #76]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003b84:	689b      	ldr	r3, [r3, #8]
 8003b86:	2202      	movs	r2, #2
 8003b88:	4013      	ands	r3, r2
 8003b8a:	d1f1      	bne.n	8003b70 <HAL_RCC_OscConfig+0x60c>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	d100      	bne.n	8003b96 <HAL_RCC_OscConfig+0x632>
 8003b94:	e09e      	b.n	8003cd4 <HAL_RCC_OscConfig+0x770>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003b96:	6a3b      	ldr	r3, [r7, #32]
 8003b98:	2b0c      	cmp	r3, #12
 8003b9a:	d100      	bne.n	8003b9e <HAL_RCC_OscConfig+0x63a>
 8003b9c:	e077      	b.n	8003c8e <HAL_RCC_OscConfig+0x72a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ba2:	2b02      	cmp	r3, #2
 8003ba4:	d158      	bne.n	8003c58 <HAL_RCC_OscConfig+0x6f4>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003ba6:	4b0a      	ldr	r3, [pc, #40]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003ba8:	681a      	ldr	r2, [r3, #0]
 8003baa:	4b09      	ldr	r3, [pc, #36]	; (8003bd0 <HAL_RCC_OscConfig+0x66c>)
 8003bac:	4910      	ldr	r1, [pc, #64]	; (8003bf0 <HAL_RCC_OscConfig+0x68c>)
 8003bae:	400a      	ands	r2, r1
 8003bb0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003bb2:	f7fe fec9 	bl	8002948 <HAL_GetTick>
 8003bb6:	0003      	movs	r3, r0
 8003bb8:	61bb      	str	r3, [r7, #24]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003bba:	e01b      	b.n	8003bf4 <HAL_RCC_OscConfig+0x690>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003bbc:	f7fe fec4 	bl	8002948 <HAL_GetTick>
 8003bc0:	0002      	movs	r2, r0
 8003bc2:	69bb      	ldr	r3, [r7, #24]
 8003bc4:	1ad3      	subs	r3, r2, r3
 8003bc6:	2b02      	cmp	r3, #2
 8003bc8:	d914      	bls.n	8003bf4 <HAL_RCC_OscConfig+0x690>
          {
            return HAL_TIMEOUT;
 8003bca:	2303      	movs	r3, #3
 8003bcc:	e083      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
 8003bce:	46c0      	nop			; (mov r8, r8)
 8003bd0:	40021000 	.word	0x40021000
 8003bd4:	fffffeff 	.word	0xfffffeff
 8003bd8:	40007000 	.word	0x40007000
 8003bdc:	fffffbff 	.word	0xfffffbff
 8003be0:	00001388 	.word	0x00001388
 8003be4:	efffffff 	.word	0xefffffff
 8003be8:	40010000 	.word	0x40010000
 8003bec:	ffffdfff 	.word	0xffffdfff
 8003bf0:	feffffff 	.word	0xfeffffff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003bf4:	4b3a      	ldr	r3, [pc, #232]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003bf6:	681a      	ldr	r2, [r3, #0]
 8003bf8:	2380      	movs	r3, #128	; 0x80
 8003bfa:	049b      	lsls	r3, r3, #18
 8003bfc:	4013      	ands	r3, r2
 8003bfe:	d1dd      	bne.n	8003bbc <HAL_RCC_OscConfig+0x658>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003c00:	4b37      	ldr	r3, [pc, #220]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c02:	68db      	ldr	r3, [r3, #12]
 8003c04:	4a37      	ldr	r2, [pc, #220]	; (8003ce4 <HAL_RCC_OscConfig+0x780>)
 8003c06:	4013      	ands	r3, r2
 8003c08:	0019      	movs	r1, r3
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c12:	431a      	orrs	r2, r3
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c18:	431a      	orrs	r2, r3
 8003c1a:	4b31      	ldr	r3, [pc, #196]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c1c:	430a      	orrs	r2, r1
 8003c1e:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003c20:	4b2f      	ldr	r3, [pc, #188]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c22:	681a      	ldr	r2, [r3, #0]
 8003c24:	4b2e      	ldr	r3, [pc, #184]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c26:	2180      	movs	r1, #128	; 0x80
 8003c28:	0449      	lsls	r1, r1, #17
 8003c2a:	430a      	orrs	r2, r1
 8003c2c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003c2e:	f7fe fe8b 	bl	8002948 <HAL_GetTick>
 8003c32:	0003      	movs	r3, r0
 8003c34:	61bb      	str	r3, [r7, #24]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8003c36:	e008      	b.n	8003c4a <HAL_RCC_OscConfig+0x6e6>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003c38:	f7fe fe86 	bl	8002948 <HAL_GetTick>
 8003c3c:	0002      	movs	r2, r0
 8003c3e:	69bb      	ldr	r3, [r7, #24]
 8003c40:	1ad3      	subs	r3, r2, r3
 8003c42:	2b02      	cmp	r3, #2
 8003c44:	d901      	bls.n	8003c4a <HAL_RCC_OscConfig+0x6e6>
          {
            return HAL_TIMEOUT;
 8003c46:	2303      	movs	r3, #3
 8003c48:	e045      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8003c4a:	4b25      	ldr	r3, [pc, #148]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c4c:	681a      	ldr	r2, [r3, #0]
 8003c4e:	2380      	movs	r3, #128	; 0x80
 8003c50:	049b      	lsls	r3, r3, #18
 8003c52:	4013      	ands	r3, r2
 8003c54:	d0f0      	beq.n	8003c38 <HAL_RCC_OscConfig+0x6d4>
 8003c56:	e03d      	b.n	8003cd4 <HAL_RCC_OscConfig+0x770>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003c58:	4b21      	ldr	r3, [pc, #132]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c5a:	681a      	ldr	r2, [r3, #0]
 8003c5c:	4b20      	ldr	r3, [pc, #128]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c5e:	4922      	ldr	r1, [pc, #136]	; (8003ce8 <HAL_RCC_OscConfig+0x784>)
 8003c60:	400a      	ands	r2, r1
 8003c62:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003c64:	f7fe fe70 	bl	8002948 <HAL_GetTick>
 8003c68:	0003      	movs	r3, r0
 8003c6a:	61bb      	str	r3, [r7, #24]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003c6c:	e008      	b.n	8003c80 <HAL_RCC_OscConfig+0x71c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003c6e:	f7fe fe6b 	bl	8002948 <HAL_GetTick>
 8003c72:	0002      	movs	r2, r0
 8003c74:	69bb      	ldr	r3, [r7, #24]
 8003c76:	1ad3      	subs	r3, r2, r3
 8003c78:	2b02      	cmp	r3, #2
 8003c7a:	d901      	bls.n	8003c80 <HAL_RCC_OscConfig+0x71c>
          {
            return HAL_TIMEOUT;
 8003c7c:	2303      	movs	r3, #3
 8003c7e:	e02a      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003c80:	4b17      	ldr	r3, [pc, #92]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c82:	681a      	ldr	r2, [r3, #0]
 8003c84:	2380      	movs	r3, #128	; 0x80
 8003c86:	049b      	lsls	r3, r3, #18
 8003c88:	4013      	ands	r3, r2
 8003c8a:	d1f0      	bne.n	8003c6e <HAL_RCC_OscConfig+0x70a>
 8003c8c:	e022      	b.n	8003cd4 <HAL_RCC_OscConfig+0x770>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c92:	2b01      	cmp	r3, #1
 8003c94:	d101      	bne.n	8003c9a <HAL_RCC_OscConfig+0x736>
      {
        return HAL_ERROR;
 8003c96:	2301      	movs	r3, #1
 8003c98:	e01d      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8003c9a:	4b11      	ldr	r3, [pc, #68]	; (8003ce0 <HAL_RCC_OscConfig+0x77c>)
 8003c9c:	68db      	ldr	r3, [r3, #12]
 8003c9e:	61fb      	str	r3, [r7, #28]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003ca0:	69fa      	ldr	r2, [r7, #28]
 8003ca2:	2380      	movs	r3, #128	; 0x80
 8003ca4:	025b      	lsls	r3, r3, #9
 8003ca6:	401a      	ands	r2, r3
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003cac:	429a      	cmp	r2, r3
 8003cae:	d10f      	bne.n	8003cd0 <HAL_RCC_OscConfig+0x76c>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8003cb0:	69fa      	ldr	r2, [r7, #28]
 8003cb2:	23f0      	movs	r3, #240	; 0xf0
 8003cb4:	039b      	lsls	r3, r3, #14
 8003cb6:	401a      	ands	r2, r3
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003cbc:	429a      	cmp	r2, r3
 8003cbe:	d107      	bne.n	8003cd0 <HAL_RCC_OscConfig+0x76c>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8003cc0:	69fa      	ldr	r2, [r7, #28]
 8003cc2:	23c0      	movs	r3, #192	; 0xc0
 8003cc4:	041b      	lsls	r3, r3, #16
 8003cc6:	401a      	ands	r2, r3
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8003ccc:	429a      	cmp	r2, r3
 8003cce:	d001      	beq.n	8003cd4 <HAL_RCC_OscConfig+0x770>
        {
          return HAL_ERROR;
 8003cd0:	2301      	movs	r3, #1
 8003cd2:	e000      	b.n	8003cd6 <HAL_RCC_OscConfig+0x772>
        }
      }
    }
  }
  return HAL_OK;
 8003cd4:	2300      	movs	r3, #0
}
 8003cd6:	0018      	movs	r0, r3
 8003cd8:	46bd      	mov	sp, r7
 8003cda:	b00a      	add	sp, #40	; 0x28
 8003cdc:	bdb0      	pop	{r4, r5, r7, pc}
 8003cde:	46c0      	nop			; (mov r8, r8)
 8003ce0:	40021000 	.word	0x40021000
 8003ce4:	ff02ffff 	.word	0xff02ffff
 8003ce8:	feffffff 	.word	0xfeffffff

08003cec <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003cec:	b5b0      	push	{r4, r5, r7, lr}
 8003cee:	b084      	sub	sp, #16
 8003cf0:	af00      	add	r7, sp, #0
 8003cf2:	6078      	str	r0, [r7, #4]
 8003cf4:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d101      	bne.n	8003d00 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003cfc:	2301      	movs	r3, #1
 8003cfe:	e128      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003d00:	4b96      	ldr	r3, [pc, #600]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	2201      	movs	r2, #1
 8003d06:	4013      	ands	r3, r2
 8003d08:	683a      	ldr	r2, [r7, #0]
 8003d0a:	429a      	cmp	r2, r3
 8003d0c:	d91e      	bls.n	8003d4c <HAL_RCC_ClockConfig+0x60>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003d0e:	4b93      	ldr	r3, [pc, #588]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	2201      	movs	r2, #1
 8003d14:	4393      	bics	r3, r2
 8003d16:	0019      	movs	r1, r3
 8003d18:	4b90      	ldr	r3, [pc, #576]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003d1a:	683a      	ldr	r2, [r7, #0]
 8003d1c:	430a      	orrs	r2, r1
 8003d1e:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8003d20:	f7fe fe12 	bl	8002948 <HAL_GetTick>
 8003d24:	0003      	movs	r3, r0
 8003d26:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003d28:	e009      	b.n	8003d3e <HAL_RCC_ClockConfig+0x52>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003d2a:	f7fe fe0d 	bl	8002948 <HAL_GetTick>
 8003d2e:	0002      	movs	r2, r0
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	1ad3      	subs	r3, r2, r3
 8003d34:	4a8a      	ldr	r2, [pc, #552]	; (8003f60 <HAL_RCC_ClockConfig+0x274>)
 8003d36:	4293      	cmp	r3, r2
 8003d38:	d901      	bls.n	8003d3e <HAL_RCC_ClockConfig+0x52>
      {
        return HAL_TIMEOUT;
 8003d3a:	2303      	movs	r3, #3
 8003d3c:	e109      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003d3e:	4b87      	ldr	r3, [pc, #540]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	2201      	movs	r2, #1
 8003d44:	4013      	ands	r3, r2
 8003d46:	683a      	ldr	r2, [r7, #0]
 8003d48:	429a      	cmp	r2, r3
 8003d4a:	d1ee      	bne.n	8003d2a <HAL_RCC_ClockConfig+0x3e>
      }
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	2202      	movs	r2, #2
 8003d52:	4013      	ands	r3, r2
 8003d54:	d009      	beq.n	8003d6a <HAL_RCC_ClockConfig+0x7e>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003d56:	4b83      	ldr	r3, [pc, #524]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003d58:	68db      	ldr	r3, [r3, #12]
 8003d5a:	22f0      	movs	r2, #240	; 0xf0
 8003d5c:	4393      	bics	r3, r2
 8003d5e:	0019      	movs	r1, r3
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	689a      	ldr	r2, [r3, #8]
 8003d64:	4b7f      	ldr	r3, [pc, #508]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003d66:	430a      	orrs	r2, r1
 8003d68:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	681b      	ldr	r3, [r3, #0]
 8003d6e:	2201      	movs	r2, #1
 8003d70:	4013      	ands	r3, r2
 8003d72:	d100      	bne.n	8003d76 <HAL_RCC_ClockConfig+0x8a>
 8003d74:	e089      	b.n	8003e8a <HAL_RCC_ClockConfig+0x19e>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	685b      	ldr	r3, [r3, #4]
 8003d7a:	2b02      	cmp	r3, #2
 8003d7c:	d107      	bne.n	8003d8e <HAL_RCC_ClockConfig+0xa2>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8003d7e:	4b79      	ldr	r3, [pc, #484]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003d80:	681a      	ldr	r2, [r3, #0]
 8003d82:	2380      	movs	r3, #128	; 0x80
 8003d84:	029b      	lsls	r3, r3, #10
 8003d86:	4013      	ands	r3, r2
 8003d88:	d120      	bne.n	8003dcc <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003d8a:	2301      	movs	r3, #1
 8003d8c:	e0e1      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	685b      	ldr	r3, [r3, #4]
 8003d92:	2b03      	cmp	r3, #3
 8003d94:	d107      	bne.n	8003da6 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8003d96:	4b73      	ldr	r3, [pc, #460]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003d98:	681a      	ldr	r2, [r3, #0]
 8003d9a:	2380      	movs	r3, #128	; 0x80
 8003d9c:	049b      	lsls	r3, r3, #18
 8003d9e:	4013      	ands	r3, r2
 8003da0:	d114      	bne.n	8003dcc <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003da2:	2301      	movs	r3, #1
 8003da4:	e0d5      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	685b      	ldr	r3, [r3, #4]
 8003daa:	2b01      	cmp	r3, #1
 8003dac:	d106      	bne.n	8003dbc <HAL_RCC_ClockConfig+0xd0>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8003dae:	4b6d      	ldr	r3, [pc, #436]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	2204      	movs	r2, #4
 8003db4:	4013      	ands	r3, r2
 8003db6:	d109      	bne.n	8003dcc <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003db8:	2301      	movs	r3, #1
 8003dba:	e0ca      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8003dbc:	4b69      	ldr	r3, [pc, #420]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003dbe:	681a      	ldr	r2, [r3, #0]
 8003dc0:	2380      	movs	r3, #128	; 0x80
 8003dc2:	009b      	lsls	r3, r3, #2
 8003dc4:	4013      	ands	r3, r2
 8003dc6:	d101      	bne.n	8003dcc <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003dc8:	2301      	movs	r3, #1
 8003dca:	e0c2      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003dcc:	4b65      	ldr	r3, [pc, #404]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003dce:	68db      	ldr	r3, [r3, #12]
 8003dd0:	2203      	movs	r2, #3
 8003dd2:	4393      	bics	r3, r2
 8003dd4:	0019      	movs	r1, r3
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	685a      	ldr	r2, [r3, #4]
 8003dda:	4b62      	ldr	r3, [pc, #392]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003ddc:	430a      	orrs	r2, r1
 8003dde:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003de0:	f7fe fdb2 	bl	8002948 <HAL_GetTick>
 8003de4:	0003      	movs	r3, r0
 8003de6:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	685b      	ldr	r3, [r3, #4]
 8003dec:	2b02      	cmp	r3, #2
 8003dee:	d111      	bne.n	8003e14 <HAL_RCC_ClockConfig+0x128>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8003df0:	e009      	b.n	8003e06 <HAL_RCC_ClockConfig+0x11a>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003df2:	f7fe fda9 	bl	8002948 <HAL_GetTick>
 8003df6:	0002      	movs	r2, r0
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	1ad3      	subs	r3, r2, r3
 8003dfc:	4a58      	ldr	r2, [pc, #352]	; (8003f60 <HAL_RCC_ClockConfig+0x274>)
 8003dfe:	4293      	cmp	r3, r2
 8003e00:	d901      	bls.n	8003e06 <HAL_RCC_ClockConfig+0x11a>
        {
          return HAL_TIMEOUT;
 8003e02:	2303      	movs	r3, #3
 8003e04:	e0a5      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8003e06:	4b57      	ldr	r3, [pc, #348]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003e08:	68db      	ldr	r3, [r3, #12]
 8003e0a:	220c      	movs	r2, #12
 8003e0c:	4013      	ands	r3, r2
 8003e0e:	2b08      	cmp	r3, #8
 8003e10:	d1ef      	bne.n	8003df2 <HAL_RCC_ClockConfig+0x106>
 8003e12:	e03a      	b.n	8003e8a <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	685b      	ldr	r3, [r3, #4]
 8003e18:	2b03      	cmp	r3, #3
 8003e1a:	d111      	bne.n	8003e40 <HAL_RCC_ClockConfig+0x154>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003e1c:	e009      	b.n	8003e32 <HAL_RCC_ClockConfig+0x146>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003e1e:	f7fe fd93 	bl	8002948 <HAL_GetTick>
 8003e22:	0002      	movs	r2, r0
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	1ad3      	subs	r3, r2, r3
 8003e28:	4a4d      	ldr	r2, [pc, #308]	; (8003f60 <HAL_RCC_ClockConfig+0x274>)
 8003e2a:	4293      	cmp	r3, r2
 8003e2c:	d901      	bls.n	8003e32 <HAL_RCC_ClockConfig+0x146>
        {
          return HAL_TIMEOUT;
 8003e2e:	2303      	movs	r3, #3
 8003e30:	e08f      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003e32:	4b4c      	ldr	r3, [pc, #304]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003e34:	68db      	ldr	r3, [r3, #12]
 8003e36:	220c      	movs	r2, #12
 8003e38:	4013      	ands	r3, r2
 8003e3a:	2b0c      	cmp	r3, #12
 8003e3c:	d1ef      	bne.n	8003e1e <HAL_RCC_ClockConfig+0x132>
 8003e3e:	e024      	b.n	8003e8a <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	685b      	ldr	r3, [r3, #4]
 8003e44:	2b01      	cmp	r3, #1
 8003e46:	d11b      	bne.n	8003e80 <HAL_RCC_ClockConfig+0x194>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8003e48:	e009      	b.n	8003e5e <HAL_RCC_ClockConfig+0x172>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003e4a:	f7fe fd7d 	bl	8002948 <HAL_GetTick>
 8003e4e:	0002      	movs	r2, r0
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	1ad3      	subs	r3, r2, r3
 8003e54:	4a42      	ldr	r2, [pc, #264]	; (8003f60 <HAL_RCC_ClockConfig+0x274>)
 8003e56:	4293      	cmp	r3, r2
 8003e58:	d901      	bls.n	8003e5e <HAL_RCC_ClockConfig+0x172>
        {
          return HAL_TIMEOUT;
 8003e5a:	2303      	movs	r3, #3
 8003e5c:	e079      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8003e5e:	4b41      	ldr	r3, [pc, #260]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003e60:	68db      	ldr	r3, [r3, #12]
 8003e62:	220c      	movs	r2, #12
 8003e64:	4013      	ands	r3, r2
 8003e66:	2b04      	cmp	r3, #4
 8003e68:	d1ef      	bne.n	8003e4a <HAL_RCC_ClockConfig+0x15e>
 8003e6a:	e00e      	b.n	8003e8a <HAL_RCC_ClockConfig+0x19e>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003e6c:	f7fe fd6c 	bl	8002948 <HAL_GetTick>
 8003e70:	0002      	movs	r2, r0
 8003e72:	68fb      	ldr	r3, [r7, #12]
 8003e74:	1ad3      	subs	r3, r2, r3
 8003e76:	4a3a      	ldr	r2, [pc, #232]	; (8003f60 <HAL_RCC_ClockConfig+0x274>)
 8003e78:	4293      	cmp	r3, r2
 8003e7a:	d901      	bls.n	8003e80 <HAL_RCC_ClockConfig+0x194>
        {
          return HAL_TIMEOUT;
 8003e7c:	2303      	movs	r3, #3
 8003e7e:	e068      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8003e80:	4b38      	ldr	r3, [pc, #224]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003e82:	68db      	ldr	r3, [r3, #12]
 8003e84:	220c      	movs	r2, #12
 8003e86:	4013      	ands	r3, r2
 8003e88:	d1f0      	bne.n	8003e6c <HAL_RCC_ClockConfig+0x180>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003e8a:	4b34      	ldr	r3, [pc, #208]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	2201      	movs	r2, #1
 8003e90:	4013      	ands	r3, r2
 8003e92:	683a      	ldr	r2, [r7, #0]
 8003e94:	429a      	cmp	r2, r3
 8003e96:	d21e      	bcs.n	8003ed6 <HAL_RCC_ClockConfig+0x1ea>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003e98:	4b30      	ldr	r3, [pc, #192]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	2201      	movs	r2, #1
 8003e9e:	4393      	bics	r3, r2
 8003ea0:	0019      	movs	r1, r3
 8003ea2:	4b2e      	ldr	r3, [pc, #184]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003ea4:	683a      	ldr	r2, [r7, #0]
 8003ea6:	430a      	orrs	r2, r1
 8003ea8:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8003eaa:	f7fe fd4d 	bl	8002948 <HAL_GetTick>
 8003eae:	0003      	movs	r3, r0
 8003eb0:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003eb2:	e009      	b.n	8003ec8 <HAL_RCC_ClockConfig+0x1dc>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003eb4:	f7fe fd48 	bl	8002948 <HAL_GetTick>
 8003eb8:	0002      	movs	r2, r0
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	1ad3      	subs	r3, r2, r3
 8003ebe:	4a28      	ldr	r2, [pc, #160]	; (8003f60 <HAL_RCC_ClockConfig+0x274>)
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d901      	bls.n	8003ec8 <HAL_RCC_ClockConfig+0x1dc>
      {
        return HAL_TIMEOUT;
 8003ec4:	2303      	movs	r3, #3
 8003ec6:	e044      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003ec8:	4b24      	ldr	r3, [pc, #144]	; (8003f5c <HAL_RCC_ClockConfig+0x270>)
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	2201      	movs	r2, #1
 8003ece:	4013      	ands	r3, r2
 8003ed0:	683a      	ldr	r2, [r7, #0]
 8003ed2:	429a      	cmp	r2, r3
 8003ed4:	d1ee      	bne.n	8003eb4 <HAL_RCC_ClockConfig+0x1c8>
      }
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003ed6:	687b      	ldr	r3, [r7, #4]
 8003ed8:	681b      	ldr	r3, [r3, #0]
 8003eda:	2204      	movs	r2, #4
 8003edc:	4013      	ands	r3, r2
 8003ede:	d009      	beq.n	8003ef4 <HAL_RCC_ClockConfig+0x208>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8003ee0:	4b20      	ldr	r3, [pc, #128]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003ee2:	68db      	ldr	r3, [r3, #12]
 8003ee4:	4a20      	ldr	r2, [pc, #128]	; (8003f68 <HAL_RCC_ClockConfig+0x27c>)
 8003ee6:	4013      	ands	r3, r2
 8003ee8:	0019      	movs	r1, r3
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	68da      	ldr	r2, [r3, #12]
 8003eee:	4b1d      	ldr	r3, [pc, #116]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003ef0:	430a      	orrs	r2, r1
 8003ef2:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	2208      	movs	r2, #8
 8003efa:	4013      	ands	r3, r2
 8003efc:	d00a      	beq.n	8003f14 <HAL_RCC_ClockConfig+0x228>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8003efe:	4b19      	ldr	r3, [pc, #100]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003f00:	68db      	ldr	r3, [r3, #12]
 8003f02:	4a1a      	ldr	r2, [pc, #104]	; (8003f6c <HAL_RCC_ClockConfig+0x280>)
 8003f04:	4013      	ands	r3, r2
 8003f06:	0019      	movs	r1, r3
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	691b      	ldr	r3, [r3, #16]
 8003f0c:	00da      	lsls	r2, r3, #3
 8003f0e:	4b15      	ldr	r3, [pc, #84]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003f10:	430a      	orrs	r2, r1
 8003f12:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8003f14:	f000 f832 	bl	8003f7c <HAL_RCC_GetSysClockFreq>
 8003f18:	0001      	movs	r1, r0
 8003f1a:	4b12      	ldr	r3, [pc, #72]	; (8003f64 <HAL_RCC_ClockConfig+0x278>)
 8003f1c:	68db      	ldr	r3, [r3, #12]
 8003f1e:	091b      	lsrs	r3, r3, #4
 8003f20:	220f      	movs	r2, #15
 8003f22:	4013      	ands	r3, r2
 8003f24:	4a12      	ldr	r2, [pc, #72]	; (8003f70 <HAL_RCC_ClockConfig+0x284>)
 8003f26:	5cd3      	ldrb	r3, [r2, r3]
 8003f28:	000a      	movs	r2, r1
 8003f2a:	40da      	lsrs	r2, r3
 8003f2c:	4b11      	ldr	r3, [pc, #68]	; (8003f74 <HAL_RCC_ClockConfig+0x288>)
 8003f2e:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 8003f30:	4b11      	ldr	r3, [pc, #68]	; (8003f78 <HAL_RCC_ClockConfig+0x28c>)
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	250b      	movs	r5, #11
 8003f36:	197c      	adds	r4, r7, r5
 8003f38:	0018      	movs	r0, r3
 8003f3a:	f7fe fcbf 	bl	80028bc <HAL_InitTick>
 8003f3e:	0003      	movs	r3, r0
 8003f40:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 8003f42:	197b      	adds	r3, r7, r5
 8003f44:	781b      	ldrb	r3, [r3, #0]
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d002      	beq.n	8003f50 <HAL_RCC_ClockConfig+0x264>
  {
    return status;
 8003f4a:	197b      	adds	r3, r7, r5
 8003f4c:	781b      	ldrb	r3, [r3, #0]
 8003f4e:	e000      	b.n	8003f52 <HAL_RCC_ClockConfig+0x266>
  }

  return HAL_OK;
 8003f50:	2300      	movs	r3, #0
}
 8003f52:	0018      	movs	r0, r3
 8003f54:	46bd      	mov	sp, r7
 8003f56:	b004      	add	sp, #16
 8003f58:	bdb0      	pop	{r4, r5, r7, pc}
 8003f5a:	46c0      	nop			; (mov r8, r8)
 8003f5c:	40022000 	.word	0x40022000
 8003f60:	00001388 	.word	0x00001388
 8003f64:	40021000 	.word	0x40021000
 8003f68:	fffff8ff 	.word	0xfffff8ff
 8003f6c:	ffffc7ff 	.word	0xffffc7ff
 8003f70:	08006dac 	.word	0x08006dac
 8003f74:	20000000 	.word	0x20000000
 8003f78:	20000004 	.word	0x20000004

08003f7c <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003f7c:	b5b0      	push	{r4, r5, r7, lr}
 8003f7e:	b08e      	sub	sp, #56	; 0x38
 8003f80:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 8003f82:	4b4c      	ldr	r3, [pc, #304]	; (80040b4 <HAL_RCC_GetSysClockFreq+0x138>)
 8003f84:	68db      	ldr	r3, [r3, #12]
 8003f86:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003f88:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003f8a:	230c      	movs	r3, #12
 8003f8c:	4013      	ands	r3, r2
 8003f8e:	2b0c      	cmp	r3, #12
 8003f90:	d014      	beq.n	8003fbc <HAL_RCC_GetSysClockFreq+0x40>
 8003f92:	d900      	bls.n	8003f96 <HAL_RCC_GetSysClockFreq+0x1a>
 8003f94:	e07b      	b.n	800408e <HAL_RCC_GetSysClockFreq+0x112>
 8003f96:	2b04      	cmp	r3, #4
 8003f98:	d002      	beq.n	8003fa0 <HAL_RCC_GetSysClockFreq+0x24>
 8003f9a:	2b08      	cmp	r3, #8
 8003f9c:	d00b      	beq.n	8003fb6 <HAL_RCC_GetSysClockFreq+0x3a>
 8003f9e:	e076      	b.n	800408e <HAL_RCC_GetSysClockFreq+0x112>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8003fa0:	4b44      	ldr	r3, [pc, #272]	; (80040b4 <HAL_RCC_GetSysClockFreq+0x138>)
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	2210      	movs	r2, #16
 8003fa6:	4013      	ands	r3, r2
 8003fa8:	d002      	beq.n	8003fb0 <HAL_RCC_GetSysClockFreq+0x34>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 8003faa:	4b43      	ldr	r3, [pc, #268]	; (80040b8 <HAL_RCC_GetSysClockFreq+0x13c>)
 8003fac:	633b      	str	r3, [r7, #48]	; 0x30
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 8003fae:	e07c      	b.n	80040aa <HAL_RCC_GetSysClockFreq+0x12e>
        sysclockfreq =  HSI_VALUE;
 8003fb0:	4b42      	ldr	r3, [pc, #264]	; (80040bc <HAL_RCC_GetSysClockFreq+0x140>)
 8003fb2:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003fb4:	e079      	b.n	80040aa <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003fb6:	4b42      	ldr	r3, [pc, #264]	; (80040c0 <HAL_RCC_GetSysClockFreq+0x144>)
 8003fb8:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003fba:	e076      	b.n	80040aa <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8003fbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003fbe:	0c9a      	lsrs	r2, r3, #18
 8003fc0:	230f      	movs	r3, #15
 8003fc2:	401a      	ands	r2, r3
 8003fc4:	4b3f      	ldr	r3, [pc, #252]	; (80040c4 <HAL_RCC_GetSysClockFreq+0x148>)
 8003fc6:	5c9b      	ldrb	r3, [r3, r2]
 8003fc8:	62bb      	str	r3, [r7, #40]	; 0x28
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8003fca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003fcc:	0d9a      	lsrs	r2, r3, #22
 8003fce:	2303      	movs	r3, #3
 8003fd0:	4013      	ands	r3, r2
 8003fd2:	3301      	adds	r3, #1
 8003fd4:	627b      	str	r3, [r7, #36]	; 0x24
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8003fd6:	4b37      	ldr	r3, [pc, #220]	; (80040b4 <HAL_RCC_GetSysClockFreq+0x138>)
 8003fd8:	68da      	ldr	r2, [r3, #12]
 8003fda:	2380      	movs	r3, #128	; 0x80
 8003fdc:	025b      	lsls	r3, r3, #9
 8003fde:	4013      	ands	r3, r2
 8003fe0:	d01a      	beq.n	8004018 <HAL_RCC_GetSysClockFreq+0x9c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8003fe2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003fe4:	61bb      	str	r3, [r7, #24]
 8003fe6:	2300      	movs	r3, #0
 8003fe8:	61fb      	str	r3, [r7, #28]
 8003fea:	4a35      	ldr	r2, [pc, #212]	; (80040c0 <HAL_RCC_GetSysClockFreq+0x144>)
 8003fec:	2300      	movs	r3, #0
 8003fee:	69b8      	ldr	r0, [r7, #24]
 8003ff0:	69f9      	ldr	r1, [r7, #28]
 8003ff2:	f7fc fa79 	bl	80004e8 <__aeabi_lmul>
 8003ff6:	0002      	movs	r2, r0
 8003ff8:	000b      	movs	r3, r1
 8003ffa:	0010      	movs	r0, r2
 8003ffc:	0019      	movs	r1, r3
 8003ffe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004000:	613b      	str	r3, [r7, #16]
 8004002:	2300      	movs	r3, #0
 8004004:	617b      	str	r3, [r7, #20]
 8004006:	693a      	ldr	r2, [r7, #16]
 8004008:	697b      	ldr	r3, [r7, #20]
 800400a:	f7fc fa4d 	bl	80004a8 <__aeabi_uldivmod>
 800400e:	0002      	movs	r2, r0
 8004010:	000b      	movs	r3, r1
 8004012:	0013      	movs	r3, r2
 8004014:	637b      	str	r3, [r7, #52]	; 0x34
 8004016:	e037      	b.n	8004088 <HAL_RCC_GetSysClockFreq+0x10c>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8004018:	4b26      	ldr	r3, [pc, #152]	; (80040b4 <HAL_RCC_GetSysClockFreq+0x138>)
 800401a:	681b      	ldr	r3, [r3, #0]
 800401c:	2210      	movs	r2, #16
 800401e:	4013      	ands	r3, r2
 8004020:	d01a      	beq.n	8004058 <HAL_RCC_GetSysClockFreq+0xdc>
        {
          pllvco = (uint32_t)((((uint64_t)(HSI_VALUE >> 2)) * (uint64_t)pllm) / (uint64_t)plld);
 8004022:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004024:	60bb      	str	r3, [r7, #8]
 8004026:	2300      	movs	r3, #0
 8004028:	60fb      	str	r3, [r7, #12]
 800402a:	4a23      	ldr	r2, [pc, #140]	; (80040b8 <HAL_RCC_GetSysClockFreq+0x13c>)
 800402c:	2300      	movs	r3, #0
 800402e:	68b8      	ldr	r0, [r7, #8]
 8004030:	68f9      	ldr	r1, [r7, #12]
 8004032:	f7fc fa59 	bl	80004e8 <__aeabi_lmul>
 8004036:	0002      	movs	r2, r0
 8004038:	000b      	movs	r3, r1
 800403a:	0010      	movs	r0, r2
 800403c:	0019      	movs	r1, r3
 800403e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004040:	603b      	str	r3, [r7, #0]
 8004042:	2300      	movs	r3, #0
 8004044:	607b      	str	r3, [r7, #4]
 8004046:	683a      	ldr	r2, [r7, #0]
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	f7fc fa2d 	bl	80004a8 <__aeabi_uldivmod>
 800404e:	0002      	movs	r2, r0
 8004050:	000b      	movs	r3, r1
 8004052:	0013      	movs	r3, r2
 8004054:	637b      	str	r3, [r7, #52]	; 0x34
 8004056:	e017      	b.n	8004088 <HAL_RCC_GetSysClockFreq+0x10c>
        }
        else
        {
         pllvco = (uint32_t)(((uint64_t)HSI_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8004058:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800405a:	0018      	movs	r0, r3
 800405c:	2300      	movs	r3, #0
 800405e:	0019      	movs	r1, r3
 8004060:	4a16      	ldr	r2, [pc, #88]	; (80040bc <HAL_RCC_GetSysClockFreq+0x140>)
 8004062:	2300      	movs	r3, #0
 8004064:	f7fc fa40 	bl	80004e8 <__aeabi_lmul>
 8004068:	0002      	movs	r2, r0
 800406a:	000b      	movs	r3, r1
 800406c:	0010      	movs	r0, r2
 800406e:	0019      	movs	r1, r3
 8004070:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004072:	001c      	movs	r4, r3
 8004074:	2300      	movs	r3, #0
 8004076:	001d      	movs	r5, r3
 8004078:	0022      	movs	r2, r4
 800407a:	002b      	movs	r3, r5
 800407c:	f7fc fa14 	bl	80004a8 <__aeabi_uldivmod>
 8004080:	0002      	movs	r2, r0
 8004082:	000b      	movs	r3, r1
 8004084:	0013      	movs	r3, r2
 8004086:	637b      	str	r3, [r7, #52]	; 0x34
        }
      }
      sysclockfreq = pllvco;
 8004088:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800408a:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 800408c:	e00d      	b.n	80040aa <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 800408e:	4b09      	ldr	r3, [pc, #36]	; (80040b4 <HAL_RCC_GetSysClockFreq+0x138>)
 8004090:	685b      	ldr	r3, [r3, #4]
 8004092:	0b5b      	lsrs	r3, r3, #13
 8004094:	2207      	movs	r2, #7
 8004096:	4013      	ands	r3, r2
 8004098:	623b      	str	r3, [r7, #32]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 800409a:	6a3b      	ldr	r3, [r7, #32]
 800409c:	3301      	adds	r3, #1
 800409e:	2280      	movs	r2, #128	; 0x80
 80040a0:	0212      	lsls	r2, r2, #8
 80040a2:	409a      	lsls	r2, r3
 80040a4:	0013      	movs	r3, r2
 80040a6:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80040a8:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 80040aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 80040ac:	0018      	movs	r0, r3
 80040ae:	46bd      	mov	sp, r7
 80040b0:	b00e      	add	sp, #56	; 0x38
 80040b2:	bdb0      	pop	{r4, r5, r7, pc}
 80040b4:	40021000 	.word	0x40021000
 80040b8:	003d0900 	.word	0x003d0900
 80040bc:	00f42400 	.word	0x00f42400
 80040c0:	007a1200 	.word	0x007a1200
 80040c4:	08006dbc 	.word	0x08006dbc

080040c8 <__errno>:
 80040c8:	4b01      	ldr	r3, [pc, #4]	; (80040d0 <__errno+0x8>)
 80040ca:	6818      	ldr	r0, [r3, #0]
 80040cc:	4770      	bx	lr
 80040ce:	46c0      	nop			; (mov r8, r8)
 80040d0:	2000000c 	.word	0x2000000c

080040d4 <__libc_init_array>:
 80040d4:	b570      	push	{r4, r5, r6, lr}
 80040d6:	2600      	movs	r6, #0
 80040d8:	4d0c      	ldr	r5, [pc, #48]	; (800410c <__libc_init_array+0x38>)
 80040da:	4c0d      	ldr	r4, [pc, #52]	; (8004110 <__libc_init_array+0x3c>)
 80040dc:	1b64      	subs	r4, r4, r5
 80040de:	10a4      	asrs	r4, r4, #2
 80040e0:	42a6      	cmp	r6, r4
 80040e2:	d109      	bne.n	80040f8 <__libc_init_array+0x24>
 80040e4:	2600      	movs	r6, #0
 80040e6:	f002 fe07 	bl	8006cf8 <_init>
 80040ea:	4d0a      	ldr	r5, [pc, #40]	; (8004114 <__libc_init_array+0x40>)
 80040ec:	4c0a      	ldr	r4, [pc, #40]	; (8004118 <__libc_init_array+0x44>)
 80040ee:	1b64      	subs	r4, r4, r5
 80040f0:	10a4      	asrs	r4, r4, #2
 80040f2:	42a6      	cmp	r6, r4
 80040f4:	d105      	bne.n	8004102 <__libc_init_array+0x2e>
 80040f6:	bd70      	pop	{r4, r5, r6, pc}
 80040f8:	00b3      	lsls	r3, r6, #2
 80040fa:	58eb      	ldr	r3, [r5, r3]
 80040fc:	4798      	blx	r3
 80040fe:	3601      	adds	r6, #1
 8004100:	e7ee      	b.n	80040e0 <__libc_init_array+0xc>
 8004102:	00b3      	lsls	r3, r6, #2
 8004104:	58eb      	ldr	r3, [r5, r3]
 8004106:	4798      	blx	r3
 8004108:	3601      	adds	r6, #1
 800410a:	e7f2      	b.n	80040f2 <__libc_init_array+0x1e>
 800410c:	080071ac 	.word	0x080071ac
 8004110:	080071ac 	.word	0x080071ac
 8004114:	080071ac 	.word	0x080071ac
 8004118:	080071b0 	.word	0x080071b0

0800411c <memset>:
 800411c:	0003      	movs	r3, r0
 800411e:	1882      	adds	r2, r0, r2
 8004120:	4293      	cmp	r3, r2
 8004122:	d100      	bne.n	8004126 <memset+0xa>
 8004124:	4770      	bx	lr
 8004126:	7019      	strb	r1, [r3, #0]
 8004128:	3301      	adds	r3, #1
 800412a:	e7f9      	b.n	8004120 <memset+0x4>

0800412c <__cvt>:
 800412c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800412e:	001e      	movs	r6, r3
 8004130:	2300      	movs	r3, #0
 8004132:	0014      	movs	r4, r2
 8004134:	b08b      	sub	sp, #44	; 0x2c
 8004136:	429e      	cmp	r6, r3
 8004138:	da04      	bge.n	8004144 <__cvt+0x18>
 800413a:	2180      	movs	r1, #128	; 0x80
 800413c:	0609      	lsls	r1, r1, #24
 800413e:	1873      	adds	r3, r6, r1
 8004140:	001e      	movs	r6, r3
 8004142:	232d      	movs	r3, #45	; 0x2d
 8004144:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004146:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004148:	7013      	strb	r3, [r2, #0]
 800414a:	2320      	movs	r3, #32
 800414c:	2203      	movs	r2, #3
 800414e:	439f      	bics	r7, r3
 8004150:	2f46      	cmp	r7, #70	; 0x46
 8004152:	d007      	beq.n	8004164 <__cvt+0x38>
 8004154:	003b      	movs	r3, r7
 8004156:	3b45      	subs	r3, #69	; 0x45
 8004158:	4259      	negs	r1, r3
 800415a:	414b      	adcs	r3, r1
 800415c:	9910      	ldr	r1, [sp, #64]	; 0x40
 800415e:	3a01      	subs	r2, #1
 8004160:	18cb      	adds	r3, r1, r3
 8004162:	9310      	str	r3, [sp, #64]	; 0x40
 8004164:	ab09      	add	r3, sp, #36	; 0x24
 8004166:	9304      	str	r3, [sp, #16]
 8004168:	ab08      	add	r3, sp, #32
 800416a:	9303      	str	r3, [sp, #12]
 800416c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800416e:	9200      	str	r2, [sp, #0]
 8004170:	9302      	str	r3, [sp, #8]
 8004172:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004174:	0022      	movs	r2, r4
 8004176:	9301      	str	r3, [sp, #4]
 8004178:	0033      	movs	r3, r6
 800417a:	f000 fceb 	bl	8004b54 <_dtoa_r>
 800417e:	0005      	movs	r5, r0
 8004180:	2f47      	cmp	r7, #71	; 0x47
 8004182:	d102      	bne.n	800418a <__cvt+0x5e>
 8004184:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004186:	07db      	lsls	r3, r3, #31
 8004188:	d528      	bpl.n	80041dc <__cvt+0xb0>
 800418a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800418c:	18eb      	adds	r3, r5, r3
 800418e:	9307      	str	r3, [sp, #28]
 8004190:	2f46      	cmp	r7, #70	; 0x46
 8004192:	d114      	bne.n	80041be <__cvt+0x92>
 8004194:	782b      	ldrb	r3, [r5, #0]
 8004196:	2b30      	cmp	r3, #48	; 0x30
 8004198:	d10c      	bne.n	80041b4 <__cvt+0x88>
 800419a:	2200      	movs	r2, #0
 800419c:	2300      	movs	r3, #0
 800419e:	0020      	movs	r0, r4
 80041a0:	0031      	movs	r1, r6
 80041a2:	f7fc f953 	bl	800044c <__aeabi_dcmpeq>
 80041a6:	2800      	cmp	r0, #0
 80041a8:	d104      	bne.n	80041b4 <__cvt+0x88>
 80041aa:	2301      	movs	r3, #1
 80041ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80041ae:	1a9b      	subs	r3, r3, r2
 80041b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80041b2:	6013      	str	r3, [r2, #0]
 80041b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80041b6:	9a07      	ldr	r2, [sp, #28]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	18d3      	adds	r3, r2, r3
 80041bc:	9307      	str	r3, [sp, #28]
 80041be:	2200      	movs	r2, #0
 80041c0:	2300      	movs	r3, #0
 80041c2:	0020      	movs	r0, r4
 80041c4:	0031      	movs	r1, r6
 80041c6:	f7fc f941 	bl	800044c <__aeabi_dcmpeq>
 80041ca:	2800      	cmp	r0, #0
 80041cc:	d001      	beq.n	80041d2 <__cvt+0xa6>
 80041ce:	9b07      	ldr	r3, [sp, #28]
 80041d0:	9309      	str	r3, [sp, #36]	; 0x24
 80041d2:	2230      	movs	r2, #48	; 0x30
 80041d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80041d6:	9907      	ldr	r1, [sp, #28]
 80041d8:	428b      	cmp	r3, r1
 80041da:	d306      	bcc.n	80041ea <__cvt+0xbe>
 80041dc:	0028      	movs	r0, r5
 80041de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80041e0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80041e2:	1b5b      	subs	r3, r3, r5
 80041e4:	6013      	str	r3, [r2, #0]
 80041e6:	b00b      	add	sp, #44	; 0x2c
 80041e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041ea:	1c59      	adds	r1, r3, #1
 80041ec:	9109      	str	r1, [sp, #36]	; 0x24
 80041ee:	701a      	strb	r2, [r3, #0]
 80041f0:	e7f0      	b.n	80041d4 <__cvt+0xa8>

080041f2 <__exponent>:
 80041f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041f4:	1c83      	adds	r3, r0, #2
 80041f6:	b087      	sub	sp, #28
 80041f8:	9303      	str	r3, [sp, #12]
 80041fa:	0005      	movs	r5, r0
 80041fc:	000c      	movs	r4, r1
 80041fe:	232b      	movs	r3, #43	; 0x2b
 8004200:	7002      	strb	r2, [r0, #0]
 8004202:	2900      	cmp	r1, #0
 8004204:	da01      	bge.n	800420a <__exponent+0x18>
 8004206:	424c      	negs	r4, r1
 8004208:	3302      	adds	r3, #2
 800420a:	706b      	strb	r3, [r5, #1]
 800420c:	2c09      	cmp	r4, #9
 800420e:	dd31      	ble.n	8004274 <__exponent+0x82>
 8004210:	270a      	movs	r7, #10
 8004212:	ab04      	add	r3, sp, #16
 8004214:	1dde      	adds	r6, r3, #7
 8004216:	0020      	movs	r0, r4
 8004218:	0039      	movs	r1, r7
 800421a:	9601      	str	r6, [sp, #4]
 800421c:	f7fc f900 	bl	8000420 <__aeabi_idivmod>
 8004220:	3e01      	subs	r6, #1
 8004222:	3130      	adds	r1, #48	; 0x30
 8004224:	0020      	movs	r0, r4
 8004226:	7031      	strb	r1, [r6, #0]
 8004228:	0039      	movs	r1, r7
 800422a:	9402      	str	r4, [sp, #8]
 800422c:	f7fc f812 	bl	8000254 <__divsi3>
 8004230:	9b02      	ldr	r3, [sp, #8]
 8004232:	0004      	movs	r4, r0
 8004234:	2b63      	cmp	r3, #99	; 0x63
 8004236:	dcee      	bgt.n	8004216 <__exponent+0x24>
 8004238:	9b01      	ldr	r3, [sp, #4]
 800423a:	3430      	adds	r4, #48	; 0x30
 800423c:	1e9a      	subs	r2, r3, #2
 800423e:	0013      	movs	r3, r2
 8004240:	9903      	ldr	r1, [sp, #12]
 8004242:	7014      	strb	r4, [r2, #0]
 8004244:	a804      	add	r0, sp, #16
 8004246:	3007      	adds	r0, #7
 8004248:	4298      	cmp	r0, r3
 800424a:	d80e      	bhi.n	800426a <__exponent+0x78>
 800424c:	ab04      	add	r3, sp, #16
 800424e:	3307      	adds	r3, #7
 8004250:	2000      	movs	r0, #0
 8004252:	429a      	cmp	r2, r3
 8004254:	d804      	bhi.n	8004260 <__exponent+0x6e>
 8004256:	ab04      	add	r3, sp, #16
 8004258:	3009      	adds	r0, #9
 800425a:	18c0      	adds	r0, r0, r3
 800425c:	9b01      	ldr	r3, [sp, #4]
 800425e:	1ac0      	subs	r0, r0, r3
 8004260:	9b03      	ldr	r3, [sp, #12]
 8004262:	1818      	adds	r0, r3, r0
 8004264:	1b40      	subs	r0, r0, r5
 8004266:	b007      	add	sp, #28
 8004268:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800426a:	7818      	ldrb	r0, [r3, #0]
 800426c:	3301      	adds	r3, #1
 800426e:	7008      	strb	r0, [r1, #0]
 8004270:	3101      	adds	r1, #1
 8004272:	e7e7      	b.n	8004244 <__exponent+0x52>
 8004274:	2330      	movs	r3, #48	; 0x30
 8004276:	18e4      	adds	r4, r4, r3
 8004278:	70ab      	strb	r3, [r5, #2]
 800427a:	1d28      	adds	r0, r5, #4
 800427c:	70ec      	strb	r4, [r5, #3]
 800427e:	e7f1      	b.n	8004264 <__exponent+0x72>

08004280 <_printf_float>:
 8004280:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004282:	b095      	sub	sp, #84	; 0x54
 8004284:	000c      	movs	r4, r1
 8004286:	9209      	str	r2, [sp, #36]	; 0x24
 8004288:	001e      	movs	r6, r3
 800428a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800428c:	0007      	movs	r7, r0
 800428e:	f001 fb7d 	bl	800598c <_localeconv_r>
 8004292:	6803      	ldr	r3, [r0, #0]
 8004294:	0018      	movs	r0, r3
 8004296:	930c      	str	r3, [sp, #48]	; 0x30
 8004298:	f7fb ff36 	bl	8000108 <strlen>
 800429c:	2300      	movs	r3, #0
 800429e:	9312      	str	r3, [sp, #72]	; 0x48
 80042a0:	7e23      	ldrb	r3, [r4, #24]
 80042a2:	2207      	movs	r2, #7
 80042a4:	930a      	str	r3, [sp, #40]	; 0x28
 80042a6:	6823      	ldr	r3, [r4, #0]
 80042a8:	900e      	str	r0, [sp, #56]	; 0x38
 80042aa:	930d      	str	r3, [sp, #52]	; 0x34
 80042ac:	990d      	ldr	r1, [sp, #52]	; 0x34
 80042ae:	682b      	ldr	r3, [r5, #0]
 80042b0:	05c9      	lsls	r1, r1, #23
 80042b2:	d547      	bpl.n	8004344 <_printf_float+0xc4>
 80042b4:	189b      	adds	r3, r3, r2
 80042b6:	4393      	bics	r3, r2
 80042b8:	001a      	movs	r2, r3
 80042ba:	3208      	adds	r2, #8
 80042bc:	602a      	str	r2, [r5, #0]
 80042be:	681a      	ldr	r2, [r3, #0]
 80042c0:	685b      	ldr	r3, [r3, #4]
 80042c2:	64a2      	str	r2, [r4, #72]	; 0x48
 80042c4:	64e3      	str	r3, [r4, #76]	; 0x4c
 80042c6:	2201      	movs	r2, #1
 80042c8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80042ca:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80042cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80042ce:	006b      	lsls	r3, r5, #1
 80042d0:	085b      	lsrs	r3, r3, #1
 80042d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80042d4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80042d6:	4ba7      	ldr	r3, [pc, #668]	; (8004574 <_printf_float+0x2f4>)
 80042d8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80042da:	4252      	negs	r2, r2
 80042dc:	f7fd ff3a 	bl	8002154 <__aeabi_dcmpun>
 80042e0:	2800      	cmp	r0, #0
 80042e2:	d131      	bne.n	8004348 <_printf_float+0xc8>
 80042e4:	2201      	movs	r2, #1
 80042e6:	4ba3      	ldr	r3, [pc, #652]	; (8004574 <_printf_float+0x2f4>)
 80042e8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80042ea:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80042ec:	4252      	negs	r2, r2
 80042ee:	f7fc f8bd 	bl	800046c <__aeabi_dcmple>
 80042f2:	2800      	cmp	r0, #0
 80042f4:	d128      	bne.n	8004348 <_printf_float+0xc8>
 80042f6:	2200      	movs	r2, #0
 80042f8:	2300      	movs	r3, #0
 80042fa:	0029      	movs	r1, r5
 80042fc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80042fe:	f7fc f8ab 	bl	8000458 <__aeabi_dcmplt>
 8004302:	2800      	cmp	r0, #0
 8004304:	d003      	beq.n	800430e <_printf_float+0x8e>
 8004306:	0023      	movs	r3, r4
 8004308:	222d      	movs	r2, #45	; 0x2d
 800430a:	3343      	adds	r3, #67	; 0x43
 800430c:	701a      	strb	r2, [r3, #0]
 800430e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004310:	4d99      	ldr	r5, [pc, #612]	; (8004578 <_printf_float+0x2f8>)
 8004312:	2b47      	cmp	r3, #71	; 0x47
 8004314:	d900      	bls.n	8004318 <_printf_float+0x98>
 8004316:	4d99      	ldr	r5, [pc, #612]	; (800457c <_printf_float+0x2fc>)
 8004318:	2303      	movs	r3, #3
 800431a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800431c:	6123      	str	r3, [r4, #16]
 800431e:	3301      	adds	r3, #1
 8004320:	439a      	bics	r2, r3
 8004322:	2300      	movs	r3, #0
 8004324:	6022      	str	r2, [r4, #0]
 8004326:	930b      	str	r3, [sp, #44]	; 0x2c
 8004328:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800432a:	0021      	movs	r1, r4
 800432c:	0038      	movs	r0, r7
 800432e:	9600      	str	r6, [sp, #0]
 8004330:	aa13      	add	r2, sp, #76	; 0x4c
 8004332:	f000 f9e7 	bl	8004704 <_printf_common>
 8004336:	1c43      	adds	r3, r0, #1
 8004338:	d000      	beq.n	800433c <_printf_float+0xbc>
 800433a:	e0a2      	b.n	8004482 <_printf_float+0x202>
 800433c:	2001      	movs	r0, #1
 800433e:	4240      	negs	r0, r0
 8004340:	b015      	add	sp, #84	; 0x54
 8004342:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004344:	3307      	adds	r3, #7
 8004346:	e7b6      	b.n	80042b6 <_printf_float+0x36>
 8004348:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800434a:	002b      	movs	r3, r5
 800434c:	0010      	movs	r0, r2
 800434e:	0029      	movs	r1, r5
 8004350:	f7fd ff00 	bl	8002154 <__aeabi_dcmpun>
 8004354:	2800      	cmp	r0, #0
 8004356:	d00b      	beq.n	8004370 <_printf_float+0xf0>
 8004358:	2d00      	cmp	r5, #0
 800435a:	da03      	bge.n	8004364 <_printf_float+0xe4>
 800435c:	0023      	movs	r3, r4
 800435e:	222d      	movs	r2, #45	; 0x2d
 8004360:	3343      	adds	r3, #67	; 0x43
 8004362:	701a      	strb	r2, [r3, #0]
 8004364:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004366:	4d86      	ldr	r5, [pc, #536]	; (8004580 <_printf_float+0x300>)
 8004368:	2b47      	cmp	r3, #71	; 0x47
 800436a:	d9d5      	bls.n	8004318 <_printf_float+0x98>
 800436c:	4d85      	ldr	r5, [pc, #532]	; (8004584 <_printf_float+0x304>)
 800436e:	e7d3      	b.n	8004318 <_printf_float+0x98>
 8004370:	2220      	movs	r2, #32
 8004372:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004374:	6863      	ldr	r3, [r4, #4]
 8004376:	4391      	bics	r1, r2
 8004378:	910f      	str	r1, [sp, #60]	; 0x3c
 800437a:	1c5a      	adds	r2, r3, #1
 800437c:	d149      	bne.n	8004412 <_printf_float+0x192>
 800437e:	3307      	adds	r3, #7
 8004380:	6063      	str	r3, [r4, #4]
 8004382:	2380      	movs	r3, #128	; 0x80
 8004384:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004386:	00db      	lsls	r3, r3, #3
 8004388:	4313      	orrs	r3, r2
 800438a:	2200      	movs	r2, #0
 800438c:	9206      	str	r2, [sp, #24]
 800438e:	aa12      	add	r2, sp, #72	; 0x48
 8004390:	9205      	str	r2, [sp, #20]
 8004392:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004394:	a908      	add	r1, sp, #32
 8004396:	9204      	str	r2, [sp, #16]
 8004398:	aa11      	add	r2, sp, #68	; 0x44
 800439a:	9203      	str	r2, [sp, #12]
 800439c:	2223      	movs	r2, #35	; 0x23
 800439e:	6023      	str	r3, [r4, #0]
 80043a0:	9301      	str	r3, [sp, #4]
 80043a2:	6863      	ldr	r3, [r4, #4]
 80043a4:	1852      	adds	r2, r2, r1
 80043a6:	9202      	str	r2, [sp, #8]
 80043a8:	9300      	str	r3, [sp, #0]
 80043aa:	0038      	movs	r0, r7
 80043ac:	002b      	movs	r3, r5
 80043ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80043b0:	f7ff febc 	bl	800412c <__cvt>
 80043b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80043b6:	0005      	movs	r5, r0
 80043b8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80043ba:	2b47      	cmp	r3, #71	; 0x47
 80043bc:	d108      	bne.n	80043d0 <_printf_float+0x150>
 80043be:	1ccb      	adds	r3, r1, #3
 80043c0:	db02      	blt.n	80043c8 <_printf_float+0x148>
 80043c2:	6863      	ldr	r3, [r4, #4]
 80043c4:	4299      	cmp	r1, r3
 80043c6:	dd48      	ble.n	800445a <_printf_float+0x1da>
 80043c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80043ca:	3b02      	subs	r3, #2
 80043cc:	b2db      	uxtb	r3, r3
 80043ce:	930a      	str	r3, [sp, #40]	; 0x28
 80043d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80043d2:	2b65      	cmp	r3, #101	; 0x65
 80043d4:	d824      	bhi.n	8004420 <_printf_float+0x1a0>
 80043d6:	0020      	movs	r0, r4
 80043d8:	001a      	movs	r2, r3
 80043da:	3901      	subs	r1, #1
 80043dc:	3050      	adds	r0, #80	; 0x50
 80043de:	9111      	str	r1, [sp, #68]	; 0x44
 80043e0:	f7ff ff07 	bl	80041f2 <__exponent>
 80043e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80043e6:	900b      	str	r0, [sp, #44]	; 0x2c
 80043e8:	1813      	adds	r3, r2, r0
 80043ea:	6123      	str	r3, [r4, #16]
 80043ec:	2a01      	cmp	r2, #1
 80043ee:	dc02      	bgt.n	80043f6 <_printf_float+0x176>
 80043f0:	6822      	ldr	r2, [r4, #0]
 80043f2:	07d2      	lsls	r2, r2, #31
 80043f4:	d501      	bpl.n	80043fa <_printf_float+0x17a>
 80043f6:	3301      	adds	r3, #1
 80043f8:	6123      	str	r3, [r4, #16]
 80043fa:	2323      	movs	r3, #35	; 0x23
 80043fc:	aa08      	add	r2, sp, #32
 80043fe:	189b      	adds	r3, r3, r2
 8004400:	781b      	ldrb	r3, [r3, #0]
 8004402:	2b00      	cmp	r3, #0
 8004404:	d100      	bne.n	8004408 <_printf_float+0x188>
 8004406:	e78f      	b.n	8004328 <_printf_float+0xa8>
 8004408:	0023      	movs	r3, r4
 800440a:	222d      	movs	r2, #45	; 0x2d
 800440c:	3343      	adds	r3, #67	; 0x43
 800440e:	701a      	strb	r2, [r3, #0]
 8004410:	e78a      	b.n	8004328 <_printf_float+0xa8>
 8004412:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004414:	2a47      	cmp	r2, #71	; 0x47
 8004416:	d1b4      	bne.n	8004382 <_printf_float+0x102>
 8004418:	2b00      	cmp	r3, #0
 800441a:	d1b2      	bne.n	8004382 <_printf_float+0x102>
 800441c:	3301      	adds	r3, #1
 800441e:	e7af      	b.n	8004380 <_printf_float+0x100>
 8004420:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004422:	2b66      	cmp	r3, #102	; 0x66
 8004424:	d11b      	bne.n	800445e <_printf_float+0x1de>
 8004426:	6863      	ldr	r3, [r4, #4]
 8004428:	2900      	cmp	r1, #0
 800442a:	dd0d      	ble.n	8004448 <_printf_float+0x1c8>
 800442c:	6121      	str	r1, [r4, #16]
 800442e:	2b00      	cmp	r3, #0
 8004430:	d102      	bne.n	8004438 <_printf_float+0x1b8>
 8004432:	6822      	ldr	r2, [r4, #0]
 8004434:	07d2      	lsls	r2, r2, #31
 8004436:	d502      	bpl.n	800443e <_printf_float+0x1be>
 8004438:	3301      	adds	r3, #1
 800443a:	1859      	adds	r1, r3, r1
 800443c:	6121      	str	r1, [r4, #16]
 800443e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004440:	65a3      	str	r3, [r4, #88]	; 0x58
 8004442:	2300      	movs	r3, #0
 8004444:	930b      	str	r3, [sp, #44]	; 0x2c
 8004446:	e7d8      	b.n	80043fa <_printf_float+0x17a>
 8004448:	2b00      	cmp	r3, #0
 800444a:	d103      	bne.n	8004454 <_printf_float+0x1d4>
 800444c:	2201      	movs	r2, #1
 800444e:	6821      	ldr	r1, [r4, #0]
 8004450:	4211      	tst	r1, r2
 8004452:	d000      	beq.n	8004456 <_printf_float+0x1d6>
 8004454:	1c9a      	adds	r2, r3, #2
 8004456:	6122      	str	r2, [r4, #16]
 8004458:	e7f1      	b.n	800443e <_printf_float+0x1be>
 800445a:	2367      	movs	r3, #103	; 0x67
 800445c:	930a      	str	r3, [sp, #40]	; 0x28
 800445e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004460:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004462:	4293      	cmp	r3, r2
 8004464:	db06      	blt.n	8004474 <_printf_float+0x1f4>
 8004466:	6822      	ldr	r2, [r4, #0]
 8004468:	6123      	str	r3, [r4, #16]
 800446a:	07d2      	lsls	r2, r2, #31
 800446c:	d5e7      	bpl.n	800443e <_printf_float+0x1be>
 800446e:	3301      	adds	r3, #1
 8004470:	6123      	str	r3, [r4, #16]
 8004472:	e7e4      	b.n	800443e <_printf_float+0x1be>
 8004474:	2101      	movs	r1, #1
 8004476:	2b00      	cmp	r3, #0
 8004478:	dc01      	bgt.n	800447e <_printf_float+0x1fe>
 800447a:	1849      	adds	r1, r1, r1
 800447c:	1ac9      	subs	r1, r1, r3
 800447e:	1852      	adds	r2, r2, r1
 8004480:	e7e9      	b.n	8004456 <_printf_float+0x1d6>
 8004482:	6822      	ldr	r2, [r4, #0]
 8004484:	0553      	lsls	r3, r2, #21
 8004486:	d407      	bmi.n	8004498 <_printf_float+0x218>
 8004488:	6923      	ldr	r3, [r4, #16]
 800448a:	002a      	movs	r2, r5
 800448c:	0038      	movs	r0, r7
 800448e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004490:	47b0      	blx	r6
 8004492:	1c43      	adds	r3, r0, #1
 8004494:	d128      	bne.n	80044e8 <_printf_float+0x268>
 8004496:	e751      	b.n	800433c <_printf_float+0xbc>
 8004498:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800449a:	2b65      	cmp	r3, #101	; 0x65
 800449c:	d800      	bhi.n	80044a0 <_printf_float+0x220>
 800449e:	e0e1      	b.n	8004664 <_printf_float+0x3e4>
 80044a0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80044a2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80044a4:	2200      	movs	r2, #0
 80044a6:	2300      	movs	r3, #0
 80044a8:	f7fb ffd0 	bl	800044c <__aeabi_dcmpeq>
 80044ac:	2800      	cmp	r0, #0
 80044ae:	d031      	beq.n	8004514 <_printf_float+0x294>
 80044b0:	2301      	movs	r3, #1
 80044b2:	0038      	movs	r0, r7
 80044b4:	4a34      	ldr	r2, [pc, #208]	; (8004588 <_printf_float+0x308>)
 80044b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80044b8:	47b0      	blx	r6
 80044ba:	1c43      	adds	r3, r0, #1
 80044bc:	d100      	bne.n	80044c0 <_printf_float+0x240>
 80044be:	e73d      	b.n	800433c <_printf_float+0xbc>
 80044c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80044c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80044c4:	4293      	cmp	r3, r2
 80044c6:	db02      	blt.n	80044ce <_printf_float+0x24e>
 80044c8:	6823      	ldr	r3, [r4, #0]
 80044ca:	07db      	lsls	r3, r3, #31
 80044cc:	d50c      	bpl.n	80044e8 <_printf_float+0x268>
 80044ce:	0038      	movs	r0, r7
 80044d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80044d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80044d4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80044d6:	47b0      	blx	r6
 80044d8:	2500      	movs	r5, #0
 80044da:	1c43      	adds	r3, r0, #1
 80044dc:	d100      	bne.n	80044e0 <_printf_float+0x260>
 80044de:	e72d      	b.n	800433c <_printf_float+0xbc>
 80044e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80044e2:	3b01      	subs	r3, #1
 80044e4:	42ab      	cmp	r3, r5
 80044e6:	dc0a      	bgt.n	80044fe <_printf_float+0x27e>
 80044e8:	6823      	ldr	r3, [r4, #0]
 80044ea:	079b      	lsls	r3, r3, #30
 80044ec:	d500      	bpl.n	80044f0 <_printf_float+0x270>
 80044ee:	e106      	b.n	80046fe <_printf_float+0x47e>
 80044f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80044f2:	68e0      	ldr	r0, [r4, #12]
 80044f4:	4298      	cmp	r0, r3
 80044f6:	db00      	blt.n	80044fa <_printf_float+0x27a>
 80044f8:	e722      	b.n	8004340 <_printf_float+0xc0>
 80044fa:	0018      	movs	r0, r3
 80044fc:	e720      	b.n	8004340 <_printf_float+0xc0>
 80044fe:	0022      	movs	r2, r4
 8004500:	2301      	movs	r3, #1
 8004502:	0038      	movs	r0, r7
 8004504:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004506:	321a      	adds	r2, #26
 8004508:	47b0      	blx	r6
 800450a:	1c43      	adds	r3, r0, #1
 800450c:	d100      	bne.n	8004510 <_printf_float+0x290>
 800450e:	e715      	b.n	800433c <_printf_float+0xbc>
 8004510:	3501      	adds	r5, #1
 8004512:	e7e5      	b.n	80044e0 <_printf_float+0x260>
 8004514:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004516:	2b00      	cmp	r3, #0
 8004518:	dc38      	bgt.n	800458c <_printf_float+0x30c>
 800451a:	2301      	movs	r3, #1
 800451c:	0038      	movs	r0, r7
 800451e:	4a1a      	ldr	r2, [pc, #104]	; (8004588 <_printf_float+0x308>)
 8004520:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004522:	47b0      	blx	r6
 8004524:	1c43      	adds	r3, r0, #1
 8004526:	d100      	bne.n	800452a <_printf_float+0x2aa>
 8004528:	e708      	b.n	800433c <_printf_float+0xbc>
 800452a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800452c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800452e:	4313      	orrs	r3, r2
 8004530:	d102      	bne.n	8004538 <_printf_float+0x2b8>
 8004532:	6823      	ldr	r3, [r4, #0]
 8004534:	07db      	lsls	r3, r3, #31
 8004536:	d5d7      	bpl.n	80044e8 <_printf_float+0x268>
 8004538:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800453a:	0038      	movs	r0, r7
 800453c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800453e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004540:	47b0      	blx	r6
 8004542:	1c43      	adds	r3, r0, #1
 8004544:	d100      	bne.n	8004548 <_printf_float+0x2c8>
 8004546:	e6f9      	b.n	800433c <_printf_float+0xbc>
 8004548:	2300      	movs	r3, #0
 800454a:	930a      	str	r3, [sp, #40]	; 0x28
 800454c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800454e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004550:	425b      	negs	r3, r3
 8004552:	4293      	cmp	r3, r2
 8004554:	dc01      	bgt.n	800455a <_printf_float+0x2da>
 8004556:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004558:	e797      	b.n	800448a <_printf_float+0x20a>
 800455a:	0022      	movs	r2, r4
 800455c:	2301      	movs	r3, #1
 800455e:	0038      	movs	r0, r7
 8004560:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004562:	321a      	adds	r2, #26
 8004564:	47b0      	blx	r6
 8004566:	1c43      	adds	r3, r0, #1
 8004568:	d100      	bne.n	800456c <_printf_float+0x2ec>
 800456a:	e6e7      	b.n	800433c <_printf_float+0xbc>
 800456c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800456e:	3301      	adds	r3, #1
 8004570:	e7eb      	b.n	800454a <_printf_float+0x2ca>
 8004572:	46c0      	nop			; (mov r8, r8)
 8004574:	7fefffff 	.word	0x7fefffff
 8004578:	08006dcc 	.word	0x08006dcc
 800457c:	08006dd0 	.word	0x08006dd0
 8004580:	08006dd4 	.word	0x08006dd4
 8004584:	08006dd8 	.word	0x08006dd8
 8004588:	08006ddc 	.word	0x08006ddc
 800458c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800458e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004590:	920a      	str	r2, [sp, #40]	; 0x28
 8004592:	429a      	cmp	r2, r3
 8004594:	dd00      	ble.n	8004598 <_printf_float+0x318>
 8004596:	930a      	str	r3, [sp, #40]	; 0x28
 8004598:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800459a:	2b00      	cmp	r3, #0
 800459c:	dc3c      	bgt.n	8004618 <_printf_float+0x398>
 800459e:	2300      	movs	r3, #0
 80045a0:	930d      	str	r3, [sp, #52]	; 0x34
 80045a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80045a4:	43db      	mvns	r3, r3
 80045a6:	17db      	asrs	r3, r3, #31
 80045a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80045aa:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80045ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80045ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80045b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80045b2:	4013      	ands	r3, r2
 80045b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80045b6:	1ad3      	subs	r3, r2, r3
 80045b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80045ba:	4293      	cmp	r3, r2
 80045bc:	dc34      	bgt.n	8004628 <_printf_float+0x3a8>
 80045be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80045c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80045c2:	4293      	cmp	r3, r2
 80045c4:	db3d      	blt.n	8004642 <_printf_float+0x3c2>
 80045c6:	6823      	ldr	r3, [r4, #0]
 80045c8:	07db      	lsls	r3, r3, #31
 80045ca:	d43a      	bmi.n	8004642 <_printf_float+0x3c2>
 80045cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80045ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80045d0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80045d2:	1ad3      	subs	r3, r2, r3
 80045d4:	1a52      	subs	r2, r2, r1
 80045d6:	920a      	str	r2, [sp, #40]	; 0x28
 80045d8:	429a      	cmp	r2, r3
 80045da:	dd00      	ble.n	80045de <_printf_float+0x35e>
 80045dc:	930a      	str	r3, [sp, #40]	; 0x28
 80045de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80045e0:	2b00      	cmp	r3, #0
 80045e2:	dc36      	bgt.n	8004652 <_printf_float+0x3d2>
 80045e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80045e6:	2500      	movs	r5, #0
 80045e8:	43db      	mvns	r3, r3
 80045ea:	17db      	asrs	r3, r3, #31
 80045ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80045ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80045f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80045f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80045f4:	1a9b      	subs	r3, r3, r2
 80045f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80045f8:	400a      	ands	r2, r1
 80045fa:	1a9b      	subs	r3, r3, r2
 80045fc:	42ab      	cmp	r3, r5
 80045fe:	dc00      	bgt.n	8004602 <_printf_float+0x382>
 8004600:	e772      	b.n	80044e8 <_printf_float+0x268>
 8004602:	0022      	movs	r2, r4
 8004604:	2301      	movs	r3, #1
 8004606:	0038      	movs	r0, r7
 8004608:	9909      	ldr	r1, [sp, #36]	; 0x24
 800460a:	321a      	adds	r2, #26
 800460c:	47b0      	blx	r6
 800460e:	1c43      	adds	r3, r0, #1
 8004610:	d100      	bne.n	8004614 <_printf_float+0x394>
 8004612:	e693      	b.n	800433c <_printf_float+0xbc>
 8004614:	3501      	adds	r5, #1
 8004616:	e7ea      	b.n	80045ee <_printf_float+0x36e>
 8004618:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800461a:	002a      	movs	r2, r5
 800461c:	0038      	movs	r0, r7
 800461e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004620:	47b0      	blx	r6
 8004622:	1c43      	adds	r3, r0, #1
 8004624:	d1bb      	bne.n	800459e <_printf_float+0x31e>
 8004626:	e689      	b.n	800433c <_printf_float+0xbc>
 8004628:	0022      	movs	r2, r4
 800462a:	2301      	movs	r3, #1
 800462c:	0038      	movs	r0, r7
 800462e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004630:	321a      	adds	r2, #26
 8004632:	47b0      	blx	r6
 8004634:	1c43      	adds	r3, r0, #1
 8004636:	d100      	bne.n	800463a <_printf_float+0x3ba>
 8004638:	e680      	b.n	800433c <_printf_float+0xbc>
 800463a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800463c:	3301      	adds	r3, #1
 800463e:	930d      	str	r3, [sp, #52]	; 0x34
 8004640:	e7b3      	b.n	80045aa <_printf_float+0x32a>
 8004642:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004644:	0038      	movs	r0, r7
 8004646:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004648:	9909      	ldr	r1, [sp, #36]	; 0x24
 800464a:	47b0      	blx	r6
 800464c:	1c43      	adds	r3, r0, #1
 800464e:	d1bd      	bne.n	80045cc <_printf_float+0x34c>
 8004650:	e674      	b.n	800433c <_printf_float+0xbc>
 8004652:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004654:	0038      	movs	r0, r7
 8004656:	18ea      	adds	r2, r5, r3
 8004658:	9909      	ldr	r1, [sp, #36]	; 0x24
 800465a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800465c:	47b0      	blx	r6
 800465e:	1c43      	adds	r3, r0, #1
 8004660:	d1c0      	bne.n	80045e4 <_printf_float+0x364>
 8004662:	e66b      	b.n	800433c <_printf_float+0xbc>
 8004664:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004666:	2b01      	cmp	r3, #1
 8004668:	dc02      	bgt.n	8004670 <_printf_float+0x3f0>
 800466a:	2301      	movs	r3, #1
 800466c:	421a      	tst	r2, r3
 800466e:	d034      	beq.n	80046da <_printf_float+0x45a>
 8004670:	2301      	movs	r3, #1
 8004672:	002a      	movs	r2, r5
 8004674:	0038      	movs	r0, r7
 8004676:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004678:	47b0      	blx	r6
 800467a:	1c43      	adds	r3, r0, #1
 800467c:	d100      	bne.n	8004680 <_printf_float+0x400>
 800467e:	e65d      	b.n	800433c <_printf_float+0xbc>
 8004680:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004682:	0038      	movs	r0, r7
 8004684:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004686:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004688:	47b0      	blx	r6
 800468a:	1c43      	adds	r3, r0, #1
 800468c:	d100      	bne.n	8004690 <_printf_float+0x410>
 800468e:	e655      	b.n	800433c <_printf_float+0xbc>
 8004690:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004692:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004694:	2200      	movs	r2, #0
 8004696:	2300      	movs	r3, #0
 8004698:	f7fb fed8 	bl	800044c <__aeabi_dcmpeq>
 800469c:	2800      	cmp	r0, #0
 800469e:	d11a      	bne.n	80046d6 <_printf_float+0x456>
 80046a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80046a2:	1c6a      	adds	r2, r5, #1
 80046a4:	3b01      	subs	r3, #1
 80046a6:	0038      	movs	r0, r7
 80046a8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80046aa:	47b0      	blx	r6
 80046ac:	1c43      	adds	r3, r0, #1
 80046ae:	d10e      	bne.n	80046ce <_printf_float+0x44e>
 80046b0:	e644      	b.n	800433c <_printf_float+0xbc>
 80046b2:	0022      	movs	r2, r4
 80046b4:	2301      	movs	r3, #1
 80046b6:	0038      	movs	r0, r7
 80046b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80046ba:	321a      	adds	r2, #26
 80046bc:	47b0      	blx	r6
 80046be:	1c43      	adds	r3, r0, #1
 80046c0:	d100      	bne.n	80046c4 <_printf_float+0x444>
 80046c2:	e63b      	b.n	800433c <_printf_float+0xbc>
 80046c4:	3501      	adds	r5, #1
 80046c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80046c8:	3b01      	subs	r3, #1
 80046ca:	42ab      	cmp	r3, r5
 80046cc:	dcf1      	bgt.n	80046b2 <_printf_float+0x432>
 80046ce:	0022      	movs	r2, r4
 80046d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80046d2:	3250      	adds	r2, #80	; 0x50
 80046d4:	e6da      	b.n	800448c <_printf_float+0x20c>
 80046d6:	2500      	movs	r5, #0
 80046d8:	e7f5      	b.n	80046c6 <_printf_float+0x446>
 80046da:	002a      	movs	r2, r5
 80046dc:	e7e3      	b.n	80046a6 <_printf_float+0x426>
 80046de:	0022      	movs	r2, r4
 80046e0:	2301      	movs	r3, #1
 80046e2:	0038      	movs	r0, r7
 80046e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80046e6:	3219      	adds	r2, #25
 80046e8:	47b0      	blx	r6
 80046ea:	1c43      	adds	r3, r0, #1
 80046ec:	d100      	bne.n	80046f0 <_printf_float+0x470>
 80046ee:	e625      	b.n	800433c <_printf_float+0xbc>
 80046f0:	3501      	adds	r5, #1
 80046f2:	68e3      	ldr	r3, [r4, #12]
 80046f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80046f6:	1a9b      	subs	r3, r3, r2
 80046f8:	42ab      	cmp	r3, r5
 80046fa:	dcf0      	bgt.n	80046de <_printf_float+0x45e>
 80046fc:	e6f8      	b.n	80044f0 <_printf_float+0x270>
 80046fe:	2500      	movs	r5, #0
 8004700:	e7f7      	b.n	80046f2 <_printf_float+0x472>
 8004702:	46c0      	nop			; (mov r8, r8)

08004704 <_printf_common>:
 8004704:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004706:	0015      	movs	r5, r2
 8004708:	9301      	str	r3, [sp, #4]
 800470a:	688a      	ldr	r2, [r1, #8]
 800470c:	690b      	ldr	r3, [r1, #16]
 800470e:	000c      	movs	r4, r1
 8004710:	9000      	str	r0, [sp, #0]
 8004712:	4293      	cmp	r3, r2
 8004714:	da00      	bge.n	8004718 <_printf_common+0x14>
 8004716:	0013      	movs	r3, r2
 8004718:	0022      	movs	r2, r4
 800471a:	602b      	str	r3, [r5, #0]
 800471c:	3243      	adds	r2, #67	; 0x43
 800471e:	7812      	ldrb	r2, [r2, #0]
 8004720:	2a00      	cmp	r2, #0
 8004722:	d001      	beq.n	8004728 <_printf_common+0x24>
 8004724:	3301      	adds	r3, #1
 8004726:	602b      	str	r3, [r5, #0]
 8004728:	6823      	ldr	r3, [r4, #0]
 800472a:	069b      	lsls	r3, r3, #26
 800472c:	d502      	bpl.n	8004734 <_printf_common+0x30>
 800472e:	682b      	ldr	r3, [r5, #0]
 8004730:	3302      	adds	r3, #2
 8004732:	602b      	str	r3, [r5, #0]
 8004734:	6822      	ldr	r2, [r4, #0]
 8004736:	2306      	movs	r3, #6
 8004738:	0017      	movs	r7, r2
 800473a:	401f      	ands	r7, r3
 800473c:	421a      	tst	r2, r3
 800473e:	d027      	beq.n	8004790 <_printf_common+0x8c>
 8004740:	0023      	movs	r3, r4
 8004742:	3343      	adds	r3, #67	; 0x43
 8004744:	781b      	ldrb	r3, [r3, #0]
 8004746:	1e5a      	subs	r2, r3, #1
 8004748:	4193      	sbcs	r3, r2
 800474a:	6822      	ldr	r2, [r4, #0]
 800474c:	0692      	lsls	r2, r2, #26
 800474e:	d430      	bmi.n	80047b2 <_printf_common+0xae>
 8004750:	0022      	movs	r2, r4
 8004752:	9901      	ldr	r1, [sp, #4]
 8004754:	9800      	ldr	r0, [sp, #0]
 8004756:	9e08      	ldr	r6, [sp, #32]
 8004758:	3243      	adds	r2, #67	; 0x43
 800475a:	47b0      	blx	r6
 800475c:	1c43      	adds	r3, r0, #1
 800475e:	d025      	beq.n	80047ac <_printf_common+0xa8>
 8004760:	2306      	movs	r3, #6
 8004762:	6820      	ldr	r0, [r4, #0]
 8004764:	682a      	ldr	r2, [r5, #0]
 8004766:	68e1      	ldr	r1, [r4, #12]
 8004768:	2500      	movs	r5, #0
 800476a:	4003      	ands	r3, r0
 800476c:	2b04      	cmp	r3, #4
 800476e:	d103      	bne.n	8004778 <_printf_common+0x74>
 8004770:	1a8d      	subs	r5, r1, r2
 8004772:	43eb      	mvns	r3, r5
 8004774:	17db      	asrs	r3, r3, #31
 8004776:	401d      	ands	r5, r3
 8004778:	68a3      	ldr	r3, [r4, #8]
 800477a:	6922      	ldr	r2, [r4, #16]
 800477c:	4293      	cmp	r3, r2
 800477e:	dd01      	ble.n	8004784 <_printf_common+0x80>
 8004780:	1a9b      	subs	r3, r3, r2
 8004782:	18ed      	adds	r5, r5, r3
 8004784:	2700      	movs	r7, #0
 8004786:	42bd      	cmp	r5, r7
 8004788:	d120      	bne.n	80047cc <_printf_common+0xc8>
 800478a:	2000      	movs	r0, #0
 800478c:	e010      	b.n	80047b0 <_printf_common+0xac>
 800478e:	3701      	adds	r7, #1
 8004790:	68e3      	ldr	r3, [r4, #12]
 8004792:	682a      	ldr	r2, [r5, #0]
 8004794:	1a9b      	subs	r3, r3, r2
 8004796:	42bb      	cmp	r3, r7
 8004798:	ddd2      	ble.n	8004740 <_printf_common+0x3c>
 800479a:	0022      	movs	r2, r4
 800479c:	2301      	movs	r3, #1
 800479e:	9901      	ldr	r1, [sp, #4]
 80047a0:	9800      	ldr	r0, [sp, #0]
 80047a2:	9e08      	ldr	r6, [sp, #32]
 80047a4:	3219      	adds	r2, #25
 80047a6:	47b0      	blx	r6
 80047a8:	1c43      	adds	r3, r0, #1
 80047aa:	d1f0      	bne.n	800478e <_printf_common+0x8a>
 80047ac:	2001      	movs	r0, #1
 80047ae:	4240      	negs	r0, r0
 80047b0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80047b2:	2030      	movs	r0, #48	; 0x30
 80047b4:	18e1      	adds	r1, r4, r3
 80047b6:	3143      	adds	r1, #67	; 0x43
 80047b8:	7008      	strb	r0, [r1, #0]
 80047ba:	0021      	movs	r1, r4
 80047bc:	1c5a      	adds	r2, r3, #1
 80047be:	3145      	adds	r1, #69	; 0x45
 80047c0:	7809      	ldrb	r1, [r1, #0]
 80047c2:	18a2      	adds	r2, r4, r2
 80047c4:	3243      	adds	r2, #67	; 0x43
 80047c6:	3302      	adds	r3, #2
 80047c8:	7011      	strb	r1, [r2, #0]
 80047ca:	e7c1      	b.n	8004750 <_printf_common+0x4c>
 80047cc:	0022      	movs	r2, r4
 80047ce:	2301      	movs	r3, #1
 80047d0:	9901      	ldr	r1, [sp, #4]
 80047d2:	9800      	ldr	r0, [sp, #0]
 80047d4:	9e08      	ldr	r6, [sp, #32]
 80047d6:	321a      	adds	r2, #26
 80047d8:	47b0      	blx	r6
 80047da:	1c43      	adds	r3, r0, #1
 80047dc:	d0e6      	beq.n	80047ac <_printf_common+0xa8>
 80047de:	3701      	adds	r7, #1
 80047e0:	e7d1      	b.n	8004786 <_printf_common+0x82>
	...

080047e4 <_printf_i>:
 80047e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80047e6:	b08b      	sub	sp, #44	; 0x2c
 80047e8:	9206      	str	r2, [sp, #24]
 80047ea:	000a      	movs	r2, r1
 80047ec:	3243      	adds	r2, #67	; 0x43
 80047ee:	9307      	str	r3, [sp, #28]
 80047f0:	9005      	str	r0, [sp, #20]
 80047f2:	9204      	str	r2, [sp, #16]
 80047f4:	7e0a      	ldrb	r2, [r1, #24]
 80047f6:	000c      	movs	r4, r1
 80047f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80047fa:	2a78      	cmp	r2, #120	; 0x78
 80047fc:	d807      	bhi.n	800480e <_printf_i+0x2a>
 80047fe:	2a62      	cmp	r2, #98	; 0x62
 8004800:	d809      	bhi.n	8004816 <_printf_i+0x32>
 8004802:	2a00      	cmp	r2, #0
 8004804:	d100      	bne.n	8004808 <_printf_i+0x24>
 8004806:	e0c1      	b.n	800498c <_printf_i+0x1a8>
 8004808:	2a58      	cmp	r2, #88	; 0x58
 800480a:	d100      	bne.n	800480e <_printf_i+0x2a>
 800480c:	e08c      	b.n	8004928 <_printf_i+0x144>
 800480e:	0026      	movs	r6, r4
 8004810:	3642      	adds	r6, #66	; 0x42
 8004812:	7032      	strb	r2, [r6, #0]
 8004814:	e022      	b.n	800485c <_printf_i+0x78>
 8004816:	0010      	movs	r0, r2
 8004818:	3863      	subs	r0, #99	; 0x63
 800481a:	2815      	cmp	r0, #21
 800481c:	d8f7      	bhi.n	800480e <_printf_i+0x2a>
 800481e:	f7fb fc85 	bl	800012c <__gnu_thumb1_case_shi>
 8004822:	0016      	.short	0x0016
 8004824:	fff6001f 	.word	0xfff6001f
 8004828:	fff6fff6 	.word	0xfff6fff6
 800482c:	001ffff6 	.word	0x001ffff6
 8004830:	fff6fff6 	.word	0xfff6fff6
 8004834:	fff6fff6 	.word	0xfff6fff6
 8004838:	003600a8 	.word	0x003600a8
 800483c:	fff6009a 	.word	0xfff6009a
 8004840:	00b9fff6 	.word	0x00b9fff6
 8004844:	0036fff6 	.word	0x0036fff6
 8004848:	fff6fff6 	.word	0xfff6fff6
 800484c:	009e      	.short	0x009e
 800484e:	0026      	movs	r6, r4
 8004850:	681a      	ldr	r2, [r3, #0]
 8004852:	3642      	adds	r6, #66	; 0x42
 8004854:	1d11      	adds	r1, r2, #4
 8004856:	6019      	str	r1, [r3, #0]
 8004858:	6813      	ldr	r3, [r2, #0]
 800485a:	7033      	strb	r3, [r6, #0]
 800485c:	2301      	movs	r3, #1
 800485e:	e0a7      	b.n	80049b0 <_printf_i+0x1cc>
 8004860:	6808      	ldr	r0, [r1, #0]
 8004862:	6819      	ldr	r1, [r3, #0]
 8004864:	1d0a      	adds	r2, r1, #4
 8004866:	0605      	lsls	r5, r0, #24
 8004868:	d50b      	bpl.n	8004882 <_printf_i+0x9e>
 800486a:	680d      	ldr	r5, [r1, #0]
 800486c:	601a      	str	r2, [r3, #0]
 800486e:	2d00      	cmp	r5, #0
 8004870:	da03      	bge.n	800487a <_printf_i+0x96>
 8004872:	232d      	movs	r3, #45	; 0x2d
 8004874:	9a04      	ldr	r2, [sp, #16]
 8004876:	426d      	negs	r5, r5
 8004878:	7013      	strb	r3, [r2, #0]
 800487a:	4b61      	ldr	r3, [pc, #388]	; (8004a00 <_printf_i+0x21c>)
 800487c:	270a      	movs	r7, #10
 800487e:	9303      	str	r3, [sp, #12]
 8004880:	e01b      	b.n	80048ba <_printf_i+0xd6>
 8004882:	680d      	ldr	r5, [r1, #0]
 8004884:	601a      	str	r2, [r3, #0]
 8004886:	0641      	lsls	r1, r0, #25
 8004888:	d5f1      	bpl.n	800486e <_printf_i+0x8a>
 800488a:	b22d      	sxth	r5, r5
 800488c:	e7ef      	b.n	800486e <_printf_i+0x8a>
 800488e:	680d      	ldr	r5, [r1, #0]
 8004890:	6819      	ldr	r1, [r3, #0]
 8004892:	1d08      	adds	r0, r1, #4
 8004894:	6018      	str	r0, [r3, #0]
 8004896:	062e      	lsls	r6, r5, #24
 8004898:	d501      	bpl.n	800489e <_printf_i+0xba>
 800489a:	680d      	ldr	r5, [r1, #0]
 800489c:	e003      	b.n	80048a6 <_printf_i+0xc2>
 800489e:	066d      	lsls	r5, r5, #25
 80048a0:	d5fb      	bpl.n	800489a <_printf_i+0xb6>
 80048a2:	680d      	ldr	r5, [r1, #0]
 80048a4:	b2ad      	uxth	r5, r5
 80048a6:	4b56      	ldr	r3, [pc, #344]	; (8004a00 <_printf_i+0x21c>)
 80048a8:	2708      	movs	r7, #8
 80048aa:	9303      	str	r3, [sp, #12]
 80048ac:	2a6f      	cmp	r2, #111	; 0x6f
 80048ae:	d000      	beq.n	80048b2 <_printf_i+0xce>
 80048b0:	3702      	adds	r7, #2
 80048b2:	0023      	movs	r3, r4
 80048b4:	2200      	movs	r2, #0
 80048b6:	3343      	adds	r3, #67	; 0x43
 80048b8:	701a      	strb	r2, [r3, #0]
 80048ba:	6863      	ldr	r3, [r4, #4]
 80048bc:	60a3      	str	r3, [r4, #8]
 80048be:	2b00      	cmp	r3, #0
 80048c0:	db03      	blt.n	80048ca <_printf_i+0xe6>
 80048c2:	2204      	movs	r2, #4
 80048c4:	6821      	ldr	r1, [r4, #0]
 80048c6:	4391      	bics	r1, r2
 80048c8:	6021      	str	r1, [r4, #0]
 80048ca:	2d00      	cmp	r5, #0
 80048cc:	d102      	bne.n	80048d4 <_printf_i+0xf0>
 80048ce:	9e04      	ldr	r6, [sp, #16]
 80048d0:	2b00      	cmp	r3, #0
 80048d2:	d00c      	beq.n	80048ee <_printf_i+0x10a>
 80048d4:	9e04      	ldr	r6, [sp, #16]
 80048d6:	0028      	movs	r0, r5
 80048d8:	0039      	movs	r1, r7
 80048da:	f7fb fcb7 	bl	800024c <__aeabi_uidivmod>
 80048de:	9b03      	ldr	r3, [sp, #12]
 80048e0:	3e01      	subs	r6, #1
 80048e2:	5c5b      	ldrb	r3, [r3, r1]
 80048e4:	7033      	strb	r3, [r6, #0]
 80048e6:	002b      	movs	r3, r5
 80048e8:	0005      	movs	r5, r0
 80048ea:	429f      	cmp	r7, r3
 80048ec:	d9f3      	bls.n	80048d6 <_printf_i+0xf2>
 80048ee:	2f08      	cmp	r7, #8
 80048f0:	d109      	bne.n	8004906 <_printf_i+0x122>
 80048f2:	6823      	ldr	r3, [r4, #0]
 80048f4:	07db      	lsls	r3, r3, #31
 80048f6:	d506      	bpl.n	8004906 <_printf_i+0x122>
 80048f8:	6863      	ldr	r3, [r4, #4]
 80048fa:	6922      	ldr	r2, [r4, #16]
 80048fc:	4293      	cmp	r3, r2
 80048fe:	dc02      	bgt.n	8004906 <_printf_i+0x122>
 8004900:	2330      	movs	r3, #48	; 0x30
 8004902:	3e01      	subs	r6, #1
 8004904:	7033      	strb	r3, [r6, #0]
 8004906:	9b04      	ldr	r3, [sp, #16]
 8004908:	1b9b      	subs	r3, r3, r6
 800490a:	6123      	str	r3, [r4, #16]
 800490c:	9b07      	ldr	r3, [sp, #28]
 800490e:	0021      	movs	r1, r4
 8004910:	9300      	str	r3, [sp, #0]
 8004912:	9805      	ldr	r0, [sp, #20]
 8004914:	9b06      	ldr	r3, [sp, #24]
 8004916:	aa09      	add	r2, sp, #36	; 0x24
 8004918:	f7ff fef4 	bl	8004704 <_printf_common>
 800491c:	1c43      	adds	r3, r0, #1
 800491e:	d14c      	bne.n	80049ba <_printf_i+0x1d6>
 8004920:	2001      	movs	r0, #1
 8004922:	4240      	negs	r0, r0
 8004924:	b00b      	add	sp, #44	; 0x2c
 8004926:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004928:	3145      	adds	r1, #69	; 0x45
 800492a:	700a      	strb	r2, [r1, #0]
 800492c:	4a34      	ldr	r2, [pc, #208]	; (8004a00 <_printf_i+0x21c>)
 800492e:	9203      	str	r2, [sp, #12]
 8004930:	681a      	ldr	r2, [r3, #0]
 8004932:	6821      	ldr	r1, [r4, #0]
 8004934:	ca20      	ldmia	r2!, {r5}
 8004936:	601a      	str	r2, [r3, #0]
 8004938:	0608      	lsls	r0, r1, #24
 800493a:	d516      	bpl.n	800496a <_printf_i+0x186>
 800493c:	07cb      	lsls	r3, r1, #31
 800493e:	d502      	bpl.n	8004946 <_printf_i+0x162>
 8004940:	2320      	movs	r3, #32
 8004942:	4319      	orrs	r1, r3
 8004944:	6021      	str	r1, [r4, #0]
 8004946:	2710      	movs	r7, #16
 8004948:	2d00      	cmp	r5, #0
 800494a:	d1b2      	bne.n	80048b2 <_printf_i+0xce>
 800494c:	2320      	movs	r3, #32
 800494e:	6822      	ldr	r2, [r4, #0]
 8004950:	439a      	bics	r2, r3
 8004952:	6022      	str	r2, [r4, #0]
 8004954:	e7ad      	b.n	80048b2 <_printf_i+0xce>
 8004956:	2220      	movs	r2, #32
 8004958:	6809      	ldr	r1, [r1, #0]
 800495a:	430a      	orrs	r2, r1
 800495c:	6022      	str	r2, [r4, #0]
 800495e:	0022      	movs	r2, r4
 8004960:	2178      	movs	r1, #120	; 0x78
 8004962:	3245      	adds	r2, #69	; 0x45
 8004964:	7011      	strb	r1, [r2, #0]
 8004966:	4a27      	ldr	r2, [pc, #156]	; (8004a04 <_printf_i+0x220>)
 8004968:	e7e1      	b.n	800492e <_printf_i+0x14a>
 800496a:	0648      	lsls	r0, r1, #25
 800496c:	d5e6      	bpl.n	800493c <_printf_i+0x158>
 800496e:	b2ad      	uxth	r5, r5
 8004970:	e7e4      	b.n	800493c <_printf_i+0x158>
 8004972:	681a      	ldr	r2, [r3, #0]
 8004974:	680d      	ldr	r5, [r1, #0]
 8004976:	1d10      	adds	r0, r2, #4
 8004978:	6949      	ldr	r1, [r1, #20]
 800497a:	6018      	str	r0, [r3, #0]
 800497c:	6813      	ldr	r3, [r2, #0]
 800497e:	062e      	lsls	r6, r5, #24
 8004980:	d501      	bpl.n	8004986 <_printf_i+0x1a2>
 8004982:	6019      	str	r1, [r3, #0]
 8004984:	e002      	b.n	800498c <_printf_i+0x1a8>
 8004986:	066d      	lsls	r5, r5, #25
 8004988:	d5fb      	bpl.n	8004982 <_printf_i+0x19e>
 800498a:	8019      	strh	r1, [r3, #0]
 800498c:	2300      	movs	r3, #0
 800498e:	9e04      	ldr	r6, [sp, #16]
 8004990:	6123      	str	r3, [r4, #16]
 8004992:	e7bb      	b.n	800490c <_printf_i+0x128>
 8004994:	681a      	ldr	r2, [r3, #0]
 8004996:	1d11      	adds	r1, r2, #4
 8004998:	6019      	str	r1, [r3, #0]
 800499a:	6816      	ldr	r6, [r2, #0]
 800499c:	2100      	movs	r1, #0
 800499e:	0030      	movs	r0, r6
 80049a0:	6862      	ldr	r2, [r4, #4]
 80049a2:	f001 f805 	bl	80059b0 <memchr>
 80049a6:	2800      	cmp	r0, #0
 80049a8:	d001      	beq.n	80049ae <_printf_i+0x1ca>
 80049aa:	1b80      	subs	r0, r0, r6
 80049ac:	6060      	str	r0, [r4, #4]
 80049ae:	6863      	ldr	r3, [r4, #4]
 80049b0:	6123      	str	r3, [r4, #16]
 80049b2:	2300      	movs	r3, #0
 80049b4:	9a04      	ldr	r2, [sp, #16]
 80049b6:	7013      	strb	r3, [r2, #0]
 80049b8:	e7a8      	b.n	800490c <_printf_i+0x128>
 80049ba:	6923      	ldr	r3, [r4, #16]
 80049bc:	0032      	movs	r2, r6
 80049be:	9906      	ldr	r1, [sp, #24]
 80049c0:	9805      	ldr	r0, [sp, #20]
 80049c2:	9d07      	ldr	r5, [sp, #28]
 80049c4:	47a8      	blx	r5
 80049c6:	1c43      	adds	r3, r0, #1
 80049c8:	d0aa      	beq.n	8004920 <_printf_i+0x13c>
 80049ca:	6823      	ldr	r3, [r4, #0]
 80049cc:	079b      	lsls	r3, r3, #30
 80049ce:	d415      	bmi.n	80049fc <_printf_i+0x218>
 80049d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80049d2:	68e0      	ldr	r0, [r4, #12]
 80049d4:	4298      	cmp	r0, r3
 80049d6:	daa5      	bge.n	8004924 <_printf_i+0x140>
 80049d8:	0018      	movs	r0, r3
 80049da:	e7a3      	b.n	8004924 <_printf_i+0x140>
 80049dc:	0022      	movs	r2, r4
 80049de:	2301      	movs	r3, #1
 80049e0:	9906      	ldr	r1, [sp, #24]
 80049e2:	9805      	ldr	r0, [sp, #20]
 80049e4:	9e07      	ldr	r6, [sp, #28]
 80049e6:	3219      	adds	r2, #25
 80049e8:	47b0      	blx	r6
 80049ea:	1c43      	adds	r3, r0, #1
 80049ec:	d098      	beq.n	8004920 <_printf_i+0x13c>
 80049ee:	3501      	adds	r5, #1
 80049f0:	68e3      	ldr	r3, [r4, #12]
 80049f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80049f4:	1a9b      	subs	r3, r3, r2
 80049f6:	42ab      	cmp	r3, r5
 80049f8:	dcf0      	bgt.n	80049dc <_printf_i+0x1f8>
 80049fa:	e7e9      	b.n	80049d0 <_printf_i+0x1ec>
 80049fc:	2500      	movs	r5, #0
 80049fe:	e7f7      	b.n	80049f0 <_printf_i+0x20c>
 8004a00:	08006dde 	.word	0x08006dde
 8004a04:	08006def 	.word	0x08006def

08004a08 <iprintf>:
 8004a08:	b40f      	push	{r0, r1, r2, r3}
 8004a0a:	4b0b      	ldr	r3, [pc, #44]	; (8004a38 <iprintf+0x30>)
 8004a0c:	b513      	push	{r0, r1, r4, lr}
 8004a0e:	681c      	ldr	r4, [r3, #0]
 8004a10:	2c00      	cmp	r4, #0
 8004a12:	d005      	beq.n	8004a20 <iprintf+0x18>
 8004a14:	69a3      	ldr	r3, [r4, #24]
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d102      	bne.n	8004a20 <iprintf+0x18>
 8004a1a:	0020      	movs	r0, r4
 8004a1c:	f000 ff16 	bl	800584c <__sinit>
 8004a20:	ab05      	add	r3, sp, #20
 8004a22:	0020      	movs	r0, r4
 8004a24:	9a04      	ldr	r2, [sp, #16]
 8004a26:	68a1      	ldr	r1, [r4, #8]
 8004a28:	9301      	str	r3, [sp, #4]
 8004a2a:	f001 fca7 	bl	800637c <_vfiprintf_r>
 8004a2e:	bc16      	pop	{r1, r2, r4}
 8004a30:	bc08      	pop	{r3}
 8004a32:	b004      	add	sp, #16
 8004a34:	4718      	bx	r3
 8004a36:	46c0      	nop			; (mov r8, r8)
 8004a38:	2000000c 	.word	0x2000000c

08004a3c <quorem>:
 8004a3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a3e:	0006      	movs	r6, r0
 8004a40:	690b      	ldr	r3, [r1, #16]
 8004a42:	6932      	ldr	r2, [r6, #16]
 8004a44:	b087      	sub	sp, #28
 8004a46:	2000      	movs	r0, #0
 8004a48:	9103      	str	r1, [sp, #12]
 8004a4a:	429a      	cmp	r2, r3
 8004a4c:	db65      	blt.n	8004b1a <quorem+0xde>
 8004a4e:	3b01      	subs	r3, #1
 8004a50:	009c      	lsls	r4, r3, #2
 8004a52:	9300      	str	r3, [sp, #0]
 8004a54:	000b      	movs	r3, r1
 8004a56:	3314      	adds	r3, #20
 8004a58:	9305      	str	r3, [sp, #20]
 8004a5a:	191b      	adds	r3, r3, r4
 8004a5c:	9304      	str	r3, [sp, #16]
 8004a5e:	0033      	movs	r3, r6
 8004a60:	3314      	adds	r3, #20
 8004a62:	9302      	str	r3, [sp, #8]
 8004a64:	191c      	adds	r4, r3, r4
 8004a66:	9b04      	ldr	r3, [sp, #16]
 8004a68:	6827      	ldr	r7, [r4, #0]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	0038      	movs	r0, r7
 8004a6e:	1c5d      	adds	r5, r3, #1
 8004a70:	0029      	movs	r1, r5
 8004a72:	9301      	str	r3, [sp, #4]
 8004a74:	f7fb fb64 	bl	8000140 <__udivsi3>
 8004a78:	9001      	str	r0, [sp, #4]
 8004a7a:	42af      	cmp	r7, r5
 8004a7c:	d324      	bcc.n	8004ac8 <quorem+0x8c>
 8004a7e:	2500      	movs	r5, #0
 8004a80:	46ac      	mov	ip, r5
 8004a82:	9802      	ldr	r0, [sp, #8]
 8004a84:	9f05      	ldr	r7, [sp, #20]
 8004a86:	cf08      	ldmia	r7!, {r3}
 8004a88:	9a01      	ldr	r2, [sp, #4]
 8004a8a:	b299      	uxth	r1, r3
 8004a8c:	4351      	muls	r1, r2
 8004a8e:	0c1b      	lsrs	r3, r3, #16
 8004a90:	4353      	muls	r3, r2
 8004a92:	1949      	adds	r1, r1, r5
 8004a94:	0c0a      	lsrs	r2, r1, #16
 8004a96:	189b      	adds	r3, r3, r2
 8004a98:	6802      	ldr	r2, [r0, #0]
 8004a9a:	b289      	uxth	r1, r1
 8004a9c:	b292      	uxth	r2, r2
 8004a9e:	4462      	add	r2, ip
 8004aa0:	1a52      	subs	r2, r2, r1
 8004aa2:	6801      	ldr	r1, [r0, #0]
 8004aa4:	0c1d      	lsrs	r5, r3, #16
 8004aa6:	0c09      	lsrs	r1, r1, #16
 8004aa8:	b29b      	uxth	r3, r3
 8004aaa:	1acb      	subs	r3, r1, r3
 8004aac:	1411      	asrs	r1, r2, #16
 8004aae:	185b      	adds	r3, r3, r1
 8004ab0:	1419      	asrs	r1, r3, #16
 8004ab2:	b292      	uxth	r2, r2
 8004ab4:	041b      	lsls	r3, r3, #16
 8004ab6:	431a      	orrs	r2, r3
 8004ab8:	9b04      	ldr	r3, [sp, #16]
 8004aba:	468c      	mov	ip, r1
 8004abc:	c004      	stmia	r0!, {r2}
 8004abe:	42bb      	cmp	r3, r7
 8004ac0:	d2e1      	bcs.n	8004a86 <quorem+0x4a>
 8004ac2:	6823      	ldr	r3, [r4, #0]
 8004ac4:	2b00      	cmp	r3, #0
 8004ac6:	d030      	beq.n	8004b2a <quorem+0xee>
 8004ac8:	0030      	movs	r0, r6
 8004aca:	9903      	ldr	r1, [sp, #12]
 8004acc:	f001 fa08 	bl	8005ee0 <__mcmp>
 8004ad0:	2800      	cmp	r0, #0
 8004ad2:	db21      	blt.n	8004b18 <quorem+0xdc>
 8004ad4:	0030      	movs	r0, r6
 8004ad6:	2400      	movs	r4, #0
 8004ad8:	9b01      	ldr	r3, [sp, #4]
 8004ada:	9903      	ldr	r1, [sp, #12]
 8004adc:	3301      	adds	r3, #1
 8004ade:	9301      	str	r3, [sp, #4]
 8004ae0:	3014      	adds	r0, #20
 8004ae2:	3114      	adds	r1, #20
 8004ae4:	6803      	ldr	r3, [r0, #0]
 8004ae6:	c920      	ldmia	r1!, {r5}
 8004ae8:	b29a      	uxth	r2, r3
 8004aea:	1914      	adds	r4, r2, r4
 8004aec:	b2aa      	uxth	r2, r5
 8004aee:	1aa2      	subs	r2, r4, r2
 8004af0:	0c1b      	lsrs	r3, r3, #16
 8004af2:	0c2d      	lsrs	r5, r5, #16
 8004af4:	1414      	asrs	r4, r2, #16
 8004af6:	1b5b      	subs	r3, r3, r5
 8004af8:	191b      	adds	r3, r3, r4
 8004afa:	141c      	asrs	r4, r3, #16
 8004afc:	b292      	uxth	r2, r2
 8004afe:	041b      	lsls	r3, r3, #16
 8004b00:	4313      	orrs	r3, r2
 8004b02:	c008      	stmia	r0!, {r3}
 8004b04:	9b04      	ldr	r3, [sp, #16]
 8004b06:	428b      	cmp	r3, r1
 8004b08:	d2ec      	bcs.n	8004ae4 <quorem+0xa8>
 8004b0a:	9b00      	ldr	r3, [sp, #0]
 8004b0c:	9a02      	ldr	r2, [sp, #8]
 8004b0e:	009b      	lsls	r3, r3, #2
 8004b10:	18d3      	adds	r3, r2, r3
 8004b12:	681a      	ldr	r2, [r3, #0]
 8004b14:	2a00      	cmp	r2, #0
 8004b16:	d015      	beq.n	8004b44 <quorem+0x108>
 8004b18:	9801      	ldr	r0, [sp, #4]
 8004b1a:	b007      	add	sp, #28
 8004b1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b1e:	6823      	ldr	r3, [r4, #0]
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d106      	bne.n	8004b32 <quorem+0xf6>
 8004b24:	9b00      	ldr	r3, [sp, #0]
 8004b26:	3b01      	subs	r3, #1
 8004b28:	9300      	str	r3, [sp, #0]
 8004b2a:	9b02      	ldr	r3, [sp, #8]
 8004b2c:	3c04      	subs	r4, #4
 8004b2e:	42a3      	cmp	r3, r4
 8004b30:	d3f5      	bcc.n	8004b1e <quorem+0xe2>
 8004b32:	9b00      	ldr	r3, [sp, #0]
 8004b34:	6133      	str	r3, [r6, #16]
 8004b36:	e7c7      	b.n	8004ac8 <quorem+0x8c>
 8004b38:	681a      	ldr	r2, [r3, #0]
 8004b3a:	2a00      	cmp	r2, #0
 8004b3c:	d106      	bne.n	8004b4c <quorem+0x110>
 8004b3e:	9a00      	ldr	r2, [sp, #0]
 8004b40:	3a01      	subs	r2, #1
 8004b42:	9200      	str	r2, [sp, #0]
 8004b44:	9a02      	ldr	r2, [sp, #8]
 8004b46:	3b04      	subs	r3, #4
 8004b48:	429a      	cmp	r2, r3
 8004b4a:	d3f5      	bcc.n	8004b38 <quorem+0xfc>
 8004b4c:	9b00      	ldr	r3, [sp, #0]
 8004b4e:	6133      	str	r3, [r6, #16]
 8004b50:	e7e2      	b.n	8004b18 <quorem+0xdc>
	...

08004b54 <_dtoa_r>:
 8004b54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b56:	b09d      	sub	sp, #116	; 0x74
 8004b58:	9202      	str	r2, [sp, #8]
 8004b5a:	9303      	str	r3, [sp, #12]
 8004b5c:	9b02      	ldr	r3, [sp, #8]
 8004b5e:	9c03      	ldr	r4, [sp, #12]
 8004b60:	9308      	str	r3, [sp, #32]
 8004b62:	9409      	str	r4, [sp, #36]	; 0x24
 8004b64:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004b66:	0007      	movs	r7, r0
 8004b68:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8004b6a:	2c00      	cmp	r4, #0
 8004b6c:	d10e      	bne.n	8004b8c <_dtoa_r+0x38>
 8004b6e:	2010      	movs	r0, #16
 8004b70:	f000 ff14 	bl	800599c <malloc>
 8004b74:	1e02      	subs	r2, r0, #0
 8004b76:	6278      	str	r0, [r7, #36]	; 0x24
 8004b78:	d104      	bne.n	8004b84 <_dtoa_r+0x30>
 8004b7a:	21ea      	movs	r1, #234	; 0xea
 8004b7c:	4bc7      	ldr	r3, [pc, #796]	; (8004e9c <_dtoa_r+0x348>)
 8004b7e:	48c8      	ldr	r0, [pc, #800]	; (8004ea0 <_dtoa_r+0x34c>)
 8004b80:	f001 fe76 	bl	8006870 <__assert_func>
 8004b84:	6044      	str	r4, [r0, #4]
 8004b86:	6084      	str	r4, [r0, #8]
 8004b88:	6004      	str	r4, [r0, #0]
 8004b8a:	60c4      	str	r4, [r0, #12]
 8004b8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b8e:	6819      	ldr	r1, [r3, #0]
 8004b90:	2900      	cmp	r1, #0
 8004b92:	d00a      	beq.n	8004baa <_dtoa_r+0x56>
 8004b94:	685a      	ldr	r2, [r3, #4]
 8004b96:	2301      	movs	r3, #1
 8004b98:	4093      	lsls	r3, r2
 8004b9a:	604a      	str	r2, [r1, #4]
 8004b9c:	608b      	str	r3, [r1, #8]
 8004b9e:	0038      	movs	r0, r7
 8004ba0:	f000 ff5e 	bl	8005a60 <_Bfree>
 8004ba4:	2200      	movs	r2, #0
 8004ba6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ba8:	601a      	str	r2, [r3, #0]
 8004baa:	9b03      	ldr	r3, [sp, #12]
 8004bac:	2b00      	cmp	r3, #0
 8004bae:	da20      	bge.n	8004bf2 <_dtoa_r+0x9e>
 8004bb0:	2301      	movs	r3, #1
 8004bb2:	602b      	str	r3, [r5, #0]
 8004bb4:	9b03      	ldr	r3, [sp, #12]
 8004bb6:	005b      	lsls	r3, r3, #1
 8004bb8:	085b      	lsrs	r3, r3, #1
 8004bba:	9309      	str	r3, [sp, #36]	; 0x24
 8004bbc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004bbe:	4bb9      	ldr	r3, [pc, #740]	; (8004ea4 <_dtoa_r+0x350>)
 8004bc0:	4ab8      	ldr	r2, [pc, #736]	; (8004ea4 <_dtoa_r+0x350>)
 8004bc2:	402b      	ands	r3, r5
 8004bc4:	4293      	cmp	r3, r2
 8004bc6:	d117      	bne.n	8004bf8 <_dtoa_r+0xa4>
 8004bc8:	4bb7      	ldr	r3, [pc, #732]	; (8004ea8 <_dtoa_r+0x354>)
 8004bca:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004bcc:	0328      	lsls	r0, r5, #12
 8004bce:	6013      	str	r3, [r2, #0]
 8004bd0:	9b02      	ldr	r3, [sp, #8]
 8004bd2:	0b00      	lsrs	r0, r0, #12
 8004bd4:	4318      	orrs	r0, r3
 8004bd6:	d101      	bne.n	8004bdc <_dtoa_r+0x88>
 8004bd8:	f000 fdbf 	bl	800575a <_dtoa_r+0xc06>
 8004bdc:	48b3      	ldr	r0, [pc, #716]	; (8004eac <_dtoa_r+0x358>)
 8004bde:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004be0:	9006      	str	r0, [sp, #24]
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d002      	beq.n	8004bec <_dtoa_r+0x98>
 8004be6:	4bb2      	ldr	r3, [pc, #712]	; (8004eb0 <_dtoa_r+0x35c>)
 8004be8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004bea:	6013      	str	r3, [r2, #0]
 8004bec:	9806      	ldr	r0, [sp, #24]
 8004bee:	b01d      	add	sp, #116	; 0x74
 8004bf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004bf2:	2300      	movs	r3, #0
 8004bf4:	602b      	str	r3, [r5, #0]
 8004bf6:	e7e1      	b.n	8004bbc <_dtoa_r+0x68>
 8004bf8:	9b08      	ldr	r3, [sp, #32]
 8004bfa:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8004bfc:	9312      	str	r3, [sp, #72]	; 0x48
 8004bfe:	9413      	str	r4, [sp, #76]	; 0x4c
 8004c00:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004c02:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004c04:	2200      	movs	r2, #0
 8004c06:	2300      	movs	r3, #0
 8004c08:	f7fb fc20 	bl	800044c <__aeabi_dcmpeq>
 8004c0c:	1e04      	subs	r4, r0, #0
 8004c0e:	d009      	beq.n	8004c24 <_dtoa_r+0xd0>
 8004c10:	2301      	movs	r3, #1
 8004c12:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004c14:	6013      	str	r3, [r2, #0]
 8004c16:	4ba7      	ldr	r3, [pc, #668]	; (8004eb4 <_dtoa_r+0x360>)
 8004c18:	9306      	str	r3, [sp, #24]
 8004c1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d0e5      	beq.n	8004bec <_dtoa_r+0x98>
 8004c20:	4ba5      	ldr	r3, [pc, #660]	; (8004eb8 <_dtoa_r+0x364>)
 8004c22:	e7e1      	b.n	8004be8 <_dtoa_r+0x94>
 8004c24:	ab1a      	add	r3, sp, #104	; 0x68
 8004c26:	9301      	str	r3, [sp, #4]
 8004c28:	ab1b      	add	r3, sp, #108	; 0x6c
 8004c2a:	9300      	str	r3, [sp, #0]
 8004c2c:	0038      	movs	r0, r7
 8004c2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004c30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004c32:	f001 fa09 	bl	8006048 <__d2b>
 8004c36:	006e      	lsls	r6, r5, #1
 8004c38:	9005      	str	r0, [sp, #20]
 8004c3a:	0d76      	lsrs	r6, r6, #21
 8004c3c:	d100      	bne.n	8004c40 <_dtoa_r+0xec>
 8004c3e:	e07c      	b.n	8004d3a <_dtoa_r+0x1e6>
 8004c40:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004c42:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004c44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004c46:	4a9d      	ldr	r2, [pc, #628]	; (8004ebc <_dtoa_r+0x368>)
 8004c48:	031b      	lsls	r3, r3, #12
 8004c4a:	0b1b      	lsrs	r3, r3, #12
 8004c4c:	431a      	orrs	r2, r3
 8004c4e:	0011      	movs	r1, r2
 8004c50:	4b9b      	ldr	r3, [pc, #620]	; (8004ec0 <_dtoa_r+0x36c>)
 8004c52:	9418      	str	r4, [sp, #96]	; 0x60
 8004c54:	18f6      	adds	r6, r6, r3
 8004c56:	2200      	movs	r2, #0
 8004c58:	4b9a      	ldr	r3, [pc, #616]	; (8004ec4 <_dtoa_r+0x370>)
 8004c5a:	f7fc fee9 	bl	8001a30 <__aeabi_dsub>
 8004c5e:	4a9a      	ldr	r2, [pc, #616]	; (8004ec8 <_dtoa_r+0x374>)
 8004c60:	4b9a      	ldr	r3, [pc, #616]	; (8004ecc <_dtoa_r+0x378>)
 8004c62:	f7fc fc79 	bl	8001558 <__aeabi_dmul>
 8004c66:	4a9a      	ldr	r2, [pc, #616]	; (8004ed0 <_dtoa_r+0x37c>)
 8004c68:	4b9a      	ldr	r3, [pc, #616]	; (8004ed4 <_dtoa_r+0x380>)
 8004c6a:	f7fb fd37 	bl	80006dc <__aeabi_dadd>
 8004c6e:	0004      	movs	r4, r0
 8004c70:	0030      	movs	r0, r6
 8004c72:	000d      	movs	r5, r1
 8004c74:	f7fd fac2 	bl	80021fc <__aeabi_i2d>
 8004c78:	4a97      	ldr	r2, [pc, #604]	; (8004ed8 <_dtoa_r+0x384>)
 8004c7a:	4b98      	ldr	r3, [pc, #608]	; (8004edc <_dtoa_r+0x388>)
 8004c7c:	f7fc fc6c 	bl	8001558 <__aeabi_dmul>
 8004c80:	0002      	movs	r2, r0
 8004c82:	000b      	movs	r3, r1
 8004c84:	0020      	movs	r0, r4
 8004c86:	0029      	movs	r1, r5
 8004c88:	f7fb fd28 	bl	80006dc <__aeabi_dadd>
 8004c8c:	0004      	movs	r4, r0
 8004c8e:	000d      	movs	r5, r1
 8004c90:	f7fd fa7e 	bl	8002190 <__aeabi_d2iz>
 8004c94:	2200      	movs	r2, #0
 8004c96:	9002      	str	r0, [sp, #8]
 8004c98:	2300      	movs	r3, #0
 8004c9a:	0020      	movs	r0, r4
 8004c9c:	0029      	movs	r1, r5
 8004c9e:	f7fb fbdb 	bl	8000458 <__aeabi_dcmplt>
 8004ca2:	2800      	cmp	r0, #0
 8004ca4:	d00b      	beq.n	8004cbe <_dtoa_r+0x16a>
 8004ca6:	9802      	ldr	r0, [sp, #8]
 8004ca8:	f7fd faa8 	bl	80021fc <__aeabi_i2d>
 8004cac:	002b      	movs	r3, r5
 8004cae:	0022      	movs	r2, r4
 8004cb0:	f7fb fbcc 	bl	800044c <__aeabi_dcmpeq>
 8004cb4:	4243      	negs	r3, r0
 8004cb6:	4158      	adcs	r0, r3
 8004cb8:	9b02      	ldr	r3, [sp, #8]
 8004cba:	1a1b      	subs	r3, r3, r0
 8004cbc:	9302      	str	r3, [sp, #8]
 8004cbe:	2301      	movs	r3, #1
 8004cc0:	9316      	str	r3, [sp, #88]	; 0x58
 8004cc2:	9b02      	ldr	r3, [sp, #8]
 8004cc4:	2b16      	cmp	r3, #22
 8004cc6:	d80f      	bhi.n	8004ce8 <_dtoa_r+0x194>
 8004cc8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004cca:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004ccc:	00da      	lsls	r2, r3, #3
 8004cce:	4b84      	ldr	r3, [pc, #528]	; (8004ee0 <_dtoa_r+0x38c>)
 8004cd0:	189b      	adds	r3, r3, r2
 8004cd2:	681a      	ldr	r2, [r3, #0]
 8004cd4:	685b      	ldr	r3, [r3, #4]
 8004cd6:	f7fb fbbf 	bl	8000458 <__aeabi_dcmplt>
 8004cda:	2800      	cmp	r0, #0
 8004cdc:	d049      	beq.n	8004d72 <_dtoa_r+0x21e>
 8004cde:	9b02      	ldr	r3, [sp, #8]
 8004ce0:	3b01      	subs	r3, #1
 8004ce2:	9302      	str	r3, [sp, #8]
 8004ce4:	2300      	movs	r3, #0
 8004ce6:	9316      	str	r3, [sp, #88]	; 0x58
 8004ce8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004cea:	1b9e      	subs	r6, r3, r6
 8004cec:	2300      	movs	r3, #0
 8004cee:	930a      	str	r3, [sp, #40]	; 0x28
 8004cf0:	0033      	movs	r3, r6
 8004cf2:	3b01      	subs	r3, #1
 8004cf4:	930d      	str	r3, [sp, #52]	; 0x34
 8004cf6:	d504      	bpl.n	8004d02 <_dtoa_r+0x1ae>
 8004cf8:	2301      	movs	r3, #1
 8004cfa:	1b9b      	subs	r3, r3, r6
 8004cfc:	930a      	str	r3, [sp, #40]	; 0x28
 8004cfe:	2300      	movs	r3, #0
 8004d00:	930d      	str	r3, [sp, #52]	; 0x34
 8004d02:	9b02      	ldr	r3, [sp, #8]
 8004d04:	2b00      	cmp	r3, #0
 8004d06:	db36      	blt.n	8004d76 <_dtoa_r+0x222>
 8004d08:	9a02      	ldr	r2, [sp, #8]
 8004d0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004d0c:	4694      	mov	ip, r2
 8004d0e:	4463      	add	r3, ip
 8004d10:	930d      	str	r3, [sp, #52]	; 0x34
 8004d12:	2300      	movs	r3, #0
 8004d14:	9215      	str	r2, [sp, #84]	; 0x54
 8004d16:	930e      	str	r3, [sp, #56]	; 0x38
 8004d18:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004d1a:	2401      	movs	r4, #1
 8004d1c:	2b09      	cmp	r3, #9
 8004d1e:	d864      	bhi.n	8004dea <_dtoa_r+0x296>
 8004d20:	2b05      	cmp	r3, #5
 8004d22:	dd02      	ble.n	8004d2a <_dtoa_r+0x1d6>
 8004d24:	2400      	movs	r4, #0
 8004d26:	3b04      	subs	r3, #4
 8004d28:	9322      	str	r3, [sp, #136]	; 0x88
 8004d2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004d2c:	1e98      	subs	r0, r3, #2
 8004d2e:	2803      	cmp	r0, #3
 8004d30:	d864      	bhi.n	8004dfc <_dtoa_r+0x2a8>
 8004d32:	f7fb f9f1 	bl	8000118 <__gnu_thumb1_case_uqi>
 8004d36:	3829      	.short	0x3829
 8004d38:	5836      	.short	0x5836
 8004d3a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004d3c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004d3e:	189e      	adds	r6, r3, r2
 8004d40:	4b68      	ldr	r3, [pc, #416]	; (8004ee4 <_dtoa_r+0x390>)
 8004d42:	18f2      	adds	r2, r6, r3
 8004d44:	2a20      	cmp	r2, #32
 8004d46:	dd0f      	ble.n	8004d68 <_dtoa_r+0x214>
 8004d48:	2340      	movs	r3, #64	; 0x40
 8004d4a:	1a9b      	subs	r3, r3, r2
 8004d4c:	409d      	lsls	r5, r3
 8004d4e:	4b66      	ldr	r3, [pc, #408]	; (8004ee8 <_dtoa_r+0x394>)
 8004d50:	9802      	ldr	r0, [sp, #8]
 8004d52:	18f3      	adds	r3, r6, r3
 8004d54:	40d8      	lsrs	r0, r3
 8004d56:	4328      	orrs	r0, r5
 8004d58:	f7fd fa80 	bl	800225c <__aeabi_ui2d>
 8004d5c:	2301      	movs	r3, #1
 8004d5e:	4c63      	ldr	r4, [pc, #396]	; (8004eec <_dtoa_r+0x398>)
 8004d60:	3e01      	subs	r6, #1
 8004d62:	1909      	adds	r1, r1, r4
 8004d64:	9318      	str	r3, [sp, #96]	; 0x60
 8004d66:	e776      	b.n	8004c56 <_dtoa_r+0x102>
 8004d68:	2320      	movs	r3, #32
 8004d6a:	9802      	ldr	r0, [sp, #8]
 8004d6c:	1a9b      	subs	r3, r3, r2
 8004d6e:	4098      	lsls	r0, r3
 8004d70:	e7f2      	b.n	8004d58 <_dtoa_r+0x204>
 8004d72:	9016      	str	r0, [sp, #88]	; 0x58
 8004d74:	e7b8      	b.n	8004ce8 <_dtoa_r+0x194>
 8004d76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d78:	9a02      	ldr	r2, [sp, #8]
 8004d7a:	1a9b      	subs	r3, r3, r2
 8004d7c:	930a      	str	r3, [sp, #40]	; 0x28
 8004d7e:	4253      	negs	r3, r2
 8004d80:	930e      	str	r3, [sp, #56]	; 0x38
 8004d82:	2300      	movs	r3, #0
 8004d84:	9315      	str	r3, [sp, #84]	; 0x54
 8004d86:	e7c7      	b.n	8004d18 <_dtoa_r+0x1c4>
 8004d88:	2300      	movs	r3, #0
 8004d8a:	930f      	str	r3, [sp, #60]	; 0x3c
 8004d8c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004d8e:	930c      	str	r3, [sp, #48]	; 0x30
 8004d90:	9307      	str	r3, [sp, #28]
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	dc13      	bgt.n	8004dbe <_dtoa_r+0x26a>
 8004d96:	2301      	movs	r3, #1
 8004d98:	001a      	movs	r2, r3
 8004d9a:	930c      	str	r3, [sp, #48]	; 0x30
 8004d9c:	9307      	str	r3, [sp, #28]
 8004d9e:	9223      	str	r2, [sp, #140]	; 0x8c
 8004da0:	e00d      	b.n	8004dbe <_dtoa_r+0x26a>
 8004da2:	2301      	movs	r3, #1
 8004da4:	e7f1      	b.n	8004d8a <_dtoa_r+0x236>
 8004da6:	2300      	movs	r3, #0
 8004da8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004daa:	930f      	str	r3, [sp, #60]	; 0x3c
 8004dac:	4694      	mov	ip, r2
 8004dae:	9b02      	ldr	r3, [sp, #8]
 8004db0:	4463      	add	r3, ip
 8004db2:	930c      	str	r3, [sp, #48]	; 0x30
 8004db4:	3301      	adds	r3, #1
 8004db6:	9307      	str	r3, [sp, #28]
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	dc00      	bgt.n	8004dbe <_dtoa_r+0x26a>
 8004dbc:	2301      	movs	r3, #1
 8004dbe:	2200      	movs	r2, #0
 8004dc0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004dc2:	6042      	str	r2, [r0, #4]
 8004dc4:	3204      	adds	r2, #4
 8004dc6:	0015      	movs	r5, r2
 8004dc8:	3514      	adds	r5, #20
 8004dca:	6841      	ldr	r1, [r0, #4]
 8004dcc:	429d      	cmp	r5, r3
 8004dce:	d919      	bls.n	8004e04 <_dtoa_r+0x2b0>
 8004dd0:	0038      	movs	r0, r7
 8004dd2:	f000 fe01 	bl	80059d8 <_Balloc>
 8004dd6:	9006      	str	r0, [sp, #24]
 8004dd8:	2800      	cmp	r0, #0
 8004dda:	d117      	bne.n	8004e0c <_dtoa_r+0x2b8>
 8004ddc:	21d5      	movs	r1, #213	; 0xd5
 8004dde:	0002      	movs	r2, r0
 8004de0:	4b43      	ldr	r3, [pc, #268]	; (8004ef0 <_dtoa_r+0x39c>)
 8004de2:	0049      	lsls	r1, r1, #1
 8004de4:	e6cb      	b.n	8004b7e <_dtoa_r+0x2a>
 8004de6:	2301      	movs	r3, #1
 8004de8:	e7de      	b.n	8004da8 <_dtoa_r+0x254>
 8004dea:	2300      	movs	r3, #0
 8004dec:	940f      	str	r4, [sp, #60]	; 0x3c
 8004dee:	9322      	str	r3, [sp, #136]	; 0x88
 8004df0:	3b01      	subs	r3, #1
 8004df2:	930c      	str	r3, [sp, #48]	; 0x30
 8004df4:	9307      	str	r3, [sp, #28]
 8004df6:	2200      	movs	r2, #0
 8004df8:	3313      	adds	r3, #19
 8004dfa:	e7d0      	b.n	8004d9e <_dtoa_r+0x24a>
 8004dfc:	2301      	movs	r3, #1
 8004dfe:	930f      	str	r3, [sp, #60]	; 0x3c
 8004e00:	3b02      	subs	r3, #2
 8004e02:	e7f6      	b.n	8004df2 <_dtoa_r+0x29e>
 8004e04:	3101      	adds	r1, #1
 8004e06:	6041      	str	r1, [r0, #4]
 8004e08:	0052      	lsls	r2, r2, #1
 8004e0a:	e7dc      	b.n	8004dc6 <_dtoa_r+0x272>
 8004e0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e0e:	9a06      	ldr	r2, [sp, #24]
 8004e10:	601a      	str	r2, [r3, #0]
 8004e12:	9b07      	ldr	r3, [sp, #28]
 8004e14:	2b0e      	cmp	r3, #14
 8004e16:	d900      	bls.n	8004e1a <_dtoa_r+0x2c6>
 8004e18:	e0eb      	b.n	8004ff2 <_dtoa_r+0x49e>
 8004e1a:	2c00      	cmp	r4, #0
 8004e1c:	d100      	bne.n	8004e20 <_dtoa_r+0x2cc>
 8004e1e:	e0e8      	b.n	8004ff2 <_dtoa_r+0x49e>
 8004e20:	9b02      	ldr	r3, [sp, #8]
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	dd68      	ble.n	8004ef8 <_dtoa_r+0x3a4>
 8004e26:	001a      	movs	r2, r3
 8004e28:	210f      	movs	r1, #15
 8004e2a:	4b2d      	ldr	r3, [pc, #180]	; (8004ee0 <_dtoa_r+0x38c>)
 8004e2c:	400a      	ands	r2, r1
 8004e2e:	00d2      	lsls	r2, r2, #3
 8004e30:	189b      	adds	r3, r3, r2
 8004e32:	681d      	ldr	r5, [r3, #0]
 8004e34:	685e      	ldr	r6, [r3, #4]
 8004e36:	9b02      	ldr	r3, [sp, #8]
 8004e38:	111c      	asrs	r4, r3, #4
 8004e3a:	2302      	movs	r3, #2
 8004e3c:	9310      	str	r3, [sp, #64]	; 0x40
 8004e3e:	9b02      	ldr	r3, [sp, #8]
 8004e40:	05db      	lsls	r3, r3, #23
 8004e42:	d50b      	bpl.n	8004e5c <_dtoa_r+0x308>
 8004e44:	4b2b      	ldr	r3, [pc, #172]	; (8004ef4 <_dtoa_r+0x3a0>)
 8004e46:	400c      	ands	r4, r1
 8004e48:	6a1a      	ldr	r2, [r3, #32]
 8004e4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e4c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004e4e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004e50:	f7fb ff80 	bl	8000d54 <__aeabi_ddiv>
 8004e54:	2303      	movs	r3, #3
 8004e56:	9008      	str	r0, [sp, #32]
 8004e58:	9109      	str	r1, [sp, #36]	; 0x24
 8004e5a:	9310      	str	r3, [sp, #64]	; 0x40
 8004e5c:	4b25      	ldr	r3, [pc, #148]	; (8004ef4 <_dtoa_r+0x3a0>)
 8004e5e:	9314      	str	r3, [sp, #80]	; 0x50
 8004e60:	2c00      	cmp	r4, #0
 8004e62:	d108      	bne.n	8004e76 <_dtoa_r+0x322>
 8004e64:	9808      	ldr	r0, [sp, #32]
 8004e66:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004e68:	002a      	movs	r2, r5
 8004e6a:	0033      	movs	r3, r6
 8004e6c:	f7fb ff72 	bl	8000d54 <__aeabi_ddiv>
 8004e70:	9008      	str	r0, [sp, #32]
 8004e72:	9109      	str	r1, [sp, #36]	; 0x24
 8004e74:	e05c      	b.n	8004f30 <_dtoa_r+0x3dc>
 8004e76:	2301      	movs	r3, #1
 8004e78:	421c      	tst	r4, r3
 8004e7a:	d00b      	beq.n	8004e94 <_dtoa_r+0x340>
 8004e7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004e7e:	0028      	movs	r0, r5
 8004e80:	3301      	adds	r3, #1
 8004e82:	9310      	str	r3, [sp, #64]	; 0x40
 8004e84:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004e86:	0031      	movs	r1, r6
 8004e88:	681a      	ldr	r2, [r3, #0]
 8004e8a:	685b      	ldr	r3, [r3, #4]
 8004e8c:	f7fc fb64 	bl	8001558 <__aeabi_dmul>
 8004e90:	0005      	movs	r5, r0
 8004e92:	000e      	movs	r6, r1
 8004e94:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004e96:	1064      	asrs	r4, r4, #1
 8004e98:	3308      	adds	r3, #8
 8004e9a:	e7e0      	b.n	8004e5e <_dtoa_r+0x30a>
 8004e9c:	08006e0d 	.word	0x08006e0d
 8004ea0:	08006e24 	.word	0x08006e24
 8004ea4:	7ff00000 	.word	0x7ff00000
 8004ea8:	0000270f 	.word	0x0000270f
 8004eac:	08006e09 	.word	0x08006e09
 8004eb0:	08006e0c 	.word	0x08006e0c
 8004eb4:	08006ddc 	.word	0x08006ddc
 8004eb8:	08006ddd 	.word	0x08006ddd
 8004ebc:	3ff00000 	.word	0x3ff00000
 8004ec0:	fffffc01 	.word	0xfffffc01
 8004ec4:	3ff80000 	.word	0x3ff80000
 8004ec8:	636f4361 	.word	0x636f4361
 8004ecc:	3fd287a7 	.word	0x3fd287a7
 8004ed0:	8b60c8b3 	.word	0x8b60c8b3
 8004ed4:	3fc68a28 	.word	0x3fc68a28
 8004ed8:	509f79fb 	.word	0x509f79fb
 8004edc:	3fd34413 	.word	0x3fd34413
 8004ee0:	08006f78 	.word	0x08006f78
 8004ee4:	00000432 	.word	0x00000432
 8004ee8:	00000412 	.word	0x00000412
 8004eec:	fe100000 	.word	0xfe100000
 8004ef0:	08006e7f 	.word	0x08006e7f
 8004ef4:	08006f50 	.word	0x08006f50
 8004ef8:	2302      	movs	r3, #2
 8004efa:	9310      	str	r3, [sp, #64]	; 0x40
 8004efc:	9b02      	ldr	r3, [sp, #8]
 8004efe:	2b00      	cmp	r3, #0
 8004f00:	d016      	beq.n	8004f30 <_dtoa_r+0x3dc>
 8004f02:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004f04:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004f06:	425c      	negs	r4, r3
 8004f08:	230f      	movs	r3, #15
 8004f0a:	4ab6      	ldr	r2, [pc, #728]	; (80051e4 <_dtoa_r+0x690>)
 8004f0c:	4023      	ands	r3, r4
 8004f0e:	00db      	lsls	r3, r3, #3
 8004f10:	18d3      	adds	r3, r2, r3
 8004f12:	681a      	ldr	r2, [r3, #0]
 8004f14:	685b      	ldr	r3, [r3, #4]
 8004f16:	f7fc fb1f 	bl	8001558 <__aeabi_dmul>
 8004f1a:	2601      	movs	r6, #1
 8004f1c:	2300      	movs	r3, #0
 8004f1e:	9008      	str	r0, [sp, #32]
 8004f20:	9109      	str	r1, [sp, #36]	; 0x24
 8004f22:	4db1      	ldr	r5, [pc, #708]	; (80051e8 <_dtoa_r+0x694>)
 8004f24:	1124      	asrs	r4, r4, #4
 8004f26:	2c00      	cmp	r4, #0
 8004f28:	d000      	beq.n	8004f2c <_dtoa_r+0x3d8>
 8004f2a:	e094      	b.n	8005056 <_dtoa_r+0x502>
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	d19f      	bne.n	8004e70 <_dtoa_r+0x31c>
 8004f30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004f32:	2b00      	cmp	r3, #0
 8004f34:	d100      	bne.n	8004f38 <_dtoa_r+0x3e4>
 8004f36:	e09b      	b.n	8005070 <_dtoa_r+0x51c>
 8004f38:	9c08      	ldr	r4, [sp, #32]
 8004f3a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004f3c:	2200      	movs	r2, #0
 8004f3e:	0020      	movs	r0, r4
 8004f40:	0029      	movs	r1, r5
 8004f42:	4baa      	ldr	r3, [pc, #680]	; (80051ec <_dtoa_r+0x698>)
 8004f44:	f7fb fa88 	bl	8000458 <__aeabi_dcmplt>
 8004f48:	2800      	cmp	r0, #0
 8004f4a:	d100      	bne.n	8004f4e <_dtoa_r+0x3fa>
 8004f4c:	e090      	b.n	8005070 <_dtoa_r+0x51c>
 8004f4e:	9b07      	ldr	r3, [sp, #28]
 8004f50:	2b00      	cmp	r3, #0
 8004f52:	d100      	bne.n	8004f56 <_dtoa_r+0x402>
 8004f54:	e08c      	b.n	8005070 <_dtoa_r+0x51c>
 8004f56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004f58:	2b00      	cmp	r3, #0
 8004f5a:	dd46      	ble.n	8004fea <_dtoa_r+0x496>
 8004f5c:	9b02      	ldr	r3, [sp, #8]
 8004f5e:	2200      	movs	r2, #0
 8004f60:	0020      	movs	r0, r4
 8004f62:	0029      	movs	r1, r5
 8004f64:	1e5e      	subs	r6, r3, #1
 8004f66:	4ba2      	ldr	r3, [pc, #648]	; (80051f0 <_dtoa_r+0x69c>)
 8004f68:	f7fc faf6 	bl	8001558 <__aeabi_dmul>
 8004f6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004f6e:	9008      	str	r0, [sp, #32]
 8004f70:	9109      	str	r1, [sp, #36]	; 0x24
 8004f72:	3301      	adds	r3, #1
 8004f74:	9310      	str	r3, [sp, #64]	; 0x40
 8004f76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004f78:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004f7a:	9c08      	ldr	r4, [sp, #32]
 8004f7c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004f7e:	9314      	str	r3, [sp, #80]	; 0x50
 8004f80:	f7fd f93c 	bl	80021fc <__aeabi_i2d>
 8004f84:	0022      	movs	r2, r4
 8004f86:	002b      	movs	r3, r5
 8004f88:	f7fc fae6 	bl	8001558 <__aeabi_dmul>
 8004f8c:	2200      	movs	r2, #0
 8004f8e:	4b99      	ldr	r3, [pc, #612]	; (80051f4 <_dtoa_r+0x6a0>)
 8004f90:	f7fb fba4 	bl	80006dc <__aeabi_dadd>
 8004f94:	9010      	str	r0, [sp, #64]	; 0x40
 8004f96:	9111      	str	r1, [sp, #68]	; 0x44
 8004f98:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004f9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004f9c:	9208      	str	r2, [sp, #32]
 8004f9e:	9309      	str	r3, [sp, #36]	; 0x24
 8004fa0:	4a95      	ldr	r2, [pc, #596]	; (80051f8 <_dtoa_r+0x6a4>)
 8004fa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004fa4:	4694      	mov	ip, r2
 8004fa6:	4463      	add	r3, ip
 8004fa8:	9317      	str	r3, [sp, #92]	; 0x5c
 8004faa:	9309      	str	r3, [sp, #36]	; 0x24
 8004fac:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d161      	bne.n	8005076 <_dtoa_r+0x522>
 8004fb2:	2200      	movs	r2, #0
 8004fb4:	0020      	movs	r0, r4
 8004fb6:	0029      	movs	r1, r5
 8004fb8:	4b90      	ldr	r3, [pc, #576]	; (80051fc <_dtoa_r+0x6a8>)
 8004fba:	f7fc fd39 	bl	8001a30 <__aeabi_dsub>
 8004fbe:	9a08      	ldr	r2, [sp, #32]
 8004fc0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004fc2:	0004      	movs	r4, r0
 8004fc4:	000d      	movs	r5, r1
 8004fc6:	f7fb fa5b 	bl	8000480 <__aeabi_dcmpgt>
 8004fca:	2800      	cmp	r0, #0
 8004fcc:	d000      	beq.n	8004fd0 <_dtoa_r+0x47c>
 8004fce:	e2af      	b.n	8005530 <_dtoa_r+0x9dc>
 8004fd0:	488b      	ldr	r0, [pc, #556]	; (8005200 <_dtoa_r+0x6ac>)
 8004fd2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004fd4:	4684      	mov	ip, r0
 8004fd6:	4461      	add	r1, ip
 8004fd8:	000b      	movs	r3, r1
 8004fda:	0020      	movs	r0, r4
 8004fdc:	0029      	movs	r1, r5
 8004fde:	9a08      	ldr	r2, [sp, #32]
 8004fe0:	f7fb fa3a 	bl	8000458 <__aeabi_dcmplt>
 8004fe4:	2800      	cmp	r0, #0
 8004fe6:	d000      	beq.n	8004fea <_dtoa_r+0x496>
 8004fe8:	e29f      	b.n	800552a <_dtoa_r+0x9d6>
 8004fea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004fec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8004fee:	9308      	str	r3, [sp, #32]
 8004ff0:	9409      	str	r4, [sp, #36]	; 0x24
 8004ff2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004ff4:	2b00      	cmp	r3, #0
 8004ff6:	da00      	bge.n	8004ffa <_dtoa_r+0x4a6>
 8004ff8:	e172      	b.n	80052e0 <_dtoa_r+0x78c>
 8004ffa:	9a02      	ldr	r2, [sp, #8]
 8004ffc:	2a0e      	cmp	r2, #14
 8004ffe:	dd00      	ble.n	8005002 <_dtoa_r+0x4ae>
 8005000:	e16e      	b.n	80052e0 <_dtoa_r+0x78c>
 8005002:	4b78      	ldr	r3, [pc, #480]	; (80051e4 <_dtoa_r+0x690>)
 8005004:	00d2      	lsls	r2, r2, #3
 8005006:	189b      	adds	r3, r3, r2
 8005008:	685c      	ldr	r4, [r3, #4]
 800500a:	681b      	ldr	r3, [r3, #0]
 800500c:	930a      	str	r3, [sp, #40]	; 0x28
 800500e:	940b      	str	r4, [sp, #44]	; 0x2c
 8005010:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005012:	2b00      	cmp	r3, #0
 8005014:	db00      	blt.n	8005018 <_dtoa_r+0x4c4>
 8005016:	e0f7      	b.n	8005208 <_dtoa_r+0x6b4>
 8005018:	9b07      	ldr	r3, [sp, #28]
 800501a:	2b00      	cmp	r3, #0
 800501c:	dd00      	ble.n	8005020 <_dtoa_r+0x4cc>
 800501e:	e0f3      	b.n	8005208 <_dtoa_r+0x6b4>
 8005020:	d000      	beq.n	8005024 <_dtoa_r+0x4d0>
 8005022:	e282      	b.n	800552a <_dtoa_r+0x9d6>
 8005024:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005026:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005028:	2200      	movs	r2, #0
 800502a:	4b74      	ldr	r3, [pc, #464]	; (80051fc <_dtoa_r+0x6a8>)
 800502c:	f7fc fa94 	bl	8001558 <__aeabi_dmul>
 8005030:	9a08      	ldr	r2, [sp, #32]
 8005032:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005034:	f7fb fa2e 	bl	8000494 <__aeabi_dcmpge>
 8005038:	9e07      	ldr	r6, [sp, #28]
 800503a:	0035      	movs	r5, r6
 800503c:	2800      	cmp	r0, #0
 800503e:	d000      	beq.n	8005042 <_dtoa_r+0x4ee>
 8005040:	e259      	b.n	80054f6 <_dtoa_r+0x9a2>
 8005042:	9b06      	ldr	r3, [sp, #24]
 8005044:	9a06      	ldr	r2, [sp, #24]
 8005046:	3301      	adds	r3, #1
 8005048:	9308      	str	r3, [sp, #32]
 800504a:	2331      	movs	r3, #49	; 0x31
 800504c:	7013      	strb	r3, [r2, #0]
 800504e:	9b02      	ldr	r3, [sp, #8]
 8005050:	3301      	adds	r3, #1
 8005052:	9302      	str	r3, [sp, #8]
 8005054:	e254      	b.n	8005500 <_dtoa_r+0x9ac>
 8005056:	4234      	tst	r4, r6
 8005058:	d007      	beq.n	800506a <_dtoa_r+0x516>
 800505a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800505c:	3301      	adds	r3, #1
 800505e:	9310      	str	r3, [sp, #64]	; 0x40
 8005060:	682a      	ldr	r2, [r5, #0]
 8005062:	686b      	ldr	r3, [r5, #4]
 8005064:	f7fc fa78 	bl	8001558 <__aeabi_dmul>
 8005068:	0033      	movs	r3, r6
 800506a:	1064      	asrs	r4, r4, #1
 800506c:	3508      	adds	r5, #8
 800506e:	e75a      	b.n	8004f26 <_dtoa_r+0x3d2>
 8005070:	9e02      	ldr	r6, [sp, #8]
 8005072:	9b07      	ldr	r3, [sp, #28]
 8005074:	e780      	b.n	8004f78 <_dtoa_r+0x424>
 8005076:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005078:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800507a:	1e5a      	subs	r2, r3, #1
 800507c:	4b59      	ldr	r3, [pc, #356]	; (80051e4 <_dtoa_r+0x690>)
 800507e:	00d2      	lsls	r2, r2, #3
 8005080:	189b      	adds	r3, r3, r2
 8005082:	681a      	ldr	r2, [r3, #0]
 8005084:	685b      	ldr	r3, [r3, #4]
 8005086:	2900      	cmp	r1, #0
 8005088:	d051      	beq.n	800512e <_dtoa_r+0x5da>
 800508a:	2000      	movs	r0, #0
 800508c:	495d      	ldr	r1, [pc, #372]	; (8005204 <_dtoa_r+0x6b0>)
 800508e:	f7fb fe61 	bl	8000d54 <__aeabi_ddiv>
 8005092:	9a08      	ldr	r2, [sp, #32]
 8005094:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005096:	f7fc fccb 	bl	8001a30 <__aeabi_dsub>
 800509a:	9a06      	ldr	r2, [sp, #24]
 800509c:	9b06      	ldr	r3, [sp, #24]
 800509e:	4694      	mov	ip, r2
 80050a0:	9317      	str	r3, [sp, #92]	; 0x5c
 80050a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80050a4:	9010      	str	r0, [sp, #64]	; 0x40
 80050a6:	9111      	str	r1, [sp, #68]	; 0x44
 80050a8:	4463      	add	r3, ip
 80050aa:	9319      	str	r3, [sp, #100]	; 0x64
 80050ac:	0029      	movs	r1, r5
 80050ae:	0020      	movs	r0, r4
 80050b0:	f7fd f86e 	bl	8002190 <__aeabi_d2iz>
 80050b4:	9014      	str	r0, [sp, #80]	; 0x50
 80050b6:	f7fd f8a1 	bl	80021fc <__aeabi_i2d>
 80050ba:	0002      	movs	r2, r0
 80050bc:	000b      	movs	r3, r1
 80050be:	0020      	movs	r0, r4
 80050c0:	0029      	movs	r1, r5
 80050c2:	f7fc fcb5 	bl	8001a30 <__aeabi_dsub>
 80050c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80050c8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80050ca:	3301      	adds	r3, #1
 80050cc:	9308      	str	r3, [sp, #32]
 80050ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80050d0:	0004      	movs	r4, r0
 80050d2:	3330      	adds	r3, #48	; 0x30
 80050d4:	7013      	strb	r3, [r2, #0]
 80050d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80050d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80050da:	000d      	movs	r5, r1
 80050dc:	f7fb f9bc 	bl	8000458 <__aeabi_dcmplt>
 80050e0:	2800      	cmp	r0, #0
 80050e2:	d175      	bne.n	80051d0 <_dtoa_r+0x67c>
 80050e4:	0022      	movs	r2, r4
 80050e6:	002b      	movs	r3, r5
 80050e8:	2000      	movs	r0, #0
 80050ea:	4940      	ldr	r1, [pc, #256]	; (80051ec <_dtoa_r+0x698>)
 80050ec:	f7fc fca0 	bl	8001a30 <__aeabi_dsub>
 80050f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80050f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80050f4:	f7fb f9b0 	bl	8000458 <__aeabi_dcmplt>
 80050f8:	2800      	cmp	r0, #0
 80050fa:	d000      	beq.n	80050fe <_dtoa_r+0x5aa>
 80050fc:	e0d2      	b.n	80052a4 <_dtoa_r+0x750>
 80050fe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005100:	9a08      	ldr	r2, [sp, #32]
 8005102:	4293      	cmp	r3, r2
 8005104:	d100      	bne.n	8005108 <_dtoa_r+0x5b4>
 8005106:	e770      	b.n	8004fea <_dtoa_r+0x496>
 8005108:	9810      	ldr	r0, [sp, #64]	; 0x40
 800510a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800510c:	2200      	movs	r2, #0
 800510e:	4b38      	ldr	r3, [pc, #224]	; (80051f0 <_dtoa_r+0x69c>)
 8005110:	f7fc fa22 	bl	8001558 <__aeabi_dmul>
 8005114:	4b36      	ldr	r3, [pc, #216]	; (80051f0 <_dtoa_r+0x69c>)
 8005116:	9010      	str	r0, [sp, #64]	; 0x40
 8005118:	9111      	str	r1, [sp, #68]	; 0x44
 800511a:	2200      	movs	r2, #0
 800511c:	0020      	movs	r0, r4
 800511e:	0029      	movs	r1, r5
 8005120:	f7fc fa1a 	bl	8001558 <__aeabi_dmul>
 8005124:	9b08      	ldr	r3, [sp, #32]
 8005126:	0004      	movs	r4, r0
 8005128:	000d      	movs	r5, r1
 800512a:	9317      	str	r3, [sp, #92]	; 0x5c
 800512c:	e7be      	b.n	80050ac <_dtoa_r+0x558>
 800512e:	9808      	ldr	r0, [sp, #32]
 8005130:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005132:	f7fc fa11 	bl	8001558 <__aeabi_dmul>
 8005136:	9a06      	ldr	r2, [sp, #24]
 8005138:	9b06      	ldr	r3, [sp, #24]
 800513a:	4694      	mov	ip, r2
 800513c:	9308      	str	r3, [sp, #32]
 800513e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005140:	9010      	str	r0, [sp, #64]	; 0x40
 8005142:	9111      	str	r1, [sp, #68]	; 0x44
 8005144:	4463      	add	r3, ip
 8005146:	9319      	str	r3, [sp, #100]	; 0x64
 8005148:	0029      	movs	r1, r5
 800514a:	0020      	movs	r0, r4
 800514c:	f7fd f820 	bl	8002190 <__aeabi_d2iz>
 8005150:	9017      	str	r0, [sp, #92]	; 0x5c
 8005152:	f7fd f853 	bl	80021fc <__aeabi_i2d>
 8005156:	0002      	movs	r2, r0
 8005158:	000b      	movs	r3, r1
 800515a:	0020      	movs	r0, r4
 800515c:	0029      	movs	r1, r5
 800515e:	f7fc fc67 	bl	8001a30 <__aeabi_dsub>
 8005162:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005164:	9a08      	ldr	r2, [sp, #32]
 8005166:	3330      	adds	r3, #48	; 0x30
 8005168:	7013      	strb	r3, [r2, #0]
 800516a:	0013      	movs	r3, r2
 800516c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800516e:	3301      	adds	r3, #1
 8005170:	0004      	movs	r4, r0
 8005172:	000d      	movs	r5, r1
 8005174:	9308      	str	r3, [sp, #32]
 8005176:	4293      	cmp	r3, r2
 8005178:	d12c      	bne.n	80051d4 <_dtoa_r+0x680>
 800517a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800517c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800517e:	9a06      	ldr	r2, [sp, #24]
 8005180:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005182:	4694      	mov	ip, r2
 8005184:	4463      	add	r3, ip
 8005186:	2200      	movs	r2, #0
 8005188:	9308      	str	r3, [sp, #32]
 800518a:	4b1e      	ldr	r3, [pc, #120]	; (8005204 <_dtoa_r+0x6b0>)
 800518c:	f7fb faa6 	bl	80006dc <__aeabi_dadd>
 8005190:	0002      	movs	r2, r0
 8005192:	000b      	movs	r3, r1
 8005194:	0020      	movs	r0, r4
 8005196:	0029      	movs	r1, r5
 8005198:	f7fb f972 	bl	8000480 <__aeabi_dcmpgt>
 800519c:	2800      	cmp	r0, #0
 800519e:	d000      	beq.n	80051a2 <_dtoa_r+0x64e>
 80051a0:	e080      	b.n	80052a4 <_dtoa_r+0x750>
 80051a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80051a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051a6:	2000      	movs	r0, #0
 80051a8:	4916      	ldr	r1, [pc, #88]	; (8005204 <_dtoa_r+0x6b0>)
 80051aa:	f7fc fc41 	bl	8001a30 <__aeabi_dsub>
 80051ae:	0002      	movs	r2, r0
 80051b0:	000b      	movs	r3, r1
 80051b2:	0020      	movs	r0, r4
 80051b4:	0029      	movs	r1, r5
 80051b6:	f7fb f94f 	bl	8000458 <__aeabi_dcmplt>
 80051ba:	2800      	cmp	r0, #0
 80051bc:	d100      	bne.n	80051c0 <_dtoa_r+0x66c>
 80051be:	e714      	b.n	8004fea <_dtoa_r+0x496>
 80051c0:	9b08      	ldr	r3, [sp, #32]
 80051c2:	001a      	movs	r2, r3
 80051c4:	3a01      	subs	r2, #1
 80051c6:	9208      	str	r2, [sp, #32]
 80051c8:	7812      	ldrb	r2, [r2, #0]
 80051ca:	2a30      	cmp	r2, #48	; 0x30
 80051cc:	d0f8      	beq.n	80051c0 <_dtoa_r+0x66c>
 80051ce:	9308      	str	r3, [sp, #32]
 80051d0:	9602      	str	r6, [sp, #8]
 80051d2:	e055      	b.n	8005280 <_dtoa_r+0x72c>
 80051d4:	2200      	movs	r2, #0
 80051d6:	4b06      	ldr	r3, [pc, #24]	; (80051f0 <_dtoa_r+0x69c>)
 80051d8:	f7fc f9be 	bl	8001558 <__aeabi_dmul>
 80051dc:	0004      	movs	r4, r0
 80051de:	000d      	movs	r5, r1
 80051e0:	e7b2      	b.n	8005148 <_dtoa_r+0x5f4>
 80051e2:	46c0      	nop			; (mov r8, r8)
 80051e4:	08006f78 	.word	0x08006f78
 80051e8:	08006f50 	.word	0x08006f50
 80051ec:	3ff00000 	.word	0x3ff00000
 80051f0:	40240000 	.word	0x40240000
 80051f4:	401c0000 	.word	0x401c0000
 80051f8:	fcc00000 	.word	0xfcc00000
 80051fc:	40140000 	.word	0x40140000
 8005200:	7cc00000 	.word	0x7cc00000
 8005204:	3fe00000 	.word	0x3fe00000
 8005208:	9b07      	ldr	r3, [sp, #28]
 800520a:	9e06      	ldr	r6, [sp, #24]
 800520c:	3b01      	subs	r3, #1
 800520e:	199b      	adds	r3, r3, r6
 8005210:	930c      	str	r3, [sp, #48]	; 0x30
 8005212:	9c08      	ldr	r4, [sp, #32]
 8005214:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005216:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005218:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800521a:	0020      	movs	r0, r4
 800521c:	0029      	movs	r1, r5
 800521e:	f7fb fd99 	bl	8000d54 <__aeabi_ddiv>
 8005222:	f7fc ffb5 	bl	8002190 <__aeabi_d2iz>
 8005226:	9007      	str	r0, [sp, #28]
 8005228:	f7fc ffe8 	bl	80021fc <__aeabi_i2d>
 800522c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800522e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005230:	f7fc f992 	bl	8001558 <__aeabi_dmul>
 8005234:	0002      	movs	r2, r0
 8005236:	000b      	movs	r3, r1
 8005238:	0020      	movs	r0, r4
 800523a:	0029      	movs	r1, r5
 800523c:	f7fc fbf8 	bl	8001a30 <__aeabi_dsub>
 8005240:	0033      	movs	r3, r6
 8005242:	9a07      	ldr	r2, [sp, #28]
 8005244:	3601      	adds	r6, #1
 8005246:	3230      	adds	r2, #48	; 0x30
 8005248:	701a      	strb	r2, [r3, #0]
 800524a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800524c:	9608      	str	r6, [sp, #32]
 800524e:	429a      	cmp	r2, r3
 8005250:	d139      	bne.n	80052c6 <_dtoa_r+0x772>
 8005252:	0002      	movs	r2, r0
 8005254:	000b      	movs	r3, r1
 8005256:	f7fb fa41 	bl	80006dc <__aeabi_dadd>
 800525a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800525c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800525e:	0004      	movs	r4, r0
 8005260:	000d      	movs	r5, r1
 8005262:	f7fb f90d 	bl	8000480 <__aeabi_dcmpgt>
 8005266:	2800      	cmp	r0, #0
 8005268:	d11b      	bne.n	80052a2 <_dtoa_r+0x74e>
 800526a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800526c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800526e:	0020      	movs	r0, r4
 8005270:	0029      	movs	r1, r5
 8005272:	f7fb f8eb 	bl	800044c <__aeabi_dcmpeq>
 8005276:	2800      	cmp	r0, #0
 8005278:	d002      	beq.n	8005280 <_dtoa_r+0x72c>
 800527a:	9b07      	ldr	r3, [sp, #28]
 800527c:	07db      	lsls	r3, r3, #31
 800527e:	d410      	bmi.n	80052a2 <_dtoa_r+0x74e>
 8005280:	0038      	movs	r0, r7
 8005282:	9905      	ldr	r1, [sp, #20]
 8005284:	f000 fbec 	bl	8005a60 <_Bfree>
 8005288:	2300      	movs	r3, #0
 800528a:	9a08      	ldr	r2, [sp, #32]
 800528c:	9802      	ldr	r0, [sp, #8]
 800528e:	7013      	strb	r3, [r2, #0]
 8005290:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8005292:	3001      	adds	r0, #1
 8005294:	6018      	str	r0, [r3, #0]
 8005296:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005298:	2b00      	cmp	r3, #0
 800529a:	d100      	bne.n	800529e <_dtoa_r+0x74a>
 800529c:	e4a6      	b.n	8004bec <_dtoa_r+0x98>
 800529e:	601a      	str	r2, [r3, #0]
 80052a0:	e4a4      	b.n	8004bec <_dtoa_r+0x98>
 80052a2:	9e02      	ldr	r6, [sp, #8]
 80052a4:	9b08      	ldr	r3, [sp, #32]
 80052a6:	9308      	str	r3, [sp, #32]
 80052a8:	3b01      	subs	r3, #1
 80052aa:	781a      	ldrb	r2, [r3, #0]
 80052ac:	2a39      	cmp	r2, #57	; 0x39
 80052ae:	d106      	bne.n	80052be <_dtoa_r+0x76a>
 80052b0:	9a06      	ldr	r2, [sp, #24]
 80052b2:	429a      	cmp	r2, r3
 80052b4:	d1f7      	bne.n	80052a6 <_dtoa_r+0x752>
 80052b6:	2230      	movs	r2, #48	; 0x30
 80052b8:	9906      	ldr	r1, [sp, #24]
 80052ba:	3601      	adds	r6, #1
 80052bc:	700a      	strb	r2, [r1, #0]
 80052be:	781a      	ldrb	r2, [r3, #0]
 80052c0:	3201      	adds	r2, #1
 80052c2:	701a      	strb	r2, [r3, #0]
 80052c4:	e784      	b.n	80051d0 <_dtoa_r+0x67c>
 80052c6:	2200      	movs	r2, #0
 80052c8:	4baa      	ldr	r3, [pc, #680]	; (8005574 <_dtoa_r+0xa20>)
 80052ca:	f7fc f945 	bl	8001558 <__aeabi_dmul>
 80052ce:	2200      	movs	r2, #0
 80052d0:	2300      	movs	r3, #0
 80052d2:	0004      	movs	r4, r0
 80052d4:	000d      	movs	r5, r1
 80052d6:	f7fb f8b9 	bl	800044c <__aeabi_dcmpeq>
 80052da:	2800      	cmp	r0, #0
 80052dc:	d09b      	beq.n	8005216 <_dtoa_r+0x6c2>
 80052de:	e7cf      	b.n	8005280 <_dtoa_r+0x72c>
 80052e0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80052e2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80052e4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80052e6:	2d00      	cmp	r5, #0
 80052e8:	d012      	beq.n	8005310 <_dtoa_r+0x7bc>
 80052ea:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80052ec:	2a01      	cmp	r2, #1
 80052ee:	dc66      	bgt.n	80053be <_dtoa_r+0x86a>
 80052f0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80052f2:	2a00      	cmp	r2, #0
 80052f4:	d05d      	beq.n	80053b2 <_dtoa_r+0x85e>
 80052f6:	4aa0      	ldr	r2, [pc, #640]	; (8005578 <_dtoa_r+0xa24>)
 80052f8:	189b      	adds	r3, r3, r2
 80052fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80052fc:	2101      	movs	r1, #1
 80052fe:	18d2      	adds	r2, r2, r3
 8005300:	920a      	str	r2, [sp, #40]	; 0x28
 8005302:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005304:	0038      	movs	r0, r7
 8005306:	18d3      	adds	r3, r2, r3
 8005308:	930d      	str	r3, [sp, #52]	; 0x34
 800530a:	f000 fc59 	bl	8005bc0 <__i2b>
 800530e:	0005      	movs	r5, r0
 8005310:	2c00      	cmp	r4, #0
 8005312:	dd0e      	ble.n	8005332 <_dtoa_r+0x7de>
 8005314:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005316:	2b00      	cmp	r3, #0
 8005318:	dd0b      	ble.n	8005332 <_dtoa_r+0x7de>
 800531a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800531c:	0023      	movs	r3, r4
 800531e:	4294      	cmp	r4, r2
 8005320:	dd00      	ble.n	8005324 <_dtoa_r+0x7d0>
 8005322:	0013      	movs	r3, r2
 8005324:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005326:	1ae4      	subs	r4, r4, r3
 8005328:	1ad2      	subs	r2, r2, r3
 800532a:	920a      	str	r2, [sp, #40]	; 0x28
 800532c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800532e:	1ad3      	subs	r3, r2, r3
 8005330:	930d      	str	r3, [sp, #52]	; 0x34
 8005332:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005334:	2b00      	cmp	r3, #0
 8005336:	d01f      	beq.n	8005378 <_dtoa_r+0x824>
 8005338:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800533a:	2b00      	cmp	r3, #0
 800533c:	d054      	beq.n	80053e8 <_dtoa_r+0x894>
 800533e:	2e00      	cmp	r6, #0
 8005340:	dd11      	ble.n	8005366 <_dtoa_r+0x812>
 8005342:	0029      	movs	r1, r5
 8005344:	0032      	movs	r2, r6
 8005346:	0038      	movs	r0, r7
 8005348:	f000 fd00 	bl	8005d4c <__pow5mult>
 800534c:	9a05      	ldr	r2, [sp, #20]
 800534e:	0001      	movs	r1, r0
 8005350:	0005      	movs	r5, r0
 8005352:	0038      	movs	r0, r7
 8005354:	f000 fc4a 	bl	8005bec <__multiply>
 8005358:	9905      	ldr	r1, [sp, #20]
 800535a:	9014      	str	r0, [sp, #80]	; 0x50
 800535c:	0038      	movs	r0, r7
 800535e:	f000 fb7f 	bl	8005a60 <_Bfree>
 8005362:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005364:	9305      	str	r3, [sp, #20]
 8005366:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005368:	1b9a      	subs	r2, r3, r6
 800536a:	42b3      	cmp	r3, r6
 800536c:	d004      	beq.n	8005378 <_dtoa_r+0x824>
 800536e:	0038      	movs	r0, r7
 8005370:	9905      	ldr	r1, [sp, #20]
 8005372:	f000 fceb 	bl	8005d4c <__pow5mult>
 8005376:	9005      	str	r0, [sp, #20]
 8005378:	2101      	movs	r1, #1
 800537a:	0038      	movs	r0, r7
 800537c:	f000 fc20 	bl	8005bc0 <__i2b>
 8005380:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005382:	0006      	movs	r6, r0
 8005384:	2b00      	cmp	r3, #0
 8005386:	dd31      	ble.n	80053ec <_dtoa_r+0x898>
 8005388:	001a      	movs	r2, r3
 800538a:	0001      	movs	r1, r0
 800538c:	0038      	movs	r0, r7
 800538e:	f000 fcdd 	bl	8005d4c <__pow5mult>
 8005392:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005394:	0006      	movs	r6, r0
 8005396:	2b01      	cmp	r3, #1
 8005398:	dd2d      	ble.n	80053f6 <_dtoa_r+0x8a2>
 800539a:	2300      	movs	r3, #0
 800539c:	930e      	str	r3, [sp, #56]	; 0x38
 800539e:	6933      	ldr	r3, [r6, #16]
 80053a0:	3303      	adds	r3, #3
 80053a2:	009b      	lsls	r3, r3, #2
 80053a4:	18f3      	adds	r3, r6, r3
 80053a6:	6858      	ldr	r0, [r3, #4]
 80053a8:	f000 fbc2 	bl	8005b30 <__hi0bits>
 80053ac:	2320      	movs	r3, #32
 80053ae:	1a18      	subs	r0, r3, r0
 80053b0:	e039      	b.n	8005426 <_dtoa_r+0x8d2>
 80053b2:	2336      	movs	r3, #54	; 0x36
 80053b4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80053b6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80053b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80053ba:	1a9b      	subs	r3, r3, r2
 80053bc:	e79d      	b.n	80052fa <_dtoa_r+0x7a6>
 80053be:	9b07      	ldr	r3, [sp, #28]
 80053c0:	1e5e      	subs	r6, r3, #1
 80053c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80053c4:	42b3      	cmp	r3, r6
 80053c6:	db07      	blt.n	80053d8 <_dtoa_r+0x884>
 80053c8:	1b9e      	subs	r6, r3, r6
 80053ca:	9b07      	ldr	r3, [sp, #28]
 80053cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	da93      	bge.n	80052fa <_dtoa_r+0x7a6>
 80053d2:	1ae4      	subs	r4, r4, r3
 80053d4:	2300      	movs	r3, #0
 80053d6:	e790      	b.n	80052fa <_dtoa_r+0x7a6>
 80053d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80053da:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80053dc:	1af3      	subs	r3, r6, r3
 80053de:	18d3      	adds	r3, r2, r3
 80053e0:	960e      	str	r6, [sp, #56]	; 0x38
 80053e2:	9315      	str	r3, [sp, #84]	; 0x54
 80053e4:	2600      	movs	r6, #0
 80053e6:	e7f0      	b.n	80053ca <_dtoa_r+0x876>
 80053e8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80053ea:	e7c0      	b.n	800536e <_dtoa_r+0x81a>
 80053ec:	2300      	movs	r3, #0
 80053ee:	930e      	str	r3, [sp, #56]	; 0x38
 80053f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80053f2:	2b01      	cmp	r3, #1
 80053f4:	dc13      	bgt.n	800541e <_dtoa_r+0x8ca>
 80053f6:	2300      	movs	r3, #0
 80053f8:	930e      	str	r3, [sp, #56]	; 0x38
 80053fa:	9b08      	ldr	r3, [sp, #32]
 80053fc:	2b00      	cmp	r3, #0
 80053fe:	d10e      	bne.n	800541e <_dtoa_r+0x8ca>
 8005400:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005402:	031b      	lsls	r3, r3, #12
 8005404:	d10b      	bne.n	800541e <_dtoa_r+0x8ca>
 8005406:	4b5d      	ldr	r3, [pc, #372]	; (800557c <_dtoa_r+0xa28>)
 8005408:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800540a:	4213      	tst	r3, r2
 800540c:	d007      	beq.n	800541e <_dtoa_r+0x8ca>
 800540e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005410:	3301      	adds	r3, #1
 8005412:	930a      	str	r3, [sp, #40]	; 0x28
 8005414:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005416:	3301      	adds	r3, #1
 8005418:	930d      	str	r3, [sp, #52]	; 0x34
 800541a:	2301      	movs	r3, #1
 800541c:	930e      	str	r3, [sp, #56]	; 0x38
 800541e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005420:	2001      	movs	r0, #1
 8005422:	2b00      	cmp	r3, #0
 8005424:	d1bb      	bne.n	800539e <_dtoa_r+0x84a>
 8005426:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005428:	221f      	movs	r2, #31
 800542a:	1818      	adds	r0, r3, r0
 800542c:	0003      	movs	r3, r0
 800542e:	4013      	ands	r3, r2
 8005430:	4210      	tst	r0, r2
 8005432:	d046      	beq.n	80054c2 <_dtoa_r+0x96e>
 8005434:	3201      	adds	r2, #1
 8005436:	1ad2      	subs	r2, r2, r3
 8005438:	2a04      	cmp	r2, #4
 800543a:	dd3f      	ble.n	80054bc <_dtoa_r+0x968>
 800543c:	221c      	movs	r2, #28
 800543e:	1ad3      	subs	r3, r2, r3
 8005440:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005442:	18e4      	adds	r4, r4, r3
 8005444:	18d2      	adds	r2, r2, r3
 8005446:	920a      	str	r2, [sp, #40]	; 0x28
 8005448:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800544a:	18d3      	adds	r3, r2, r3
 800544c:	930d      	str	r3, [sp, #52]	; 0x34
 800544e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005450:	2b00      	cmp	r3, #0
 8005452:	dd05      	ble.n	8005460 <_dtoa_r+0x90c>
 8005454:	001a      	movs	r2, r3
 8005456:	0038      	movs	r0, r7
 8005458:	9905      	ldr	r1, [sp, #20]
 800545a:	f000 fcd3 	bl	8005e04 <__lshift>
 800545e:	9005      	str	r0, [sp, #20]
 8005460:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005462:	2b00      	cmp	r3, #0
 8005464:	dd05      	ble.n	8005472 <_dtoa_r+0x91e>
 8005466:	0031      	movs	r1, r6
 8005468:	001a      	movs	r2, r3
 800546a:	0038      	movs	r0, r7
 800546c:	f000 fcca 	bl	8005e04 <__lshift>
 8005470:	0006      	movs	r6, r0
 8005472:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005474:	2b00      	cmp	r3, #0
 8005476:	d026      	beq.n	80054c6 <_dtoa_r+0x972>
 8005478:	0031      	movs	r1, r6
 800547a:	9805      	ldr	r0, [sp, #20]
 800547c:	f000 fd30 	bl	8005ee0 <__mcmp>
 8005480:	2800      	cmp	r0, #0
 8005482:	da20      	bge.n	80054c6 <_dtoa_r+0x972>
 8005484:	9b02      	ldr	r3, [sp, #8]
 8005486:	220a      	movs	r2, #10
 8005488:	3b01      	subs	r3, #1
 800548a:	9302      	str	r3, [sp, #8]
 800548c:	0038      	movs	r0, r7
 800548e:	2300      	movs	r3, #0
 8005490:	9905      	ldr	r1, [sp, #20]
 8005492:	f000 fb09 	bl	8005aa8 <__multadd>
 8005496:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005498:	9005      	str	r0, [sp, #20]
 800549a:	2b00      	cmp	r3, #0
 800549c:	d100      	bne.n	80054a0 <_dtoa_r+0x94c>
 800549e:	e166      	b.n	800576e <_dtoa_r+0xc1a>
 80054a0:	2300      	movs	r3, #0
 80054a2:	0029      	movs	r1, r5
 80054a4:	220a      	movs	r2, #10
 80054a6:	0038      	movs	r0, r7
 80054a8:	f000 fafe 	bl	8005aa8 <__multadd>
 80054ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80054ae:	0005      	movs	r5, r0
 80054b0:	2b00      	cmp	r3, #0
 80054b2:	dc47      	bgt.n	8005544 <_dtoa_r+0x9f0>
 80054b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80054b6:	2b02      	cmp	r3, #2
 80054b8:	dc0d      	bgt.n	80054d6 <_dtoa_r+0x982>
 80054ba:	e043      	b.n	8005544 <_dtoa_r+0x9f0>
 80054bc:	2a04      	cmp	r2, #4
 80054be:	d0c6      	beq.n	800544e <_dtoa_r+0x8fa>
 80054c0:	0013      	movs	r3, r2
 80054c2:	331c      	adds	r3, #28
 80054c4:	e7bc      	b.n	8005440 <_dtoa_r+0x8ec>
 80054c6:	9b07      	ldr	r3, [sp, #28]
 80054c8:	2b00      	cmp	r3, #0
 80054ca:	dc35      	bgt.n	8005538 <_dtoa_r+0x9e4>
 80054cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80054ce:	2b02      	cmp	r3, #2
 80054d0:	dd32      	ble.n	8005538 <_dtoa_r+0x9e4>
 80054d2:	9b07      	ldr	r3, [sp, #28]
 80054d4:	930c      	str	r3, [sp, #48]	; 0x30
 80054d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d10c      	bne.n	80054f6 <_dtoa_r+0x9a2>
 80054dc:	0031      	movs	r1, r6
 80054de:	2205      	movs	r2, #5
 80054e0:	0038      	movs	r0, r7
 80054e2:	f000 fae1 	bl	8005aa8 <__multadd>
 80054e6:	0006      	movs	r6, r0
 80054e8:	0001      	movs	r1, r0
 80054ea:	9805      	ldr	r0, [sp, #20]
 80054ec:	f000 fcf8 	bl	8005ee0 <__mcmp>
 80054f0:	2800      	cmp	r0, #0
 80054f2:	dd00      	ble.n	80054f6 <_dtoa_r+0x9a2>
 80054f4:	e5a5      	b.n	8005042 <_dtoa_r+0x4ee>
 80054f6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80054f8:	43db      	mvns	r3, r3
 80054fa:	9302      	str	r3, [sp, #8]
 80054fc:	9b06      	ldr	r3, [sp, #24]
 80054fe:	9308      	str	r3, [sp, #32]
 8005500:	2400      	movs	r4, #0
 8005502:	0031      	movs	r1, r6
 8005504:	0038      	movs	r0, r7
 8005506:	f000 faab 	bl	8005a60 <_Bfree>
 800550a:	2d00      	cmp	r5, #0
 800550c:	d100      	bne.n	8005510 <_dtoa_r+0x9bc>
 800550e:	e6b7      	b.n	8005280 <_dtoa_r+0x72c>
 8005510:	2c00      	cmp	r4, #0
 8005512:	d005      	beq.n	8005520 <_dtoa_r+0x9cc>
 8005514:	42ac      	cmp	r4, r5
 8005516:	d003      	beq.n	8005520 <_dtoa_r+0x9cc>
 8005518:	0021      	movs	r1, r4
 800551a:	0038      	movs	r0, r7
 800551c:	f000 faa0 	bl	8005a60 <_Bfree>
 8005520:	0029      	movs	r1, r5
 8005522:	0038      	movs	r0, r7
 8005524:	f000 fa9c 	bl	8005a60 <_Bfree>
 8005528:	e6aa      	b.n	8005280 <_dtoa_r+0x72c>
 800552a:	2600      	movs	r6, #0
 800552c:	0035      	movs	r5, r6
 800552e:	e7e2      	b.n	80054f6 <_dtoa_r+0x9a2>
 8005530:	9602      	str	r6, [sp, #8]
 8005532:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8005534:	0035      	movs	r5, r6
 8005536:	e584      	b.n	8005042 <_dtoa_r+0x4ee>
 8005538:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800553a:	2b00      	cmp	r3, #0
 800553c:	d100      	bne.n	8005540 <_dtoa_r+0x9ec>
 800553e:	e0ce      	b.n	80056de <_dtoa_r+0xb8a>
 8005540:	9b07      	ldr	r3, [sp, #28]
 8005542:	930c      	str	r3, [sp, #48]	; 0x30
 8005544:	2c00      	cmp	r4, #0
 8005546:	dd05      	ble.n	8005554 <_dtoa_r+0xa00>
 8005548:	0029      	movs	r1, r5
 800554a:	0022      	movs	r2, r4
 800554c:	0038      	movs	r0, r7
 800554e:	f000 fc59 	bl	8005e04 <__lshift>
 8005552:	0005      	movs	r5, r0
 8005554:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005556:	0028      	movs	r0, r5
 8005558:	2b00      	cmp	r3, #0
 800555a:	d022      	beq.n	80055a2 <_dtoa_r+0xa4e>
 800555c:	0038      	movs	r0, r7
 800555e:	6869      	ldr	r1, [r5, #4]
 8005560:	f000 fa3a 	bl	80059d8 <_Balloc>
 8005564:	1e04      	subs	r4, r0, #0
 8005566:	d10f      	bne.n	8005588 <_dtoa_r+0xa34>
 8005568:	0002      	movs	r2, r0
 800556a:	4b05      	ldr	r3, [pc, #20]	; (8005580 <_dtoa_r+0xa2c>)
 800556c:	4905      	ldr	r1, [pc, #20]	; (8005584 <_dtoa_r+0xa30>)
 800556e:	f7ff fb06 	bl	8004b7e <_dtoa_r+0x2a>
 8005572:	46c0      	nop			; (mov r8, r8)
 8005574:	40240000 	.word	0x40240000
 8005578:	00000433 	.word	0x00000433
 800557c:	7ff00000 	.word	0x7ff00000
 8005580:	08006e7f 	.word	0x08006e7f
 8005584:	000002ea 	.word	0x000002ea
 8005588:	0029      	movs	r1, r5
 800558a:	692b      	ldr	r3, [r5, #16]
 800558c:	310c      	adds	r1, #12
 800558e:	1c9a      	adds	r2, r3, #2
 8005590:	0092      	lsls	r2, r2, #2
 8005592:	300c      	adds	r0, #12
 8005594:	f000 fa17 	bl	80059c6 <memcpy>
 8005598:	2201      	movs	r2, #1
 800559a:	0021      	movs	r1, r4
 800559c:	0038      	movs	r0, r7
 800559e:	f000 fc31 	bl	8005e04 <__lshift>
 80055a2:	9b06      	ldr	r3, [sp, #24]
 80055a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80055a6:	930a      	str	r3, [sp, #40]	; 0x28
 80055a8:	3b01      	subs	r3, #1
 80055aa:	189b      	adds	r3, r3, r2
 80055ac:	2201      	movs	r2, #1
 80055ae:	002c      	movs	r4, r5
 80055b0:	0005      	movs	r5, r0
 80055b2:	9314      	str	r3, [sp, #80]	; 0x50
 80055b4:	9b08      	ldr	r3, [sp, #32]
 80055b6:	4013      	ands	r3, r2
 80055b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80055ba:	0031      	movs	r1, r6
 80055bc:	9805      	ldr	r0, [sp, #20]
 80055be:	f7ff fa3d 	bl	8004a3c <quorem>
 80055c2:	0003      	movs	r3, r0
 80055c4:	0021      	movs	r1, r4
 80055c6:	3330      	adds	r3, #48	; 0x30
 80055c8:	900d      	str	r0, [sp, #52]	; 0x34
 80055ca:	9805      	ldr	r0, [sp, #20]
 80055cc:	9307      	str	r3, [sp, #28]
 80055ce:	f000 fc87 	bl	8005ee0 <__mcmp>
 80055d2:	002a      	movs	r2, r5
 80055d4:	900e      	str	r0, [sp, #56]	; 0x38
 80055d6:	0031      	movs	r1, r6
 80055d8:	0038      	movs	r0, r7
 80055da:	f000 fc9d 	bl	8005f18 <__mdiff>
 80055de:	68c3      	ldr	r3, [r0, #12]
 80055e0:	9008      	str	r0, [sp, #32]
 80055e2:	9310      	str	r3, [sp, #64]	; 0x40
 80055e4:	2301      	movs	r3, #1
 80055e6:	930c      	str	r3, [sp, #48]	; 0x30
 80055e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80055ea:	2b00      	cmp	r3, #0
 80055ec:	d104      	bne.n	80055f8 <_dtoa_r+0xaa4>
 80055ee:	0001      	movs	r1, r0
 80055f0:	9805      	ldr	r0, [sp, #20]
 80055f2:	f000 fc75 	bl	8005ee0 <__mcmp>
 80055f6:	900c      	str	r0, [sp, #48]	; 0x30
 80055f8:	0038      	movs	r0, r7
 80055fa:	9908      	ldr	r1, [sp, #32]
 80055fc:	f000 fa30 	bl	8005a60 <_Bfree>
 8005600:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005602:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005604:	3301      	adds	r3, #1
 8005606:	9308      	str	r3, [sp, #32]
 8005608:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800560a:	4313      	orrs	r3, r2
 800560c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800560e:	4313      	orrs	r3, r2
 8005610:	d10c      	bne.n	800562c <_dtoa_r+0xad8>
 8005612:	9b07      	ldr	r3, [sp, #28]
 8005614:	2b39      	cmp	r3, #57	; 0x39
 8005616:	d026      	beq.n	8005666 <_dtoa_r+0xb12>
 8005618:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800561a:	2b00      	cmp	r3, #0
 800561c:	dd02      	ble.n	8005624 <_dtoa_r+0xad0>
 800561e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005620:	3331      	adds	r3, #49	; 0x31
 8005622:	9307      	str	r3, [sp, #28]
 8005624:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005626:	9a07      	ldr	r2, [sp, #28]
 8005628:	701a      	strb	r2, [r3, #0]
 800562a:	e76a      	b.n	8005502 <_dtoa_r+0x9ae>
 800562c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800562e:	2b00      	cmp	r3, #0
 8005630:	db04      	blt.n	800563c <_dtoa_r+0xae8>
 8005632:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005634:	4313      	orrs	r3, r2
 8005636:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005638:	4313      	orrs	r3, r2
 800563a:	d11f      	bne.n	800567c <_dtoa_r+0xb28>
 800563c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800563e:	2b00      	cmp	r3, #0
 8005640:	ddf0      	ble.n	8005624 <_dtoa_r+0xad0>
 8005642:	9905      	ldr	r1, [sp, #20]
 8005644:	2201      	movs	r2, #1
 8005646:	0038      	movs	r0, r7
 8005648:	f000 fbdc 	bl	8005e04 <__lshift>
 800564c:	0031      	movs	r1, r6
 800564e:	9005      	str	r0, [sp, #20]
 8005650:	f000 fc46 	bl	8005ee0 <__mcmp>
 8005654:	2800      	cmp	r0, #0
 8005656:	dc03      	bgt.n	8005660 <_dtoa_r+0xb0c>
 8005658:	d1e4      	bne.n	8005624 <_dtoa_r+0xad0>
 800565a:	9b07      	ldr	r3, [sp, #28]
 800565c:	07db      	lsls	r3, r3, #31
 800565e:	d5e1      	bpl.n	8005624 <_dtoa_r+0xad0>
 8005660:	9b07      	ldr	r3, [sp, #28]
 8005662:	2b39      	cmp	r3, #57	; 0x39
 8005664:	d1db      	bne.n	800561e <_dtoa_r+0xaca>
 8005666:	2339      	movs	r3, #57	; 0x39
 8005668:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800566a:	7013      	strb	r3, [r2, #0]
 800566c:	9b08      	ldr	r3, [sp, #32]
 800566e:	9308      	str	r3, [sp, #32]
 8005670:	3b01      	subs	r3, #1
 8005672:	781a      	ldrb	r2, [r3, #0]
 8005674:	2a39      	cmp	r2, #57	; 0x39
 8005676:	d068      	beq.n	800574a <_dtoa_r+0xbf6>
 8005678:	3201      	adds	r2, #1
 800567a:	e7d5      	b.n	8005628 <_dtoa_r+0xad4>
 800567c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800567e:	2b00      	cmp	r3, #0
 8005680:	dd07      	ble.n	8005692 <_dtoa_r+0xb3e>
 8005682:	9b07      	ldr	r3, [sp, #28]
 8005684:	2b39      	cmp	r3, #57	; 0x39
 8005686:	d0ee      	beq.n	8005666 <_dtoa_r+0xb12>
 8005688:	9b07      	ldr	r3, [sp, #28]
 800568a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800568c:	3301      	adds	r3, #1
 800568e:	7013      	strb	r3, [r2, #0]
 8005690:	e737      	b.n	8005502 <_dtoa_r+0x9ae>
 8005692:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005694:	9a07      	ldr	r2, [sp, #28]
 8005696:	701a      	strb	r2, [r3, #0]
 8005698:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800569a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800569c:	4293      	cmp	r3, r2
 800569e:	d03e      	beq.n	800571e <_dtoa_r+0xbca>
 80056a0:	2300      	movs	r3, #0
 80056a2:	220a      	movs	r2, #10
 80056a4:	9905      	ldr	r1, [sp, #20]
 80056a6:	0038      	movs	r0, r7
 80056a8:	f000 f9fe 	bl	8005aa8 <__multadd>
 80056ac:	2300      	movs	r3, #0
 80056ae:	9005      	str	r0, [sp, #20]
 80056b0:	220a      	movs	r2, #10
 80056b2:	0021      	movs	r1, r4
 80056b4:	0038      	movs	r0, r7
 80056b6:	42ac      	cmp	r4, r5
 80056b8:	d106      	bne.n	80056c8 <_dtoa_r+0xb74>
 80056ba:	f000 f9f5 	bl	8005aa8 <__multadd>
 80056be:	0004      	movs	r4, r0
 80056c0:	0005      	movs	r5, r0
 80056c2:	9b08      	ldr	r3, [sp, #32]
 80056c4:	930a      	str	r3, [sp, #40]	; 0x28
 80056c6:	e778      	b.n	80055ba <_dtoa_r+0xa66>
 80056c8:	f000 f9ee 	bl	8005aa8 <__multadd>
 80056cc:	0029      	movs	r1, r5
 80056ce:	0004      	movs	r4, r0
 80056d0:	2300      	movs	r3, #0
 80056d2:	220a      	movs	r2, #10
 80056d4:	0038      	movs	r0, r7
 80056d6:	f000 f9e7 	bl	8005aa8 <__multadd>
 80056da:	0005      	movs	r5, r0
 80056dc:	e7f1      	b.n	80056c2 <_dtoa_r+0xb6e>
 80056de:	9b07      	ldr	r3, [sp, #28]
 80056e0:	930c      	str	r3, [sp, #48]	; 0x30
 80056e2:	2400      	movs	r4, #0
 80056e4:	0031      	movs	r1, r6
 80056e6:	9805      	ldr	r0, [sp, #20]
 80056e8:	f7ff f9a8 	bl	8004a3c <quorem>
 80056ec:	9b06      	ldr	r3, [sp, #24]
 80056ee:	3030      	adds	r0, #48	; 0x30
 80056f0:	5518      	strb	r0, [r3, r4]
 80056f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80056f4:	3401      	adds	r4, #1
 80056f6:	9007      	str	r0, [sp, #28]
 80056f8:	42a3      	cmp	r3, r4
 80056fa:	dd07      	ble.n	800570c <_dtoa_r+0xbb8>
 80056fc:	2300      	movs	r3, #0
 80056fe:	220a      	movs	r2, #10
 8005700:	0038      	movs	r0, r7
 8005702:	9905      	ldr	r1, [sp, #20]
 8005704:	f000 f9d0 	bl	8005aa8 <__multadd>
 8005708:	9005      	str	r0, [sp, #20]
 800570a:	e7eb      	b.n	80056e4 <_dtoa_r+0xb90>
 800570c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800570e:	2001      	movs	r0, #1
 8005710:	2b00      	cmp	r3, #0
 8005712:	dd00      	ble.n	8005716 <_dtoa_r+0xbc2>
 8005714:	0018      	movs	r0, r3
 8005716:	2400      	movs	r4, #0
 8005718:	9b06      	ldr	r3, [sp, #24]
 800571a:	181b      	adds	r3, r3, r0
 800571c:	9308      	str	r3, [sp, #32]
 800571e:	9905      	ldr	r1, [sp, #20]
 8005720:	2201      	movs	r2, #1
 8005722:	0038      	movs	r0, r7
 8005724:	f000 fb6e 	bl	8005e04 <__lshift>
 8005728:	0031      	movs	r1, r6
 800572a:	9005      	str	r0, [sp, #20]
 800572c:	f000 fbd8 	bl	8005ee0 <__mcmp>
 8005730:	2800      	cmp	r0, #0
 8005732:	dc9b      	bgt.n	800566c <_dtoa_r+0xb18>
 8005734:	d102      	bne.n	800573c <_dtoa_r+0xbe8>
 8005736:	9b07      	ldr	r3, [sp, #28]
 8005738:	07db      	lsls	r3, r3, #31
 800573a:	d497      	bmi.n	800566c <_dtoa_r+0xb18>
 800573c:	9b08      	ldr	r3, [sp, #32]
 800573e:	9308      	str	r3, [sp, #32]
 8005740:	3b01      	subs	r3, #1
 8005742:	781a      	ldrb	r2, [r3, #0]
 8005744:	2a30      	cmp	r2, #48	; 0x30
 8005746:	d0fa      	beq.n	800573e <_dtoa_r+0xbea>
 8005748:	e6db      	b.n	8005502 <_dtoa_r+0x9ae>
 800574a:	9a06      	ldr	r2, [sp, #24]
 800574c:	429a      	cmp	r2, r3
 800574e:	d18e      	bne.n	800566e <_dtoa_r+0xb1a>
 8005750:	9b02      	ldr	r3, [sp, #8]
 8005752:	3301      	adds	r3, #1
 8005754:	9302      	str	r3, [sp, #8]
 8005756:	2331      	movs	r3, #49	; 0x31
 8005758:	e799      	b.n	800568e <_dtoa_r+0xb3a>
 800575a:	4b09      	ldr	r3, [pc, #36]	; (8005780 <_dtoa_r+0xc2c>)
 800575c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800575e:	9306      	str	r3, [sp, #24]
 8005760:	4b08      	ldr	r3, [pc, #32]	; (8005784 <_dtoa_r+0xc30>)
 8005762:	2a00      	cmp	r2, #0
 8005764:	d001      	beq.n	800576a <_dtoa_r+0xc16>
 8005766:	f7ff fa3f 	bl	8004be8 <_dtoa_r+0x94>
 800576a:	f7ff fa3f 	bl	8004bec <_dtoa_r+0x98>
 800576e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005770:	2b00      	cmp	r3, #0
 8005772:	dcb6      	bgt.n	80056e2 <_dtoa_r+0xb8e>
 8005774:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005776:	2b02      	cmp	r3, #2
 8005778:	dd00      	ble.n	800577c <_dtoa_r+0xc28>
 800577a:	e6ac      	b.n	80054d6 <_dtoa_r+0x982>
 800577c:	e7b1      	b.n	80056e2 <_dtoa_r+0xb8e>
 800577e:	46c0      	nop			; (mov r8, r8)
 8005780:	08006e00 	.word	0x08006e00
 8005784:	08006e08 	.word	0x08006e08

08005788 <std>:
 8005788:	2300      	movs	r3, #0
 800578a:	b510      	push	{r4, lr}
 800578c:	0004      	movs	r4, r0
 800578e:	6003      	str	r3, [r0, #0]
 8005790:	6043      	str	r3, [r0, #4]
 8005792:	6083      	str	r3, [r0, #8]
 8005794:	8181      	strh	r1, [r0, #12]
 8005796:	6643      	str	r3, [r0, #100]	; 0x64
 8005798:	0019      	movs	r1, r3
 800579a:	81c2      	strh	r2, [r0, #14]
 800579c:	6103      	str	r3, [r0, #16]
 800579e:	6143      	str	r3, [r0, #20]
 80057a0:	6183      	str	r3, [r0, #24]
 80057a2:	2208      	movs	r2, #8
 80057a4:	305c      	adds	r0, #92	; 0x5c
 80057a6:	f7fe fcb9 	bl	800411c <memset>
 80057aa:	4b05      	ldr	r3, [pc, #20]	; (80057c0 <std+0x38>)
 80057ac:	6224      	str	r4, [r4, #32]
 80057ae:	6263      	str	r3, [r4, #36]	; 0x24
 80057b0:	4b04      	ldr	r3, [pc, #16]	; (80057c4 <std+0x3c>)
 80057b2:	62a3      	str	r3, [r4, #40]	; 0x28
 80057b4:	4b04      	ldr	r3, [pc, #16]	; (80057c8 <std+0x40>)
 80057b6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80057b8:	4b04      	ldr	r3, [pc, #16]	; (80057cc <std+0x44>)
 80057ba:	6323      	str	r3, [r4, #48]	; 0x30
 80057bc:	bd10      	pop	{r4, pc}
 80057be:	46c0      	nop			; (mov r8, r8)
 80057c0:	08006615 	.word	0x08006615
 80057c4:	0800663d 	.word	0x0800663d
 80057c8:	08006675 	.word	0x08006675
 80057cc:	080066a1 	.word	0x080066a1

080057d0 <_cleanup_r>:
 80057d0:	b510      	push	{r4, lr}
 80057d2:	4902      	ldr	r1, [pc, #8]	; (80057dc <_cleanup_r+0xc>)
 80057d4:	f000 f8ba 	bl	800594c <_fwalk_reent>
 80057d8:	bd10      	pop	{r4, pc}
 80057da:	46c0      	nop			; (mov r8, r8)
 80057dc:	080069e9 	.word	0x080069e9

080057e0 <__sfmoreglue>:
 80057e0:	b570      	push	{r4, r5, r6, lr}
 80057e2:	2568      	movs	r5, #104	; 0x68
 80057e4:	1e4a      	subs	r2, r1, #1
 80057e6:	4355      	muls	r5, r2
 80057e8:	000e      	movs	r6, r1
 80057ea:	0029      	movs	r1, r5
 80057ec:	3174      	adds	r1, #116	; 0x74
 80057ee:	f000 fd27 	bl	8006240 <_malloc_r>
 80057f2:	1e04      	subs	r4, r0, #0
 80057f4:	d008      	beq.n	8005808 <__sfmoreglue+0x28>
 80057f6:	2100      	movs	r1, #0
 80057f8:	002a      	movs	r2, r5
 80057fa:	6001      	str	r1, [r0, #0]
 80057fc:	6046      	str	r6, [r0, #4]
 80057fe:	300c      	adds	r0, #12
 8005800:	60a0      	str	r0, [r4, #8]
 8005802:	3268      	adds	r2, #104	; 0x68
 8005804:	f7fe fc8a 	bl	800411c <memset>
 8005808:	0020      	movs	r0, r4
 800580a:	bd70      	pop	{r4, r5, r6, pc}

0800580c <__sfp_lock_acquire>:
 800580c:	b510      	push	{r4, lr}
 800580e:	4802      	ldr	r0, [pc, #8]	; (8005818 <__sfp_lock_acquire+0xc>)
 8005810:	f000 f8c1 	bl	8005996 <__retarget_lock_acquire_recursive>
 8005814:	bd10      	pop	{r4, pc}
 8005816:	46c0      	nop			; (mov r8, r8)
 8005818:	2000026d 	.word	0x2000026d

0800581c <__sfp_lock_release>:
 800581c:	b510      	push	{r4, lr}
 800581e:	4802      	ldr	r0, [pc, #8]	; (8005828 <__sfp_lock_release+0xc>)
 8005820:	f000 f8ba 	bl	8005998 <__retarget_lock_release_recursive>
 8005824:	bd10      	pop	{r4, pc}
 8005826:	46c0      	nop			; (mov r8, r8)
 8005828:	2000026d 	.word	0x2000026d

0800582c <__sinit_lock_acquire>:
 800582c:	b510      	push	{r4, lr}
 800582e:	4802      	ldr	r0, [pc, #8]	; (8005838 <__sinit_lock_acquire+0xc>)
 8005830:	f000 f8b1 	bl	8005996 <__retarget_lock_acquire_recursive>
 8005834:	bd10      	pop	{r4, pc}
 8005836:	46c0      	nop			; (mov r8, r8)
 8005838:	2000026e 	.word	0x2000026e

0800583c <__sinit_lock_release>:
 800583c:	b510      	push	{r4, lr}
 800583e:	4802      	ldr	r0, [pc, #8]	; (8005848 <__sinit_lock_release+0xc>)
 8005840:	f000 f8aa 	bl	8005998 <__retarget_lock_release_recursive>
 8005844:	bd10      	pop	{r4, pc}
 8005846:	46c0      	nop			; (mov r8, r8)
 8005848:	2000026e 	.word	0x2000026e

0800584c <__sinit>:
 800584c:	b513      	push	{r0, r1, r4, lr}
 800584e:	0004      	movs	r4, r0
 8005850:	f7ff ffec 	bl	800582c <__sinit_lock_acquire>
 8005854:	69a3      	ldr	r3, [r4, #24]
 8005856:	2b00      	cmp	r3, #0
 8005858:	d002      	beq.n	8005860 <__sinit+0x14>
 800585a:	f7ff ffef 	bl	800583c <__sinit_lock_release>
 800585e:	bd13      	pop	{r0, r1, r4, pc}
 8005860:	64a3      	str	r3, [r4, #72]	; 0x48
 8005862:	64e3      	str	r3, [r4, #76]	; 0x4c
 8005864:	6523      	str	r3, [r4, #80]	; 0x50
 8005866:	4b13      	ldr	r3, [pc, #76]	; (80058b4 <__sinit+0x68>)
 8005868:	4a13      	ldr	r2, [pc, #76]	; (80058b8 <__sinit+0x6c>)
 800586a:	681b      	ldr	r3, [r3, #0]
 800586c:	62a2      	str	r2, [r4, #40]	; 0x28
 800586e:	9301      	str	r3, [sp, #4]
 8005870:	42a3      	cmp	r3, r4
 8005872:	d101      	bne.n	8005878 <__sinit+0x2c>
 8005874:	2301      	movs	r3, #1
 8005876:	61a3      	str	r3, [r4, #24]
 8005878:	0020      	movs	r0, r4
 800587a:	f000 f81f 	bl	80058bc <__sfp>
 800587e:	6060      	str	r0, [r4, #4]
 8005880:	0020      	movs	r0, r4
 8005882:	f000 f81b 	bl	80058bc <__sfp>
 8005886:	60a0      	str	r0, [r4, #8]
 8005888:	0020      	movs	r0, r4
 800588a:	f000 f817 	bl	80058bc <__sfp>
 800588e:	2200      	movs	r2, #0
 8005890:	2104      	movs	r1, #4
 8005892:	60e0      	str	r0, [r4, #12]
 8005894:	6860      	ldr	r0, [r4, #4]
 8005896:	f7ff ff77 	bl	8005788 <std>
 800589a:	2201      	movs	r2, #1
 800589c:	2109      	movs	r1, #9
 800589e:	68a0      	ldr	r0, [r4, #8]
 80058a0:	f7ff ff72 	bl	8005788 <std>
 80058a4:	2202      	movs	r2, #2
 80058a6:	2112      	movs	r1, #18
 80058a8:	68e0      	ldr	r0, [r4, #12]
 80058aa:	f7ff ff6d 	bl	8005788 <std>
 80058ae:	2301      	movs	r3, #1
 80058b0:	61a3      	str	r3, [r4, #24]
 80058b2:	e7d2      	b.n	800585a <__sinit+0xe>
 80058b4:	08006dc8 	.word	0x08006dc8
 80058b8:	080057d1 	.word	0x080057d1

080058bc <__sfp>:
 80058bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80058be:	0007      	movs	r7, r0
 80058c0:	f7ff ffa4 	bl	800580c <__sfp_lock_acquire>
 80058c4:	4b1f      	ldr	r3, [pc, #124]	; (8005944 <__sfp+0x88>)
 80058c6:	681e      	ldr	r6, [r3, #0]
 80058c8:	69b3      	ldr	r3, [r6, #24]
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d102      	bne.n	80058d4 <__sfp+0x18>
 80058ce:	0030      	movs	r0, r6
 80058d0:	f7ff ffbc 	bl	800584c <__sinit>
 80058d4:	3648      	adds	r6, #72	; 0x48
 80058d6:	68b4      	ldr	r4, [r6, #8]
 80058d8:	6873      	ldr	r3, [r6, #4]
 80058da:	3b01      	subs	r3, #1
 80058dc:	d504      	bpl.n	80058e8 <__sfp+0x2c>
 80058de:	6833      	ldr	r3, [r6, #0]
 80058e0:	2b00      	cmp	r3, #0
 80058e2:	d022      	beq.n	800592a <__sfp+0x6e>
 80058e4:	6836      	ldr	r6, [r6, #0]
 80058e6:	e7f6      	b.n	80058d6 <__sfp+0x1a>
 80058e8:	220c      	movs	r2, #12
 80058ea:	5ea5      	ldrsh	r5, [r4, r2]
 80058ec:	2d00      	cmp	r5, #0
 80058ee:	d11a      	bne.n	8005926 <__sfp+0x6a>
 80058f0:	0020      	movs	r0, r4
 80058f2:	4b15      	ldr	r3, [pc, #84]	; (8005948 <__sfp+0x8c>)
 80058f4:	3058      	adds	r0, #88	; 0x58
 80058f6:	60e3      	str	r3, [r4, #12]
 80058f8:	6665      	str	r5, [r4, #100]	; 0x64
 80058fa:	f000 f84b 	bl	8005994 <__retarget_lock_init_recursive>
 80058fe:	f7ff ff8d 	bl	800581c <__sfp_lock_release>
 8005902:	0020      	movs	r0, r4
 8005904:	2208      	movs	r2, #8
 8005906:	0029      	movs	r1, r5
 8005908:	6025      	str	r5, [r4, #0]
 800590a:	60a5      	str	r5, [r4, #8]
 800590c:	6065      	str	r5, [r4, #4]
 800590e:	6125      	str	r5, [r4, #16]
 8005910:	6165      	str	r5, [r4, #20]
 8005912:	61a5      	str	r5, [r4, #24]
 8005914:	305c      	adds	r0, #92	; 0x5c
 8005916:	f7fe fc01 	bl	800411c <memset>
 800591a:	6365      	str	r5, [r4, #52]	; 0x34
 800591c:	63a5      	str	r5, [r4, #56]	; 0x38
 800591e:	64a5      	str	r5, [r4, #72]	; 0x48
 8005920:	64e5      	str	r5, [r4, #76]	; 0x4c
 8005922:	0020      	movs	r0, r4
 8005924:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005926:	3468      	adds	r4, #104	; 0x68
 8005928:	e7d7      	b.n	80058da <__sfp+0x1e>
 800592a:	2104      	movs	r1, #4
 800592c:	0038      	movs	r0, r7
 800592e:	f7ff ff57 	bl	80057e0 <__sfmoreglue>
 8005932:	1e04      	subs	r4, r0, #0
 8005934:	6030      	str	r0, [r6, #0]
 8005936:	d1d5      	bne.n	80058e4 <__sfp+0x28>
 8005938:	f7ff ff70 	bl	800581c <__sfp_lock_release>
 800593c:	230c      	movs	r3, #12
 800593e:	603b      	str	r3, [r7, #0]
 8005940:	e7ef      	b.n	8005922 <__sfp+0x66>
 8005942:	46c0      	nop			; (mov r8, r8)
 8005944:	08006dc8 	.word	0x08006dc8
 8005948:	ffff0001 	.word	0xffff0001

0800594c <_fwalk_reent>:
 800594c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800594e:	0004      	movs	r4, r0
 8005950:	0006      	movs	r6, r0
 8005952:	2700      	movs	r7, #0
 8005954:	9101      	str	r1, [sp, #4]
 8005956:	3448      	adds	r4, #72	; 0x48
 8005958:	6863      	ldr	r3, [r4, #4]
 800595a:	68a5      	ldr	r5, [r4, #8]
 800595c:	9300      	str	r3, [sp, #0]
 800595e:	9b00      	ldr	r3, [sp, #0]
 8005960:	3b01      	subs	r3, #1
 8005962:	9300      	str	r3, [sp, #0]
 8005964:	d504      	bpl.n	8005970 <_fwalk_reent+0x24>
 8005966:	6824      	ldr	r4, [r4, #0]
 8005968:	2c00      	cmp	r4, #0
 800596a:	d1f5      	bne.n	8005958 <_fwalk_reent+0xc>
 800596c:	0038      	movs	r0, r7
 800596e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005970:	89ab      	ldrh	r3, [r5, #12]
 8005972:	2b01      	cmp	r3, #1
 8005974:	d908      	bls.n	8005988 <_fwalk_reent+0x3c>
 8005976:	220e      	movs	r2, #14
 8005978:	5eab      	ldrsh	r3, [r5, r2]
 800597a:	3301      	adds	r3, #1
 800597c:	d004      	beq.n	8005988 <_fwalk_reent+0x3c>
 800597e:	0029      	movs	r1, r5
 8005980:	0030      	movs	r0, r6
 8005982:	9b01      	ldr	r3, [sp, #4]
 8005984:	4798      	blx	r3
 8005986:	4307      	orrs	r7, r0
 8005988:	3568      	adds	r5, #104	; 0x68
 800598a:	e7e8      	b.n	800595e <_fwalk_reent+0x12>

0800598c <_localeconv_r>:
 800598c:	4800      	ldr	r0, [pc, #0]	; (8005990 <_localeconv_r+0x4>)
 800598e:	4770      	bx	lr
 8005990:	20000160 	.word	0x20000160

08005994 <__retarget_lock_init_recursive>:
 8005994:	4770      	bx	lr

08005996 <__retarget_lock_acquire_recursive>:
 8005996:	4770      	bx	lr

08005998 <__retarget_lock_release_recursive>:
 8005998:	4770      	bx	lr
	...

0800599c <malloc>:
 800599c:	b510      	push	{r4, lr}
 800599e:	4b03      	ldr	r3, [pc, #12]	; (80059ac <malloc+0x10>)
 80059a0:	0001      	movs	r1, r0
 80059a2:	6818      	ldr	r0, [r3, #0]
 80059a4:	f000 fc4c 	bl	8006240 <_malloc_r>
 80059a8:	bd10      	pop	{r4, pc}
 80059aa:	46c0      	nop			; (mov r8, r8)
 80059ac:	2000000c 	.word	0x2000000c

080059b0 <memchr>:
 80059b0:	b2c9      	uxtb	r1, r1
 80059b2:	1882      	adds	r2, r0, r2
 80059b4:	4290      	cmp	r0, r2
 80059b6:	d101      	bne.n	80059bc <memchr+0xc>
 80059b8:	2000      	movs	r0, #0
 80059ba:	4770      	bx	lr
 80059bc:	7803      	ldrb	r3, [r0, #0]
 80059be:	428b      	cmp	r3, r1
 80059c0:	d0fb      	beq.n	80059ba <memchr+0xa>
 80059c2:	3001      	adds	r0, #1
 80059c4:	e7f6      	b.n	80059b4 <memchr+0x4>

080059c6 <memcpy>:
 80059c6:	2300      	movs	r3, #0
 80059c8:	b510      	push	{r4, lr}
 80059ca:	429a      	cmp	r2, r3
 80059cc:	d100      	bne.n	80059d0 <memcpy+0xa>
 80059ce:	bd10      	pop	{r4, pc}
 80059d0:	5ccc      	ldrb	r4, [r1, r3]
 80059d2:	54c4      	strb	r4, [r0, r3]
 80059d4:	3301      	adds	r3, #1
 80059d6:	e7f8      	b.n	80059ca <memcpy+0x4>

080059d8 <_Balloc>:
 80059d8:	b570      	push	{r4, r5, r6, lr}
 80059da:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80059dc:	0006      	movs	r6, r0
 80059de:	000c      	movs	r4, r1
 80059e0:	2d00      	cmp	r5, #0
 80059e2:	d10e      	bne.n	8005a02 <_Balloc+0x2a>
 80059e4:	2010      	movs	r0, #16
 80059e6:	f7ff ffd9 	bl	800599c <malloc>
 80059ea:	1e02      	subs	r2, r0, #0
 80059ec:	6270      	str	r0, [r6, #36]	; 0x24
 80059ee:	d104      	bne.n	80059fa <_Balloc+0x22>
 80059f0:	2166      	movs	r1, #102	; 0x66
 80059f2:	4b19      	ldr	r3, [pc, #100]	; (8005a58 <_Balloc+0x80>)
 80059f4:	4819      	ldr	r0, [pc, #100]	; (8005a5c <_Balloc+0x84>)
 80059f6:	f000 ff3b 	bl	8006870 <__assert_func>
 80059fa:	6045      	str	r5, [r0, #4]
 80059fc:	6085      	str	r5, [r0, #8]
 80059fe:	6005      	str	r5, [r0, #0]
 8005a00:	60c5      	str	r5, [r0, #12]
 8005a02:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8005a04:	68eb      	ldr	r3, [r5, #12]
 8005a06:	2b00      	cmp	r3, #0
 8005a08:	d013      	beq.n	8005a32 <_Balloc+0x5a>
 8005a0a:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005a0c:	00a2      	lsls	r2, r4, #2
 8005a0e:	68db      	ldr	r3, [r3, #12]
 8005a10:	189b      	adds	r3, r3, r2
 8005a12:	6818      	ldr	r0, [r3, #0]
 8005a14:	2800      	cmp	r0, #0
 8005a16:	d118      	bne.n	8005a4a <_Balloc+0x72>
 8005a18:	2101      	movs	r1, #1
 8005a1a:	000d      	movs	r5, r1
 8005a1c:	40a5      	lsls	r5, r4
 8005a1e:	1d6a      	adds	r2, r5, #5
 8005a20:	0030      	movs	r0, r6
 8005a22:	0092      	lsls	r2, r2, #2
 8005a24:	f000 fb74 	bl	8006110 <_calloc_r>
 8005a28:	2800      	cmp	r0, #0
 8005a2a:	d00c      	beq.n	8005a46 <_Balloc+0x6e>
 8005a2c:	6044      	str	r4, [r0, #4]
 8005a2e:	6085      	str	r5, [r0, #8]
 8005a30:	e00d      	b.n	8005a4e <_Balloc+0x76>
 8005a32:	2221      	movs	r2, #33	; 0x21
 8005a34:	2104      	movs	r1, #4
 8005a36:	0030      	movs	r0, r6
 8005a38:	f000 fb6a 	bl	8006110 <_calloc_r>
 8005a3c:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005a3e:	60e8      	str	r0, [r5, #12]
 8005a40:	68db      	ldr	r3, [r3, #12]
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	d1e1      	bne.n	8005a0a <_Balloc+0x32>
 8005a46:	2000      	movs	r0, #0
 8005a48:	bd70      	pop	{r4, r5, r6, pc}
 8005a4a:	6802      	ldr	r2, [r0, #0]
 8005a4c:	601a      	str	r2, [r3, #0]
 8005a4e:	2300      	movs	r3, #0
 8005a50:	6103      	str	r3, [r0, #16]
 8005a52:	60c3      	str	r3, [r0, #12]
 8005a54:	e7f8      	b.n	8005a48 <_Balloc+0x70>
 8005a56:	46c0      	nop			; (mov r8, r8)
 8005a58:	08006e0d 	.word	0x08006e0d
 8005a5c:	08006ef0 	.word	0x08006ef0

08005a60 <_Bfree>:
 8005a60:	b570      	push	{r4, r5, r6, lr}
 8005a62:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005a64:	0005      	movs	r5, r0
 8005a66:	000c      	movs	r4, r1
 8005a68:	2e00      	cmp	r6, #0
 8005a6a:	d10e      	bne.n	8005a8a <_Bfree+0x2a>
 8005a6c:	2010      	movs	r0, #16
 8005a6e:	f7ff ff95 	bl	800599c <malloc>
 8005a72:	1e02      	subs	r2, r0, #0
 8005a74:	6268      	str	r0, [r5, #36]	; 0x24
 8005a76:	d104      	bne.n	8005a82 <_Bfree+0x22>
 8005a78:	218a      	movs	r1, #138	; 0x8a
 8005a7a:	4b09      	ldr	r3, [pc, #36]	; (8005aa0 <_Bfree+0x40>)
 8005a7c:	4809      	ldr	r0, [pc, #36]	; (8005aa4 <_Bfree+0x44>)
 8005a7e:	f000 fef7 	bl	8006870 <__assert_func>
 8005a82:	6046      	str	r6, [r0, #4]
 8005a84:	6086      	str	r6, [r0, #8]
 8005a86:	6006      	str	r6, [r0, #0]
 8005a88:	60c6      	str	r6, [r0, #12]
 8005a8a:	2c00      	cmp	r4, #0
 8005a8c:	d007      	beq.n	8005a9e <_Bfree+0x3e>
 8005a8e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005a90:	6862      	ldr	r2, [r4, #4]
 8005a92:	68db      	ldr	r3, [r3, #12]
 8005a94:	0092      	lsls	r2, r2, #2
 8005a96:	189b      	adds	r3, r3, r2
 8005a98:	681a      	ldr	r2, [r3, #0]
 8005a9a:	6022      	str	r2, [r4, #0]
 8005a9c:	601c      	str	r4, [r3, #0]
 8005a9e:	bd70      	pop	{r4, r5, r6, pc}
 8005aa0:	08006e0d 	.word	0x08006e0d
 8005aa4:	08006ef0 	.word	0x08006ef0

08005aa8 <__multadd>:
 8005aa8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005aaa:	000e      	movs	r6, r1
 8005aac:	9001      	str	r0, [sp, #4]
 8005aae:	000c      	movs	r4, r1
 8005ab0:	001d      	movs	r5, r3
 8005ab2:	2000      	movs	r0, #0
 8005ab4:	690f      	ldr	r7, [r1, #16]
 8005ab6:	3614      	adds	r6, #20
 8005ab8:	6833      	ldr	r3, [r6, #0]
 8005aba:	3001      	adds	r0, #1
 8005abc:	b299      	uxth	r1, r3
 8005abe:	4351      	muls	r1, r2
 8005ac0:	0c1b      	lsrs	r3, r3, #16
 8005ac2:	4353      	muls	r3, r2
 8005ac4:	1949      	adds	r1, r1, r5
 8005ac6:	0c0d      	lsrs	r5, r1, #16
 8005ac8:	195b      	adds	r3, r3, r5
 8005aca:	0c1d      	lsrs	r5, r3, #16
 8005acc:	b289      	uxth	r1, r1
 8005ace:	041b      	lsls	r3, r3, #16
 8005ad0:	185b      	adds	r3, r3, r1
 8005ad2:	c608      	stmia	r6!, {r3}
 8005ad4:	4287      	cmp	r7, r0
 8005ad6:	dcef      	bgt.n	8005ab8 <__multadd+0x10>
 8005ad8:	2d00      	cmp	r5, #0
 8005ada:	d022      	beq.n	8005b22 <__multadd+0x7a>
 8005adc:	68a3      	ldr	r3, [r4, #8]
 8005ade:	42bb      	cmp	r3, r7
 8005ae0:	dc19      	bgt.n	8005b16 <__multadd+0x6e>
 8005ae2:	6863      	ldr	r3, [r4, #4]
 8005ae4:	9801      	ldr	r0, [sp, #4]
 8005ae6:	1c59      	adds	r1, r3, #1
 8005ae8:	f7ff ff76 	bl	80059d8 <_Balloc>
 8005aec:	1e06      	subs	r6, r0, #0
 8005aee:	d105      	bne.n	8005afc <__multadd+0x54>
 8005af0:	0002      	movs	r2, r0
 8005af2:	21b5      	movs	r1, #181	; 0xb5
 8005af4:	4b0c      	ldr	r3, [pc, #48]	; (8005b28 <__multadd+0x80>)
 8005af6:	480d      	ldr	r0, [pc, #52]	; (8005b2c <__multadd+0x84>)
 8005af8:	f000 feba 	bl	8006870 <__assert_func>
 8005afc:	0021      	movs	r1, r4
 8005afe:	6923      	ldr	r3, [r4, #16]
 8005b00:	310c      	adds	r1, #12
 8005b02:	1c9a      	adds	r2, r3, #2
 8005b04:	0092      	lsls	r2, r2, #2
 8005b06:	300c      	adds	r0, #12
 8005b08:	f7ff ff5d 	bl	80059c6 <memcpy>
 8005b0c:	0021      	movs	r1, r4
 8005b0e:	9801      	ldr	r0, [sp, #4]
 8005b10:	f7ff ffa6 	bl	8005a60 <_Bfree>
 8005b14:	0034      	movs	r4, r6
 8005b16:	1d3b      	adds	r3, r7, #4
 8005b18:	009b      	lsls	r3, r3, #2
 8005b1a:	18e3      	adds	r3, r4, r3
 8005b1c:	605d      	str	r5, [r3, #4]
 8005b1e:	1c7b      	adds	r3, r7, #1
 8005b20:	6123      	str	r3, [r4, #16]
 8005b22:	0020      	movs	r0, r4
 8005b24:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005b26:	46c0      	nop			; (mov r8, r8)
 8005b28:	08006e7f 	.word	0x08006e7f
 8005b2c:	08006ef0 	.word	0x08006ef0

08005b30 <__hi0bits>:
 8005b30:	0003      	movs	r3, r0
 8005b32:	0c02      	lsrs	r2, r0, #16
 8005b34:	2000      	movs	r0, #0
 8005b36:	4282      	cmp	r2, r0
 8005b38:	d101      	bne.n	8005b3e <__hi0bits+0xe>
 8005b3a:	041b      	lsls	r3, r3, #16
 8005b3c:	3010      	adds	r0, #16
 8005b3e:	0e1a      	lsrs	r2, r3, #24
 8005b40:	d101      	bne.n	8005b46 <__hi0bits+0x16>
 8005b42:	3008      	adds	r0, #8
 8005b44:	021b      	lsls	r3, r3, #8
 8005b46:	0f1a      	lsrs	r2, r3, #28
 8005b48:	d101      	bne.n	8005b4e <__hi0bits+0x1e>
 8005b4a:	3004      	adds	r0, #4
 8005b4c:	011b      	lsls	r3, r3, #4
 8005b4e:	0f9a      	lsrs	r2, r3, #30
 8005b50:	d101      	bne.n	8005b56 <__hi0bits+0x26>
 8005b52:	3002      	adds	r0, #2
 8005b54:	009b      	lsls	r3, r3, #2
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	db03      	blt.n	8005b62 <__hi0bits+0x32>
 8005b5a:	3001      	adds	r0, #1
 8005b5c:	005b      	lsls	r3, r3, #1
 8005b5e:	d400      	bmi.n	8005b62 <__hi0bits+0x32>
 8005b60:	2020      	movs	r0, #32
 8005b62:	4770      	bx	lr

08005b64 <__lo0bits>:
 8005b64:	6803      	ldr	r3, [r0, #0]
 8005b66:	0002      	movs	r2, r0
 8005b68:	2107      	movs	r1, #7
 8005b6a:	0018      	movs	r0, r3
 8005b6c:	4008      	ands	r0, r1
 8005b6e:	420b      	tst	r3, r1
 8005b70:	d00d      	beq.n	8005b8e <__lo0bits+0x2a>
 8005b72:	3906      	subs	r1, #6
 8005b74:	2000      	movs	r0, #0
 8005b76:	420b      	tst	r3, r1
 8005b78:	d105      	bne.n	8005b86 <__lo0bits+0x22>
 8005b7a:	3002      	adds	r0, #2
 8005b7c:	4203      	tst	r3, r0
 8005b7e:	d003      	beq.n	8005b88 <__lo0bits+0x24>
 8005b80:	40cb      	lsrs	r3, r1
 8005b82:	0008      	movs	r0, r1
 8005b84:	6013      	str	r3, [r2, #0]
 8005b86:	4770      	bx	lr
 8005b88:	089b      	lsrs	r3, r3, #2
 8005b8a:	6013      	str	r3, [r2, #0]
 8005b8c:	e7fb      	b.n	8005b86 <__lo0bits+0x22>
 8005b8e:	b299      	uxth	r1, r3
 8005b90:	2900      	cmp	r1, #0
 8005b92:	d101      	bne.n	8005b98 <__lo0bits+0x34>
 8005b94:	2010      	movs	r0, #16
 8005b96:	0c1b      	lsrs	r3, r3, #16
 8005b98:	b2d9      	uxtb	r1, r3
 8005b9a:	2900      	cmp	r1, #0
 8005b9c:	d101      	bne.n	8005ba2 <__lo0bits+0x3e>
 8005b9e:	3008      	adds	r0, #8
 8005ba0:	0a1b      	lsrs	r3, r3, #8
 8005ba2:	0719      	lsls	r1, r3, #28
 8005ba4:	d101      	bne.n	8005baa <__lo0bits+0x46>
 8005ba6:	3004      	adds	r0, #4
 8005ba8:	091b      	lsrs	r3, r3, #4
 8005baa:	0799      	lsls	r1, r3, #30
 8005bac:	d101      	bne.n	8005bb2 <__lo0bits+0x4e>
 8005bae:	3002      	adds	r0, #2
 8005bb0:	089b      	lsrs	r3, r3, #2
 8005bb2:	07d9      	lsls	r1, r3, #31
 8005bb4:	d4e9      	bmi.n	8005b8a <__lo0bits+0x26>
 8005bb6:	3001      	adds	r0, #1
 8005bb8:	085b      	lsrs	r3, r3, #1
 8005bba:	d1e6      	bne.n	8005b8a <__lo0bits+0x26>
 8005bbc:	2020      	movs	r0, #32
 8005bbe:	e7e2      	b.n	8005b86 <__lo0bits+0x22>

08005bc0 <__i2b>:
 8005bc0:	b510      	push	{r4, lr}
 8005bc2:	000c      	movs	r4, r1
 8005bc4:	2101      	movs	r1, #1
 8005bc6:	f7ff ff07 	bl	80059d8 <_Balloc>
 8005bca:	2800      	cmp	r0, #0
 8005bcc:	d106      	bne.n	8005bdc <__i2b+0x1c>
 8005bce:	21a0      	movs	r1, #160	; 0xa0
 8005bd0:	0002      	movs	r2, r0
 8005bd2:	4b04      	ldr	r3, [pc, #16]	; (8005be4 <__i2b+0x24>)
 8005bd4:	4804      	ldr	r0, [pc, #16]	; (8005be8 <__i2b+0x28>)
 8005bd6:	0049      	lsls	r1, r1, #1
 8005bd8:	f000 fe4a 	bl	8006870 <__assert_func>
 8005bdc:	2301      	movs	r3, #1
 8005bde:	6144      	str	r4, [r0, #20]
 8005be0:	6103      	str	r3, [r0, #16]
 8005be2:	bd10      	pop	{r4, pc}
 8005be4:	08006e7f 	.word	0x08006e7f
 8005be8:	08006ef0 	.word	0x08006ef0

08005bec <__multiply>:
 8005bec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005bee:	690b      	ldr	r3, [r1, #16]
 8005bf0:	0014      	movs	r4, r2
 8005bf2:	6912      	ldr	r2, [r2, #16]
 8005bf4:	000d      	movs	r5, r1
 8005bf6:	b089      	sub	sp, #36	; 0x24
 8005bf8:	4293      	cmp	r3, r2
 8005bfa:	da01      	bge.n	8005c00 <__multiply+0x14>
 8005bfc:	0025      	movs	r5, r4
 8005bfe:	000c      	movs	r4, r1
 8005c00:	692f      	ldr	r7, [r5, #16]
 8005c02:	6926      	ldr	r6, [r4, #16]
 8005c04:	6869      	ldr	r1, [r5, #4]
 8005c06:	19bb      	adds	r3, r7, r6
 8005c08:	9302      	str	r3, [sp, #8]
 8005c0a:	68ab      	ldr	r3, [r5, #8]
 8005c0c:	19ba      	adds	r2, r7, r6
 8005c0e:	4293      	cmp	r3, r2
 8005c10:	da00      	bge.n	8005c14 <__multiply+0x28>
 8005c12:	3101      	adds	r1, #1
 8005c14:	f7ff fee0 	bl	80059d8 <_Balloc>
 8005c18:	9001      	str	r0, [sp, #4]
 8005c1a:	2800      	cmp	r0, #0
 8005c1c:	d106      	bne.n	8005c2c <__multiply+0x40>
 8005c1e:	215e      	movs	r1, #94	; 0x5e
 8005c20:	0002      	movs	r2, r0
 8005c22:	4b48      	ldr	r3, [pc, #288]	; (8005d44 <__multiply+0x158>)
 8005c24:	4848      	ldr	r0, [pc, #288]	; (8005d48 <__multiply+0x15c>)
 8005c26:	31ff      	adds	r1, #255	; 0xff
 8005c28:	f000 fe22 	bl	8006870 <__assert_func>
 8005c2c:	9b01      	ldr	r3, [sp, #4]
 8005c2e:	2200      	movs	r2, #0
 8005c30:	3314      	adds	r3, #20
 8005c32:	469c      	mov	ip, r3
 8005c34:	19bb      	adds	r3, r7, r6
 8005c36:	009b      	lsls	r3, r3, #2
 8005c38:	4463      	add	r3, ip
 8005c3a:	9303      	str	r3, [sp, #12]
 8005c3c:	4663      	mov	r3, ip
 8005c3e:	9903      	ldr	r1, [sp, #12]
 8005c40:	428b      	cmp	r3, r1
 8005c42:	d32c      	bcc.n	8005c9e <__multiply+0xb2>
 8005c44:	002b      	movs	r3, r5
 8005c46:	0022      	movs	r2, r4
 8005c48:	3314      	adds	r3, #20
 8005c4a:	00bf      	lsls	r7, r7, #2
 8005c4c:	3214      	adds	r2, #20
 8005c4e:	9306      	str	r3, [sp, #24]
 8005c50:	00b6      	lsls	r6, r6, #2
 8005c52:	19db      	adds	r3, r3, r7
 8005c54:	9304      	str	r3, [sp, #16]
 8005c56:	1993      	adds	r3, r2, r6
 8005c58:	9307      	str	r3, [sp, #28]
 8005c5a:	2304      	movs	r3, #4
 8005c5c:	9305      	str	r3, [sp, #20]
 8005c5e:	002b      	movs	r3, r5
 8005c60:	9904      	ldr	r1, [sp, #16]
 8005c62:	3315      	adds	r3, #21
 8005c64:	9200      	str	r2, [sp, #0]
 8005c66:	4299      	cmp	r1, r3
 8005c68:	d305      	bcc.n	8005c76 <__multiply+0x8a>
 8005c6a:	1b4b      	subs	r3, r1, r5
 8005c6c:	3b15      	subs	r3, #21
 8005c6e:	089b      	lsrs	r3, r3, #2
 8005c70:	3301      	adds	r3, #1
 8005c72:	009b      	lsls	r3, r3, #2
 8005c74:	9305      	str	r3, [sp, #20]
 8005c76:	9b07      	ldr	r3, [sp, #28]
 8005c78:	9a00      	ldr	r2, [sp, #0]
 8005c7a:	429a      	cmp	r2, r3
 8005c7c:	d311      	bcc.n	8005ca2 <__multiply+0xb6>
 8005c7e:	9b02      	ldr	r3, [sp, #8]
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	dd06      	ble.n	8005c92 <__multiply+0xa6>
 8005c84:	9b03      	ldr	r3, [sp, #12]
 8005c86:	3b04      	subs	r3, #4
 8005c88:	9303      	str	r3, [sp, #12]
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	9300      	str	r3, [sp, #0]
 8005c8e:	2b00      	cmp	r3, #0
 8005c90:	d053      	beq.n	8005d3a <__multiply+0x14e>
 8005c92:	9b01      	ldr	r3, [sp, #4]
 8005c94:	9a02      	ldr	r2, [sp, #8]
 8005c96:	0018      	movs	r0, r3
 8005c98:	611a      	str	r2, [r3, #16]
 8005c9a:	b009      	add	sp, #36	; 0x24
 8005c9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c9e:	c304      	stmia	r3!, {r2}
 8005ca0:	e7cd      	b.n	8005c3e <__multiply+0x52>
 8005ca2:	9b00      	ldr	r3, [sp, #0]
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	b298      	uxth	r0, r3
 8005ca8:	2800      	cmp	r0, #0
 8005caa:	d01b      	beq.n	8005ce4 <__multiply+0xf8>
 8005cac:	4667      	mov	r7, ip
 8005cae:	2400      	movs	r4, #0
 8005cb0:	9e06      	ldr	r6, [sp, #24]
 8005cb2:	ce02      	ldmia	r6!, {r1}
 8005cb4:	683a      	ldr	r2, [r7, #0]
 8005cb6:	b28b      	uxth	r3, r1
 8005cb8:	4343      	muls	r3, r0
 8005cba:	b292      	uxth	r2, r2
 8005cbc:	189b      	adds	r3, r3, r2
 8005cbe:	191b      	adds	r3, r3, r4
 8005cc0:	0c0c      	lsrs	r4, r1, #16
 8005cc2:	4344      	muls	r4, r0
 8005cc4:	683a      	ldr	r2, [r7, #0]
 8005cc6:	0c11      	lsrs	r1, r2, #16
 8005cc8:	1861      	adds	r1, r4, r1
 8005cca:	0c1c      	lsrs	r4, r3, #16
 8005ccc:	1909      	adds	r1, r1, r4
 8005cce:	0c0c      	lsrs	r4, r1, #16
 8005cd0:	b29b      	uxth	r3, r3
 8005cd2:	0409      	lsls	r1, r1, #16
 8005cd4:	430b      	orrs	r3, r1
 8005cd6:	c708      	stmia	r7!, {r3}
 8005cd8:	9b04      	ldr	r3, [sp, #16]
 8005cda:	42b3      	cmp	r3, r6
 8005cdc:	d8e9      	bhi.n	8005cb2 <__multiply+0xc6>
 8005cde:	4663      	mov	r3, ip
 8005ce0:	9a05      	ldr	r2, [sp, #20]
 8005ce2:	509c      	str	r4, [r3, r2]
 8005ce4:	9b00      	ldr	r3, [sp, #0]
 8005ce6:	681b      	ldr	r3, [r3, #0]
 8005ce8:	0c1e      	lsrs	r6, r3, #16
 8005cea:	d020      	beq.n	8005d2e <__multiply+0x142>
 8005cec:	4663      	mov	r3, ip
 8005cee:	002c      	movs	r4, r5
 8005cf0:	4660      	mov	r0, ip
 8005cf2:	2700      	movs	r7, #0
 8005cf4:	681b      	ldr	r3, [r3, #0]
 8005cf6:	3414      	adds	r4, #20
 8005cf8:	6822      	ldr	r2, [r4, #0]
 8005cfa:	b29b      	uxth	r3, r3
 8005cfc:	b291      	uxth	r1, r2
 8005cfe:	4371      	muls	r1, r6
 8005d00:	6802      	ldr	r2, [r0, #0]
 8005d02:	0c12      	lsrs	r2, r2, #16
 8005d04:	1889      	adds	r1, r1, r2
 8005d06:	19cf      	adds	r7, r1, r7
 8005d08:	0439      	lsls	r1, r7, #16
 8005d0a:	430b      	orrs	r3, r1
 8005d0c:	6003      	str	r3, [r0, #0]
 8005d0e:	cc02      	ldmia	r4!, {r1}
 8005d10:	6843      	ldr	r3, [r0, #4]
 8005d12:	0c09      	lsrs	r1, r1, #16
 8005d14:	4371      	muls	r1, r6
 8005d16:	b29b      	uxth	r3, r3
 8005d18:	0c3f      	lsrs	r7, r7, #16
 8005d1a:	18cb      	adds	r3, r1, r3
 8005d1c:	9a04      	ldr	r2, [sp, #16]
 8005d1e:	19db      	adds	r3, r3, r7
 8005d20:	0c1f      	lsrs	r7, r3, #16
 8005d22:	3004      	adds	r0, #4
 8005d24:	42a2      	cmp	r2, r4
 8005d26:	d8e7      	bhi.n	8005cf8 <__multiply+0x10c>
 8005d28:	4662      	mov	r2, ip
 8005d2a:	9905      	ldr	r1, [sp, #20]
 8005d2c:	5053      	str	r3, [r2, r1]
 8005d2e:	9b00      	ldr	r3, [sp, #0]
 8005d30:	3304      	adds	r3, #4
 8005d32:	9300      	str	r3, [sp, #0]
 8005d34:	2304      	movs	r3, #4
 8005d36:	449c      	add	ip, r3
 8005d38:	e79d      	b.n	8005c76 <__multiply+0x8a>
 8005d3a:	9b02      	ldr	r3, [sp, #8]
 8005d3c:	3b01      	subs	r3, #1
 8005d3e:	9302      	str	r3, [sp, #8]
 8005d40:	e79d      	b.n	8005c7e <__multiply+0x92>
 8005d42:	46c0      	nop			; (mov r8, r8)
 8005d44:	08006e7f 	.word	0x08006e7f
 8005d48:	08006ef0 	.word	0x08006ef0

08005d4c <__pow5mult>:
 8005d4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005d4e:	2303      	movs	r3, #3
 8005d50:	0015      	movs	r5, r2
 8005d52:	0007      	movs	r7, r0
 8005d54:	000e      	movs	r6, r1
 8005d56:	401a      	ands	r2, r3
 8005d58:	421d      	tst	r5, r3
 8005d5a:	d008      	beq.n	8005d6e <__pow5mult+0x22>
 8005d5c:	4925      	ldr	r1, [pc, #148]	; (8005df4 <__pow5mult+0xa8>)
 8005d5e:	3a01      	subs	r2, #1
 8005d60:	0092      	lsls	r2, r2, #2
 8005d62:	5852      	ldr	r2, [r2, r1]
 8005d64:	2300      	movs	r3, #0
 8005d66:	0031      	movs	r1, r6
 8005d68:	f7ff fe9e 	bl	8005aa8 <__multadd>
 8005d6c:	0006      	movs	r6, r0
 8005d6e:	10ad      	asrs	r5, r5, #2
 8005d70:	d03d      	beq.n	8005dee <__pow5mult+0xa2>
 8005d72:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8005d74:	2c00      	cmp	r4, #0
 8005d76:	d10f      	bne.n	8005d98 <__pow5mult+0x4c>
 8005d78:	2010      	movs	r0, #16
 8005d7a:	f7ff fe0f 	bl	800599c <malloc>
 8005d7e:	1e02      	subs	r2, r0, #0
 8005d80:	6278      	str	r0, [r7, #36]	; 0x24
 8005d82:	d105      	bne.n	8005d90 <__pow5mult+0x44>
 8005d84:	21d7      	movs	r1, #215	; 0xd7
 8005d86:	4b1c      	ldr	r3, [pc, #112]	; (8005df8 <__pow5mult+0xac>)
 8005d88:	481c      	ldr	r0, [pc, #112]	; (8005dfc <__pow5mult+0xb0>)
 8005d8a:	0049      	lsls	r1, r1, #1
 8005d8c:	f000 fd70 	bl	8006870 <__assert_func>
 8005d90:	6044      	str	r4, [r0, #4]
 8005d92:	6084      	str	r4, [r0, #8]
 8005d94:	6004      	str	r4, [r0, #0]
 8005d96:	60c4      	str	r4, [r0, #12]
 8005d98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d9a:	689c      	ldr	r4, [r3, #8]
 8005d9c:	9301      	str	r3, [sp, #4]
 8005d9e:	2c00      	cmp	r4, #0
 8005da0:	d108      	bne.n	8005db4 <__pow5mult+0x68>
 8005da2:	0038      	movs	r0, r7
 8005da4:	4916      	ldr	r1, [pc, #88]	; (8005e00 <__pow5mult+0xb4>)
 8005da6:	f7ff ff0b 	bl	8005bc0 <__i2b>
 8005daa:	9b01      	ldr	r3, [sp, #4]
 8005dac:	0004      	movs	r4, r0
 8005dae:	6098      	str	r0, [r3, #8]
 8005db0:	2300      	movs	r3, #0
 8005db2:	6003      	str	r3, [r0, #0]
 8005db4:	2301      	movs	r3, #1
 8005db6:	421d      	tst	r5, r3
 8005db8:	d00a      	beq.n	8005dd0 <__pow5mult+0x84>
 8005dba:	0031      	movs	r1, r6
 8005dbc:	0022      	movs	r2, r4
 8005dbe:	0038      	movs	r0, r7
 8005dc0:	f7ff ff14 	bl	8005bec <__multiply>
 8005dc4:	0031      	movs	r1, r6
 8005dc6:	9001      	str	r0, [sp, #4]
 8005dc8:	0038      	movs	r0, r7
 8005dca:	f7ff fe49 	bl	8005a60 <_Bfree>
 8005dce:	9e01      	ldr	r6, [sp, #4]
 8005dd0:	106d      	asrs	r5, r5, #1
 8005dd2:	d00c      	beq.n	8005dee <__pow5mult+0xa2>
 8005dd4:	6820      	ldr	r0, [r4, #0]
 8005dd6:	2800      	cmp	r0, #0
 8005dd8:	d107      	bne.n	8005dea <__pow5mult+0x9e>
 8005dda:	0022      	movs	r2, r4
 8005ddc:	0021      	movs	r1, r4
 8005dde:	0038      	movs	r0, r7
 8005de0:	f7ff ff04 	bl	8005bec <__multiply>
 8005de4:	2300      	movs	r3, #0
 8005de6:	6020      	str	r0, [r4, #0]
 8005de8:	6003      	str	r3, [r0, #0]
 8005dea:	0004      	movs	r4, r0
 8005dec:	e7e2      	b.n	8005db4 <__pow5mult+0x68>
 8005dee:	0030      	movs	r0, r6
 8005df0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005df2:	46c0      	nop			; (mov r8, r8)
 8005df4:	08007040 	.word	0x08007040
 8005df8:	08006e0d 	.word	0x08006e0d
 8005dfc:	08006ef0 	.word	0x08006ef0
 8005e00:	00000271 	.word	0x00000271

08005e04 <__lshift>:
 8005e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e06:	000c      	movs	r4, r1
 8005e08:	0017      	movs	r7, r2
 8005e0a:	6923      	ldr	r3, [r4, #16]
 8005e0c:	1155      	asrs	r5, r2, #5
 8005e0e:	b087      	sub	sp, #28
 8005e10:	18eb      	adds	r3, r5, r3
 8005e12:	9302      	str	r3, [sp, #8]
 8005e14:	3301      	adds	r3, #1
 8005e16:	9301      	str	r3, [sp, #4]
 8005e18:	6849      	ldr	r1, [r1, #4]
 8005e1a:	68a3      	ldr	r3, [r4, #8]
 8005e1c:	9004      	str	r0, [sp, #16]
 8005e1e:	9a01      	ldr	r2, [sp, #4]
 8005e20:	4293      	cmp	r3, r2
 8005e22:	db10      	blt.n	8005e46 <__lshift+0x42>
 8005e24:	9804      	ldr	r0, [sp, #16]
 8005e26:	f7ff fdd7 	bl	80059d8 <_Balloc>
 8005e2a:	2300      	movs	r3, #0
 8005e2c:	0002      	movs	r2, r0
 8005e2e:	0006      	movs	r6, r0
 8005e30:	0019      	movs	r1, r3
 8005e32:	3214      	adds	r2, #20
 8005e34:	4298      	cmp	r0, r3
 8005e36:	d10c      	bne.n	8005e52 <__lshift+0x4e>
 8005e38:	21da      	movs	r1, #218	; 0xda
 8005e3a:	0002      	movs	r2, r0
 8005e3c:	4b26      	ldr	r3, [pc, #152]	; (8005ed8 <__lshift+0xd4>)
 8005e3e:	4827      	ldr	r0, [pc, #156]	; (8005edc <__lshift+0xd8>)
 8005e40:	31ff      	adds	r1, #255	; 0xff
 8005e42:	f000 fd15 	bl	8006870 <__assert_func>
 8005e46:	3101      	adds	r1, #1
 8005e48:	005b      	lsls	r3, r3, #1
 8005e4a:	e7e8      	b.n	8005e1e <__lshift+0x1a>
 8005e4c:	0098      	lsls	r0, r3, #2
 8005e4e:	5011      	str	r1, [r2, r0]
 8005e50:	3301      	adds	r3, #1
 8005e52:	42ab      	cmp	r3, r5
 8005e54:	dbfa      	blt.n	8005e4c <__lshift+0x48>
 8005e56:	43eb      	mvns	r3, r5
 8005e58:	17db      	asrs	r3, r3, #31
 8005e5a:	401d      	ands	r5, r3
 8005e5c:	211f      	movs	r1, #31
 8005e5e:	0023      	movs	r3, r4
 8005e60:	0038      	movs	r0, r7
 8005e62:	00ad      	lsls	r5, r5, #2
 8005e64:	1955      	adds	r5, r2, r5
 8005e66:	6922      	ldr	r2, [r4, #16]
 8005e68:	3314      	adds	r3, #20
 8005e6a:	0092      	lsls	r2, r2, #2
 8005e6c:	4008      	ands	r0, r1
 8005e6e:	4684      	mov	ip, r0
 8005e70:	189a      	adds	r2, r3, r2
 8005e72:	420f      	tst	r7, r1
 8005e74:	d02a      	beq.n	8005ecc <__lshift+0xc8>
 8005e76:	3101      	adds	r1, #1
 8005e78:	1a09      	subs	r1, r1, r0
 8005e7a:	9105      	str	r1, [sp, #20]
 8005e7c:	2100      	movs	r1, #0
 8005e7e:	9503      	str	r5, [sp, #12]
 8005e80:	4667      	mov	r7, ip
 8005e82:	6818      	ldr	r0, [r3, #0]
 8005e84:	40b8      	lsls	r0, r7
 8005e86:	4301      	orrs	r1, r0
 8005e88:	9803      	ldr	r0, [sp, #12]
 8005e8a:	c002      	stmia	r0!, {r1}
 8005e8c:	cb02      	ldmia	r3!, {r1}
 8005e8e:	9003      	str	r0, [sp, #12]
 8005e90:	9805      	ldr	r0, [sp, #20]
 8005e92:	40c1      	lsrs	r1, r0
 8005e94:	429a      	cmp	r2, r3
 8005e96:	d8f3      	bhi.n	8005e80 <__lshift+0x7c>
 8005e98:	0020      	movs	r0, r4
 8005e9a:	3015      	adds	r0, #21
 8005e9c:	2304      	movs	r3, #4
 8005e9e:	4282      	cmp	r2, r0
 8005ea0:	d304      	bcc.n	8005eac <__lshift+0xa8>
 8005ea2:	1b13      	subs	r3, r2, r4
 8005ea4:	3b15      	subs	r3, #21
 8005ea6:	089b      	lsrs	r3, r3, #2
 8005ea8:	3301      	adds	r3, #1
 8005eaa:	009b      	lsls	r3, r3, #2
 8005eac:	50e9      	str	r1, [r5, r3]
 8005eae:	2900      	cmp	r1, #0
 8005eb0:	d002      	beq.n	8005eb8 <__lshift+0xb4>
 8005eb2:	9b02      	ldr	r3, [sp, #8]
 8005eb4:	3302      	adds	r3, #2
 8005eb6:	9301      	str	r3, [sp, #4]
 8005eb8:	9b01      	ldr	r3, [sp, #4]
 8005eba:	9804      	ldr	r0, [sp, #16]
 8005ebc:	3b01      	subs	r3, #1
 8005ebe:	0021      	movs	r1, r4
 8005ec0:	6133      	str	r3, [r6, #16]
 8005ec2:	f7ff fdcd 	bl	8005a60 <_Bfree>
 8005ec6:	0030      	movs	r0, r6
 8005ec8:	b007      	add	sp, #28
 8005eca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ecc:	cb02      	ldmia	r3!, {r1}
 8005ece:	c502      	stmia	r5!, {r1}
 8005ed0:	429a      	cmp	r2, r3
 8005ed2:	d8fb      	bhi.n	8005ecc <__lshift+0xc8>
 8005ed4:	e7f0      	b.n	8005eb8 <__lshift+0xb4>
 8005ed6:	46c0      	nop			; (mov r8, r8)
 8005ed8:	08006e7f 	.word	0x08006e7f
 8005edc:	08006ef0 	.word	0x08006ef0

08005ee0 <__mcmp>:
 8005ee0:	6902      	ldr	r2, [r0, #16]
 8005ee2:	690b      	ldr	r3, [r1, #16]
 8005ee4:	b530      	push	{r4, r5, lr}
 8005ee6:	0004      	movs	r4, r0
 8005ee8:	1ad0      	subs	r0, r2, r3
 8005eea:	429a      	cmp	r2, r3
 8005eec:	d10d      	bne.n	8005f0a <__mcmp+0x2a>
 8005eee:	009b      	lsls	r3, r3, #2
 8005ef0:	3414      	adds	r4, #20
 8005ef2:	3114      	adds	r1, #20
 8005ef4:	18e2      	adds	r2, r4, r3
 8005ef6:	18c9      	adds	r1, r1, r3
 8005ef8:	3a04      	subs	r2, #4
 8005efa:	3904      	subs	r1, #4
 8005efc:	6815      	ldr	r5, [r2, #0]
 8005efe:	680b      	ldr	r3, [r1, #0]
 8005f00:	429d      	cmp	r5, r3
 8005f02:	d003      	beq.n	8005f0c <__mcmp+0x2c>
 8005f04:	2001      	movs	r0, #1
 8005f06:	429d      	cmp	r5, r3
 8005f08:	d303      	bcc.n	8005f12 <__mcmp+0x32>
 8005f0a:	bd30      	pop	{r4, r5, pc}
 8005f0c:	4294      	cmp	r4, r2
 8005f0e:	d3f3      	bcc.n	8005ef8 <__mcmp+0x18>
 8005f10:	e7fb      	b.n	8005f0a <__mcmp+0x2a>
 8005f12:	4240      	negs	r0, r0
 8005f14:	e7f9      	b.n	8005f0a <__mcmp+0x2a>
	...

08005f18 <__mdiff>:
 8005f18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f1a:	000e      	movs	r6, r1
 8005f1c:	0007      	movs	r7, r0
 8005f1e:	0011      	movs	r1, r2
 8005f20:	0030      	movs	r0, r6
 8005f22:	b087      	sub	sp, #28
 8005f24:	0014      	movs	r4, r2
 8005f26:	f7ff ffdb 	bl	8005ee0 <__mcmp>
 8005f2a:	1e05      	subs	r5, r0, #0
 8005f2c:	d110      	bne.n	8005f50 <__mdiff+0x38>
 8005f2e:	0001      	movs	r1, r0
 8005f30:	0038      	movs	r0, r7
 8005f32:	f7ff fd51 	bl	80059d8 <_Balloc>
 8005f36:	1e02      	subs	r2, r0, #0
 8005f38:	d104      	bne.n	8005f44 <__mdiff+0x2c>
 8005f3a:	4b40      	ldr	r3, [pc, #256]	; (800603c <__mdiff+0x124>)
 8005f3c:	4940      	ldr	r1, [pc, #256]	; (8006040 <__mdiff+0x128>)
 8005f3e:	4841      	ldr	r0, [pc, #260]	; (8006044 <__mdiff+0x12c>)
 8005f40:	f000 fc96 	bl	8006870 <__assert_func>
 8005f44:	2301      	movs	r3, #1
 8005f46:	6145      	str	r5, [r0, #20]
 8005f48:	6103      	str	r3, [r0, #16]
 8005f4a:	0010      	movs	r0, r2
 8005f4c:	b007      	add	sp, #28
 8005f4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f50:	2301      	movs	r3, #1
 8005f52:	9301      	str	r3, [sp, #4]
 8005f54:	2800      	cmp	r0, #0
 8005f56:	db04      	blt.n	8005f62 <__mdiff+0x4a>
 8005f58:	0023      	movs	r3, r4
 8005f5a:	0034      	movs	r4, r6
 8005f5c:	001e      	movs	r6, r3
 8005f5e:	2300      	movs	r3, #0
 8005f60:	9301      	str	r3, [sp, #4]
 8005f62:	0038      	movs	r0, r7
 8005f64:	6861      	ldr	r1, [r4, #4]
 8005f66:	f7ff fd37 	bl	80059d8 <_Balloc>
 8005f6a:	1e02      	subs	r2, r0, #0
 8005f6c:	d103      	bne.n	8005f76 <__mdiff+0x5e>
 8005f6e:	2190      	movs	r1, #144	; 0x90
 8005f70:	4b32      	ldr	r3, [pc, #200]	; (800603c <__mdiff+0x124>)
 8005f72:	0089      	lsls	r1, r1, #2
 8005f74:	e7e3      	b.n	8005f3e <__mdiff+0x26>
 8005f76:	9b01      	ldr	r3, [sp, #4]
 8005f78:	2700      	movs	r7, #0
 8005f7a:	60c3      	str	r3, [r0, #12]
 8005f7c:	6920      	ldr	r0, [r4, #16]
 8005f7e:	3414      	adds	r4, #20
 8005f80:	9401      	str	r4, [sp, #4]
 8005f82:	9b01      	ldr	r3, [sp, #4]
 8005f84:	0084      	lsls	r4, r0, #2
 8005f86:	191b      	adds	r3, r3, r4
 8005f88:	0034      	movs	r4, r6
 8005f8a:	9302      	str	r3, [sp, #8]
 8005f8c:	6933      	ldr	r3, [r6, #16]
 8005f8e:	3414      	adds	r4, #20
 8005f90:	0099      	lsls	r1, r3, #2
 8005f92:	1863      	adds	r3, r4, r1
 8005f94:	9303      	str	r3, [sp, #12]
 8005f96:	0013      	movs	r3, r2
 8005f98:	3314      	adds	r3, #20
 8005f9a:	469c      	mov	ip, r3
 8005f9c:	9305      	str	r3, [sp, #20]
 8005f9e:	9b01      	ldr	r3, [sp, #4]
 8005fa0:	9304      	str	r3, [sp, #16]
 8005fa2:	9b04      	ldr	r3, [sp, #16]
 8005fa4:	cc02      	ldmia	r4!, {r1}
 8005fa6:	cb20      	ldmia	r3!, {r5}
 8005fa8:	9304      	str	r3, [sp, #16]
 8005faa:	b2ab      	uxth	r3, r5
 8005fac:	19df      	adds	r7, r3, r7
 8005fae:	b28b      	uxth	r3, r1
 8005fb0:	1afb      	subs	r3, r7, r3
 8005fb2:	0c09      	lsrs	r1, r1, #16
 8005fb4:	0c2d      	lsrs	r5, r5, #16
 8005fb6:	1a6d      	subs	r5, r5, r1
 8005fb8:	1419      	asrs	r1, r3, #16
 8005fba:	186d      	adds	r5, r5, r1
 8005fbc:	4661      	mov	r1, ip
 8005fbe:	142f      	asrs	r7, r5, #16
 8005fc0:	b29b      	uxth	r3, r3
 8005fc2:	042d      	lsls	r5, r5, #16
 8005fc4:	432b      	orrs	r3, r5
 8005fc6:	c108      	stmia	r1!, {r3}
 8005fc8:	9b03      	ldr	r3, [sp, #12]
 8005fca:	468c      	mov	ip, r1
 8005fcc:	42a3      	cmp	r3, r4
 8005fce:	d8e8      	bhi.n	8005fa2 <__mdiff+0x8a>
 8005fd0:	0031      	movs	r1, r6
 8005fd2:	9c03      	ldr	r4, [sp, #12]
 8005fd4:	3115      	adds	r1, #21
 8005fd6:	2304      	movs	r3, #4
 8005fd8:	428c      	cmp	r4, r1
 8005fda:	d304      	bcc.n	8005fe6 <__mdiff+0xce>
 8005fdc:	1ba3      	subs	r3, r4, r6
 8005fde:	3b15      	subs	r3, #21
 8005fe0:	089b      	lsrs	r3, r3, #2
 8005fe2:	3301      	adds	r3, #1
 8005fe4:	009b      	lsls	r3, r3, #2
 8005fe6:	9901      	ldr	r1, [sp, #4]
 8005fe8:	18cc      	adds	r4, r1, r3
 8005fea:	9905      	ldr	r1, [sp, #20]
 8005fec:	0026      	movs	r6, r4
 8005fee:	18cb      	adds	r3, r1, r3
 8005ff0:	469c      	mov	ip, r3
 8005ff2:	9902      	ldr	r1, [sp, #8]
 8005ff4:	428e      	cmp	r6, r1
 8005ff6:	d310      	bcc.n	800601a <__mdiff+0x102>
 8005ff8:	9e02      	ldr	r6, [sp, #8]
 8005ffa:	1ee1      	subs	r1, r4, #3
 8005ffc:	2500      	movs	r5, #0
 8005ffe:	428e      	cmp	r6, r1
 8006000:	d304      	bcc.n	800600c <__mdiff+0xf4>
 8006002:	0031      	movs	r1, r6
 8006004:	3103      	adds	r1, #3
 8006006:	1b0c      	subs	r4, r1, r4
 8006008:	08a4      	lsrs	r4, r4, #2
 800600a:	00a5      	lsls	r5, r4, #2
 800600c:	195b      	adds	r3, r3, r5
 800600e:	3b04      	subs	r3, #4
 8006010:	6819      	ldr	r1, [r3, #0]
 8006012:	2900      	cmp	r1, #0
 8006014:	d00f      	beq.n	8006036 <__mdiff+0x11e>
 8006016:	6110      	str	r0, [r2, #16]
 8006018:	e797      	b.n	8005f4a <__mdiff+0x32>
 800601a:	ce02      	ldmia	r6!, {r1}
 800601c:	b28d      	uxth	r5, r1
 800601e:	19ed      	adds	r5, r5, r7
 8006020:	0c0f      	lsrs	r7, r1, #16
 8006022:	1429      	asrs	r1, r5, #16
 8006024:	1879      	adds	r1, r7, r1
 8006026:	140f      	asrs	r7, r1, #16
 8006028:	b2ad      	uxth	r5, r5
 800602a:	0409      	lsls	r1, r1, #16
 800602c:	430d      	orrs	r5, r1
 800602e:	4661      	mov	r1, ip
 8006030:	c120      	stmia	r1!, {r5}
 8006032:	468c      	mov	ip, r1
 8006034:	e7dd      	b.n	8005ff2 <__mdiff+0xda>
 8006036:	3801      	subs	r0, #1
 8006038:	e7e9      	b.n	800600e <__mdiff+0xf6>
 800603a:	46c0      	nop			; (mov r8, r8)
 800603c:	08006e7f 	.word	0x08006e7f
 8006040:	00000232 	.word	0x00000232
 8006044:	08006ef0 	.word	0x08006ef0

08006048 <__d2b>:
 8006048:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800604a:	2101      	movs	r1, #1
 800604c:	0014      	movs	r4, r2
 800604e:	001e      	movs	r6, r3
 8006050:	9f08      	ldr	r7, [sp, #32]
 8006052:	f7ff fcc1 	bl	80059d8 <_Balloc>
 8006056:	1e05      	subs	r5, r0, #0
 8006058:	d105      	bne.n	8006066 <__d2b+0x1e>
 800605a:	0002      	movs	r2, r0
 800605c:	4b26      	ldr	r3, [pc, #152]	; (80060f8 <__d2b+0xb0>)
 800605e:	4927      	ldr	r1, [pc, #156]	; (80060fc <__d2b+0xb4>)
 8006060:	4827      	ldr	r0, [pc, #156]	; (8006100 <__d2b+0xb8>)
 8006062:	f000 fc05 	bl	8006870 <__assert_func>
 8006066:	0333      	lsls	r3, r6, #12
 8006068:	0076      	lsls	r6, r6, #1
 800606a:	0b1b      	lsrs	r3, r3, #12
 800606c:	0d76      	lsrs	r6, r6, #21
 800606e:	d124      	bne.n	80060ba <__d2b+0x72>
 8006070:	9301      	str	r3, [sp, #4]
 8006072:	2c00      	cmp	r4, #0
 8006074:	d027      	beq.n	80060c6 <__d2b+0x7e>
 8006076:	4668      	mov	r0, sp
 8006078:	9400      	str	r4, [sp, #0]
 800607a:	f7ff fd73 	bl	8005b64 <__lo0bits>
 800607e:	9c00      	ldr	r4, [sp, #0]
 8006080:	2800      	cmp	r0, #0
 8006082:	d01e      	beq.n	80060c2 <__d2b+0x7a>
 8006084:	9b01      	ldr	r3, [sp, #4]
 8006086:	2120      	movs	r1, #32
 8006088:	001a      	movs	r2, r3
 800608a:	1a09      	subs	r1, r1, r0
 800608c:	408a      	lsls	r2, r1
 800608e:	40c3      	lsrs	r3, r0
 8006090:	4322      	orrs	r2, r4
 8006092:	616a      	str	r2, [r5, #20]
 8006094:	9301      	str	r3, [sp, #4]
 8006096:	9c01      	ldr	r4, [sp, #4]
 8006098:	61ac      	str	r4, [r5, #24]
 800609a:	1e63      	subs	r3, r4, #1
 800609c:	419c      	sbcs	r4, r3
 800609e:	3401      	adds	r4, #1
 80060a0:	612c      	str	r4, [r5, #16]
 80060a2:	2e00      	cmp	r6, #0
 80060a4:	d018      	beq.n	80060d8 <__d2b+0x90>
 80060a6:	4b17      	ldr	r3, [pc, #92]	; (8006104 <__d2b+0xbc>)
 80060a8:	18f6      	adds	r6, r6, r3
 80060aa:	2335      	movs	r3, #53	; 0x35
 80060ac:	1836      	adds	r6, r6, r0
 80060ae:	1a18      	subs	r0, r3, r0
 80060b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80060b2:	603e      	str	r6, [r7, #0]
 80060b4:	6018      	str	r0, [r3, #0]
 80060b6:	0028      	movs	r0, r5
 80060b8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80060ba:	2280      	movs	r2, #128	; 0x80
 80060bc:	0352      	lsls	r2, r2, #13
 80060be:	4313      	orrs	r3, r2
 80060c0:	e7d6      	b.n	8006070 <__d2b+0x28>
 80060c2:	616c      	str	r4, [r5, #20]
 80060c4:	e7e7      	b.n	8006096 <__d2b+0x4e>
 80060c6:	a801      	add	r0, sp, #4
 80060c8:	f7ff fd4c 	bl	8005b64 <__lo0bits>
 80060cc:	2401      	movs	r4, #1
 80060ce:	9b01      	ldr	r3, [sp, #4]
 80060d0:	612c      	str	r4, [r5, #16]
 80060d2:	616b      	str	r3, [r5, #20]
 80060d4:	3020      	adds	r0, #32
 80060d6:	e7e4      	b.n	80060a2 <__d2b+0x5a>
 80060d8:	4b0b      	ldr	r3, [pc, #44]	; (8006108 <__d2b+0xc0>)
 80060da:	18c0      	adds	r0, r0, r3
 80060dc:	4b0b      	ldr	r3, [pc, #44]	; (800610c <__d2b+0xc4>)
 80060de:	6038      	str	r0, [r7, #0]
 80060e0:	18e3      	adds	r3, r4, r3
 80060e2:	009b      	lsls	r3, r3, #2
 80060e4:	18eb      	adds	r3, r5, r3
 80060e6:	6958      	ldr	r0, [r3, #20]
 80060e8:	f7ff fd22 	bl	8005b30 <__hi0bits>
 80060ec:	0164      	lsls	r4, r4, #5
 80060ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80060f0:	1a24      	subs	r4, r4, r0
 80060f2:	601c      	str	r4, [r3, #0]
 80060f4:	e7df      	b.n	80060b6 <__d2b+0x6e>
 80060f6:	46c0      	nop			; (mov r8, r8)
 80060f8:	08006e7f 	.word	0x08006e7f
 80060fc:	0000030a 	.word	0x0000030a
 8006100:	08006ef0 	.word	0x08006ef0
 8006104:	fffffbcd 	.word	0xfffffbcd
 8006108:	fffffbce 	.word	0xfffffbce
 800610c:	3fffffff 	.word	0x3fffffff

08006110 <_calloc_r>:
 8006110:	b570      	push	{r4, r5, r6, lr}
 8006112:	0c13      	lsrs	r3, r2, #16
 8006114:	0c0d      	lsrs	r5, r1, #16
 8006116:	d11e      	bne.n	8006156 <_calloc_r+0x46>
 8006118:	2b00      	cmp	r3, #0
 800611a:	d10c      	bne.n	8006136 <_calloc_r+0x26>
 800611c:	b289      	uxth	r1, r1
 800611e:	b294      	uxth	r4, r2
 8006120:	434c      	muls	r4, r1
 8006122:	0021      	movs	r1, r4
 8006124:	f000 f88c 	bl	8006240 <_malloc_r>
 8006128:	1e05      	subs	r5, r0, #0
 800612a:	d01b      	beq.n	8006164 <_calloc_r+0x54>
 800612c:	0022      	movs	r2, r4
 800612e:	2100      	movs	r1, #0
 8006130:	f7fd fff4 	bl	800411c <memset>
 8006134:	e016      	b.n	8006164 <_calloc_r+0x54>
 8006136:	1c1d      	adds	r5, r3, #0
 8006138:	1c0b      	adds	r3, r1, #0
 800613a:	b292      	uxth	r2, r2
 800613c:	b289      	uxth	r1, r1
 800613e:	b29c      	uxth	r4, r3
 8006140:	4351      	muls	r1, r2
 8006142:	b2ab      	uxth	r3, r5
 8006144:	4363      	muls	r3, r4
 8006146:	0c0c      	lsrs	r4, r1, #16
 8006148:	191c      	adds	r4, r3, r4
 800614a:	0c22      	lsrs	r2, r4, #16
 800614c:	d107      	bne.n	800615e <_calloc_r+0x4e>
 800614e:	0424      	lsls	r4, r4, #16
 8006150:	b289      	uxth	r1, r1
 8006152:	430c      	orrs	r4, r1
 8006154:	e7e5      	b.n	8006122 <_calloc_r+0x12>
 8006156:	2b00      	cmp	r3, #0
 8006158:	d101      	bne.n	800615e <_calloc_r+0x4e>
 800615a:	1c13      	adds	r3, r2, #0
 800615c:	e7ed      	b.n	800613a <_calloc_r+0x2a>
 800615e:	230c      	movs	r3, #12
 8006160:	2500      	movs	r5, #0
 8006162:	6003      	str	r3, [r0, #0]
 8006164:	0028      	movs	r0, r5
 8006166:	bd70      	pop	{r4, r5, r6, pc}

08006168 <_free_r>:
 8006168:	b570      	push	{r4, r5, r6, lr}
 800616a:	0005      	movs	r5, r0
 800616c:	2900      	cmp	r1, #0
 800616e:	d010      	beq.n	8006192 <_free_r+0x2a>
 8006170:	1f0c      	subs	r4, r1, #4
 8006172:	6823      	ldr	r3, [r4, #0]
 8006174:	2b00      	cmp	r3, #0
 8006176:	da00      	bge.n	800617a <_free_r+0x12>
 8006178:	18e4      	adds	r4, r4, r3
 800617a:	0028      	movs	r0, r5
 800617c:	f000 fd16 	bl	8006bac <__malloc_lock>
 8006180:	4a1d      	ldr	r2, [pc, #116]	; (80061f8 <_free_r+0x90>)
 8006182:	6813      	ldr	r3, [r2, #0]
 8006184:	2b00      	cmp	r3, #0
 8006186:	d105      	bne.n	8006194 <_free_r+0x2c>
 8006188:	6063      	str	r3, [r4, #4]
 800618a:	6014      	str	r4, [r2, #0]
 800618c:	0028      	movs	r0, r5
 800618e:	f000 fd15 	bl	8006bbc <__malloc_unlock>
 8006192:	bd70      	pop	{r4, r5, r6, pc}
 8006194:	42a3      	cmp	r3, r4
 8006196:	d908      	bls.n	80061aa <_free_r+0x42>
 8006198:	6821      	ldr	r1, [r4, #0]
 800619a:	1860      	adds	r0, r4, r1
 800619c:	4283      	cmp	r3, r0
 800619e:	d1f3      	bne.n	8006188 <_free_r+0x20>
 80061a0:	6818      	ldr	r0, [r3, #0]
 80061a2:	685b      	ldr	r3, [r3, #4]
 80061a4:	1841      	adds	r1, r0, r1
 80061a6:	6021      	str	r1, [r4, #0]
 80061a8:	e7ee      	b.n	8006188 <_free_r+0x20>
 80061aa:	001a      	movs	r2, r3
 80061ac:	685b      	ldr	r3, [r3, #4]
 80061ae:	2b00      	cmp	r3, #0
 80061b0:	d001      	beq.n	80061b6 <_free_r+0x4e>
 80061b2:	42a3      	cmp	r3, r4
 80061b4:	d9f9      	bls.n	80061aa <_free_r+0x42>
 80061b6:	6811      	ldr	r1, [r2, #0]
 80061b8:	1850      	adds	r0, r2, r1
 80061ba:	42a0      	cmp	r0, r4
 80061bc:	d10b      	bne.n	80061d6 <_free_r+0x6e>
 80061be:	6820      	ldr	r0, [r4, #0]
 80061c0:	1809      	adds	r1, r1, r0
 80061c2:	1850      	adds	r0, r2, r1
 80061c4:	6011      	str	r1, [r2, #0]
 80061c6:	4283      	cmp	r3, r0
 80061c8:	d1e0      	bne.n	800618c <_free_r+0x24>
 80061ca:	6818      	ldr	r0, [r3, #0]
 80061cc:	685b      	ldr	r3, [r3, #4]
 80061ce:	1841      	adds	r1, r0, r1
 80061d0:	6011      	str	r1, [r2, #0]
 80061d2:	6053      	str	r3, [r2, #4]
 80061d4:	e7da      	b.n	800618c <_free_r+0x24>
 80061d6:	42a0      	cmp	r0, r4
 80061d8:	d902      	bls.n	80061e0 <_free_r+0x78>
 80061da:	230c      	movs	r3, #12
 80061dc:	602b      	str	r3, [r5, #0]
 80061de:	e7d5      	b.n	800618c <_free_r+0x24>
 80061e0:	6821      	ldr	r1, [r4, #0]
 80061e2:	1860      	adds	r0, r4, r1
 80061e4:	4283      	cmp	r3, r0
 80061e6:	d103      	bne.n	80061f0 <_free_r+0x88>
 80061e8:	6818      	ldr	r0, [r3, #0]
 80061ea:	685b      	ldr	r3, [r3, #4]
 80061ec:	1841      	adds	r1, r0, r1
 80061ee:	6021      	str	r1, [r4, #0]
 80061f0:	6063      	str	r3, [r4, #4]
 80061f2:	6054      	str	r4, [r2, #4]
 80061f4:	e7ca      	b.n	800618c <_free_r+0x24>
 80061f6:	46c0      	nop			; (mov r8, r8)
 80061f8:	20000270 	.word	0x20000270

080061fc <sbrk_aligned>:
 80061fc:	b570      	push	{r4, r5, r6, lr}
 80061fe:	4e0f      	ldr	r6, [pc, #60]	; (800623c <sbrk_aligned+0x40>)
 8006200:	000d      	movs	r5, r1
 8006202:	6831      	ldr	r1, [r6, #0]
 8006204:	0004      	movs	r4, r0
 8006206:	2900      	cmp	r1, #0
 8006208:	d102      	bne.n	8006210 <sbrk_aligned+0x14>
 800620a:	f000 f9f1 	bl	80065f0 <_sbrk_r>
 800620e:	6030      	str	r0, [r6, #0]
 8006210:	0029      	movs	r1, r5
 8006212:	0020      	movs	r0, r4
 8006214:	f000 f9ec 	bl	80065f0 <_sbrk_r>
 8006218:	1c43      	adds	r3, r0, #1
 800621a:	d00a      	beq.n	8006232 <sbrk_aligned+0x36>
 800621c:	2303      	movs	r3, #3
 800621e:	1cc5      	adds	r5, r0, #3
 8006220:	439d      	bics	r5, r3
 8006222:	42a8      	cmp	r0, r5
 8006224:	d007      	beq.n	8006236 <sbrk_aligned+0x3a>
 8006226:	1a29      	subs	r1, r5, r0
 8006228:	0020      	movs	r0, r4
 800622a:	f000 f9e1 	bl	80065f0 <_sbrk_r>
 800622e:	1c43      	adds	r3, r0, #1
 8006230:	d101      	bne.n	8006236 <sbrk_aligned+0x3a>
 8006232:	2501      	movs	r5, #1
 8006234:	426d      	negs	r5, r5
 8006236:	0028      	movs	r0, r5
 8006238:	bd70      	pop	{r4, r5, r6, pc}
 800623a:	46c0      	nop			; (mov r8, r8)
 800623c:	20000274 	.word	0x20000274

08006240 <_malloc_r>:
 8006240:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006242:	2203      	movs	r2, #3
 8006244:	1ccb      	adds	r3, r1, #3
 8006246:	4393      	bics	r3, r2
 8006248:	3308      	adds	r3, #8
 800624a:	0006      	movs	r6, r0
 800624c:	001f      	movs	r7, r3
 800624e:	2b0c      	cmp	r3, #12
 8006250:	d232      	bcs.n	80062b8 <_malloc_r+0x78>
 8006252:	270c      	movs	r7, #12
 8006254:	42b9      	cmp	r1, r7
 8006256:	d831      	bhi.n	80062bc <_malloc_r+0x7c>
 8006258:	0030      	movs	r0, r6
 800625a:	f000 fca7 	bl	8006bac <__malloc_lock>
 800625e:	4d32      	ldr	r5, [pc, #200]	; (8006328 <_malloc_r+0xe8>)
 8006260:	682b      	ldr	r3, [r5, #0]
 8006262:	001c      	movs	r4, r3
 8006264:	2c00      	cmp	r4, #0
 8006266:	d12e      	bne.n	80062c6 <_malloc_r+0x86>
 8006268:	0039      	movs	r1, r7
 800626a:	0030      	movs	r0, r6
 800626c:	f7ff ffc6 	bl	80061fc <sbrk_aligned>
 8006270:	0004      	movs	r4, r0
 8006272:	1c43      	adds	r3, r0, #1
 8006274:	d11e      	bne.n	80062b4 <_malloc_r+0x74>
 8006276:	682c      	ldr	r4, [r5, #0]
 8006278:	0025      	movs	r5, r4
 800627a:	2d00      	cmp	r5, #0
 800627c:	d14a      	bne.n	8006314 <_malloc_r+0xd4>
 800627e:	6823      	ldr	r3, [r4, #0]
 8006280:	0029      	movs	r1, r5
 8006282:	18e3      	adds	r3, r4, r3
 8006284:	0030      	movs	r0, r6
 8006286:	9301      	str	r3, [sp, #4]
 8006288:	f000 f9b2 	bl	80065f0 <_sbrk_r>
 800628c:	9b01      	ldr	r3, [sp, #4]
 800628e:	4283      	cmp	r3, r0
 8006290:	d143      	bne.n	800631a <_malloc_r+0xda>
 8006292:	6823      	ldr	r3, [r4, #0]
 8006294:	3703      	adds	r7, #3
 8006296:	1aff      	subs	r7, r7, r3
 8006298:	2303      	movs	r3, #3
 800629a:	439f      	bics	r7, r3
 800629c:	3708      	adds	r7, #8
 800629e:	2f0c      	cmp	r7, #12
 80062a0:	d200      	bcs.n	80062a4 <_malloc_r+0x64>
 80062a2:	270c      	movs	r7, #12
 80062a4:	0039      	movs	r1, r7
 80062a6:	0030      	movs	r0, r6
 80062a8:	f7ff ffa8 	bl	80061fc <sbrk_aligned>
 80062ac:	1c43      	adds	r3, r0, #1
 80062ae:	d034      	beq.n	800631a <_malloc_r+0xda>
 80062b0:	6823      	ldr	r3, [r4, #0]
 80062b2:	19df      	adds	r7, r3, r7
 80062b4:	6027      	str	r7, [r4, #0]
 80062b6:	e013      	b.n	80062e0 <_malloc_r+0xa0>
 80062b8:	2b00      	cmp	r3, #0
 80062ba:	dacb      	bge.n	8006254 <_malloc_r+0x14>
 80062bc:	230c      	movs	r3, #12
 80062be:	2500      	movs	r5, #0
 80062c0:	6033      	str	r3, [r6, #0]
 80062c2:	0028      	movs	r0, r5
 80062c4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80062c6:	6822      	ldr	r2, [r4, #0]
 80062c8:	1bd1      	subs	r1, r2, r7
 80062ca:	d420      	bmi.n	800630e <_malloc_r+0xce>
 80062cc:	290b      	cmp	r1, #11
 80062ce:	d917      	bls.n	8006300 <_malloc_r+0xc0>
 80062d0:	19e2      	adds	r2, r4, r7
 80062d2:	6027      	str	r7, [r4, #0]
 80062d4:	42a3      	cmp	r3, r4
 80062d6:	d111      	bne.n	80062fc <_malloc_r+0xbc>
 80062d8:	602a      	str	r2, [r5, #0]
 80062da:	6863      	ldr	r3, [r4, #4]
 80062dc:	6011      	str	r1, [r2, #0]
 80062de:	6053      	str	r3, [r2, #4]
 80062e0:	0030      	movs	r0, r6
 80062e2:	0025      	movs	r5, r4
 80062e4:	f000 fc6a 	bl	8006bbc <__malloc_unlock>
 80062e8:	2207      	movs	r2, #7
 80062ea:	350b      	adds	r5, #11
 80062ec:	1d23      	adds	r3, r4, #4
 80062ee:	4395      	bics	r5, r2
 80062f0:	1aea      	subs	r2, r5, r3
 80062f2:	429d      	cmp	r5, r3
 80062f4:	d0e5      	beq.n	80062c2 <_malloc_r+0x82>
 80062f6:	1b5b      	subs	r3, r3, r5
 80062f8:	50a3      	str	r3, [r4, r2]
 80062fa:	e7e2      	b.n	80062c2 <_malloc_r+0x82>
 80062fc:	605a      	str	r2, [r3, #4]
 80062fe:	e7ec      	b.n	80062da <_malloc_r+0x9a>
 8006300:	6862      	ldr	r2, [r4, #4]
 8006302:	42a3      	cmp	r3, r4
 8006304:	d101      	bne.n	800630a <_malloc_r+0xca>
 8006306:	602a      	str	r2, [r5, #0]
 8006308:	e7ea      	b.n	80062e0 <_malloc_r+0xa0>
 800630a:	605a      	str	r2, [r3, #4]
 800630c:	e7e8      	b.n	80062e0 <_malloc_r+0xa0>
 800630e:	0023      	movs	r3, r4
 8006310:	6864      	ldr	r4, [r4, #4]
 8006312:	e7a7      	b.n	8006264 <_malloc_r+0x24>
 8006314:	002c      	movs	r4, r5
 8006316:	686d      	ldr	r5, [r5, #4]
 8006318:	e7af      	b.n	800627a <_malloc_r+0x3a>
 800631a:	230c      	movs	r3, #12
 800631c:	0030      	movs	r0, r6
 800631e:	6033      	str	r3, [r6, #0]
 8006320:	f000 fc4c 	bl	8006bbc <__malloc_unlock>
 8006324:	e7cd      	b.n	80062c2 <_malloc_r+0x82>
 8006326:	46c0      	nop			; (mov r8, r8)
 8006328:	20000270 	.word	0x20000270

0800632c <__sfputc_r>:
 800632c:	6893      	ldr	r3, [r2, #8]
 800632e:	b510      	push	{r4, lr}
 8006330:	3b01      	subs	r3, #1
 8006332:	6093      	str	r3, [r2, #8]
 8006334:	2b00      	cmp	r3, #0
 8006336:	da04      	bge.n	8006342 <__sfputc_r+0x16>
 8006338:	6994      	ldr	r4, [r2, #24]
 800633a:	42a3      	cmp	r3, r4
 800633c:	db07      	blt.n	800634e <__sfputc_r+0x22>
 800633e:	290a      	cmp	r1, #10
 8006340:	d005      	beq.n	800634e <__sfputc_r+0x22>
 8006342:	6813      	ldr	r3, [r2, #0]
 8006344:	1c58      	adds	r0, r3, #1
 8006346:	6010      	str	r0, [r2, #0]
 8006348:	7019      	strb	r1, [r3, #0]
 800634a:	0008      	movs	r0, r1
 800634c:	bd10      	pop	{r4, pc}
 800634e:	f000 f9ad 	bl	80066ac <__swbuf_r>
 8006352:	0001      	movs	r1, r0
 8006354:	e7f9      	b.n	800634a <__sfputc_r+0x1e>

08006356 <__sfputs_r>:
 8006356:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006358:	0006      	movs	r6, r0
 800635a:	000f      	movs	r7, r1
 800635c:	0014      	movs	r4, r2
 800635e:	18d5      	adds	r5, r2, r3
 8006360:	42ac      	cmp	r4, r5
 8006362:	d101      	bne.n	8006368 <__sfputs_r+0x12>
 8006364:	2000      	movs	r0, #0
 8006366:	e007      	b.n	8006378 <__sfputs_r+0x22>
 8006368:	7821      	ldrb	r1, [r4, #0]
 800636a:	003a      	movs	r2, r7
 800636c:	0030      	movs	r0, r6
 800636e:	f7ff ffdd 	bl	800632c <__sfputc_r>
 8006372:	3401      	adds	r4, #1
 8006374:	1c43      	adds	r3, r0, #1
 8006376:	d1f3      	bne.n	8006360 <__sfputs_r+0xa>
 8006378:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800637c <_vfiprintf_r>:
 800637c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800637e:	b0a1      	sub	sp, #132	; 0x84
 8006380:	0006      	movs	r6, r0
 8006382:	000c      	movs	r4, r1
 8006384:	001f      	movs	r7, r3
 8006386:	9203      	str	r2, [sp, #12]
 8006388:	2800      	cmp	r0, #0
 800638a:	d004      	beq.n	8006396 <_vfiprintf_r+0x1a>
 800638c:	6983      	ldr	r3, [r0, #24]
 800638e:	2b00      	cmp	r3, #0
 8006390:	d101      	bne.n	8006396 <_vfiprintf_r+0x1a>
 8006392:	f7ff fa5b 	bl	800584c <__sinit>
 8006396:	4b8e      	ldr	r3, [pc, #568]	; (80065d0 <_vfiprintf_r+0x254>)
 8006398:	429c      	cmp	r4, r3
 800639a:	d11c      	bne.n	80063d6 <_vfiprintf_r+0x5a>
 800639c:	6874      	ldr	r4, [r6, #4]
 800639e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80063a0:	07db      	lsls	r3, r3, #31
 80063a2:	d405      	bmi.n	80063b0 <_vfiprintf_r+0x34>
 80063a4:	89a3      	ldrh	r3, [r4, #12]
 80063a6:	059b      	lsls	r3, r3, #22
 80063a8:	d402      	bmi.n	80063b0 <_vfiprintf_r+0x34>
 80063aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80063ac:	f7ff faf3 	bl	8005996 <__retarget_lock_acquire_recursive>
 80063b0:	89a3      	ldrh	r3, [r4, #12]
 80063b2:	071b      	lsls	r3, r3, #28
 80063b4:	d502      	bpl.n	80063bc <_vfiprintf_r+0x40>
 80063b6:	6923      	ldr	r3, [r4, #16]
 80063b8:	2b00      	cmp	r3, #0
 80063ba:	d11d      	bne.n	80063f8 <_vfiprintf_r+0x7c>
 80063bc:	0021      	movs	r1, r4
 80063be:	0030      	movs	r0, r6
 80063c0:	f000 f9de 	bl	8006780 <__swsetup_r>
 80063c4:	2800      	cmp	r0, #0
 80063c6:	d017      	beq.n	80063f8 <_vfiprintf_r+0x7c>
 80063c8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80063ca:	07db      	lsls	r3, r3, #31
 80063cc:	d50d      	bpl.n	80063ea <_vfiprintf_r+0x6e>
 80063ce:	2001      	movs	r0, #1
 80063d0:	4240      	negs	r0, r0
 80063d2:	b021      	add	sp, #132	; 0x84
 80063d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063d6:	4b7f      	ldr	r3, [pc, #508]	; (80065d4 <_vfiprintf_r+0x258>)
 80063d8:	429c      	cmp	r4, r3
 80063da:	d101      	bne.n	80063e0 <_vfiprintf_r+0x64>
 80063dc:	68b4      	ldr	r4, [r6, #8]
 80063de:	e7de      	b.n	800639e <_vfiprintf_r+0x22>
 80063e0:	4b7d      	ldr	r3, [pc, #500]	; (80065d8 <_vfiprintf_r+0x25c>)
 80063e2:	429c      	cmp	r4, r3
 80063e4:	d1db      	bne.n	800639e <_vfiprintf_r+0x22>
 80063e6:	68f4      	ldr	r4, [r6, #12]
 80063e8:	e7d9      	b.n	800639e <_vfiprintf_r+0x22>
 80063ea:	89a3      	ldrh	r3, [r4, #12]
 80063ec:	059b      	lsls	r3, r3, #22
 80063ee:	d4ee      	bmi.n	80063ce <_vfiprintf_r+0x52>
 80063f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80063f2:	f7ff fad1 	bl	8005998 <__retarget_lock_release_recursive>
 80063f6:	e7ea      	b.n	80063ce <_vfiprintf_r+0x52>
 80063f8:	2300      	movs	r3, #0
 80063fa:	ad08      	add	r5, sp, #32
 80063fc:	616b      	str	r3, [r5, #20]
 80063fe:	3320      	adds	r3, #32
 8006400:	766b      	strb	r3, [r5, #25]
 8006402:	3310      	adds	r3, #16
 8006404:	76ab      	strb	r3, [r5, #26]
 8006406:	9707      	str	r7, [sp, #28]
 8006408:	9f03      	ldr	r7, [sp, #12]
 800640a:	783b      	ldrb	r3, [r7, #0]
 800640c:	2b00      	cmp	r3, #0
 800640e:	d001      	beq.n	8006414 <_vfiprintf_r+0x98>
 8006410:	2b25      	cmp	r3, #37	; 0x25
 8006412:	d14e      	bne.n	80064b2 <_vfiprintf_r+0x136>
 8006414:	9b03      	ldr	r3, [sp, #12]
 8006416:	1afb      	subs	r3, r7, r3
 8006418:	9305      	str	r3, [sp, #20]
 800641a:	9b03      	ldr	r3, [sp, #12]
 800641c:	429f      	cmp	r7, r3
 800641e:	d00d      	beq.n	800643c <_vfiprintf_r+0xc0>
 8006420:	9b05      	ldr	r3, [sp, #20]
 8006422:	0021      	movs	r1, r4
 8006424:	0030      	movs	r0, r6
 8006426:	9a03      	ldr	r2, [sp, #12]
 8006428:	f7ff ff95 	bl	8006356 <__sfputs_r>
 800642c:	1c43      	adds	r3, r0, #1
 800642e:	d100      	bne.n	8006432 <_vfiprintf_r+0xb6>
 8006430:	e0b5      	b.n	800659e <_vfiprintf_r+0x222>
 8006432:	696a      	ldr	r2, [r5, #20]
 8006434:	9b05      	ldr	r3, [sp, #20]
 8006436:	4694      	mov	ip, r2
 8006438:	4463      	add	r3, ip
 800643a:	616b      	str	r3, [r5, #20]
 800643c:	783b      	ldrb	r3, [r7, #0]
 800643e:	2b00      	cmp	r3, #0
 8006440:	d100      	bne.n	8006444 <_vfiprintf_r+0xc8>
 8006442:	e0ac      	b.n	800659e <_vfiprintf_r+0x222>
 8006444:	2201      	movs	r2, #1
 8006446:	1c7b      	adds	r3, r7, #1
 8006448:	9303      	str	r3, [sp, #12]
 800644a:	2300      	movs	r3, #0
 800644c:	4252      	negs	r2, r2
 800644e:	606a      	str	r2, [r5, #4]
 8006450:	a904      	add	r1, sp, #16
 8006452:	3254      	adds	r2, #84	; 0x54
 8006454:	1852      	adds	r2, r2, r1
 8006456:	602b      	str	r3, [r5, #0]
 8006458:	60eb      	str	r3, [r5, #12]
 800645a:	60ab      	str	r3, [r5, #8]
 800645c:	7013      	strb	r3, [r2, #0]
 800645e:	65ab      	str	r3, [r5, #88]	; 0x58
 8006460:	9b03      	ldr	r3, [sp, #12]
 8006462:	2205      	movs	r2, #5
 8006464:	7819      	ldrb	r1, [r3, #0]
 8006466:	485d      	ldr	r0, [pc, #372]	; (80065dc <_vfiprintf_r+0x260>)
 8006468:	f7ff faa2 	bl	80059b0 <memchr>
 800646c:	9b03      	ldr	r3, [sp, #12]
 800646e:	1c5f      	adds	r7, r3, #1
 8006470:	2800      	cmp	r0, #0
 8006472:	d120      	bne.n	80064b6 <_vfiprintf_r+0x13a>
 8006474:	682a      	ldr	r2, [r5, #0]
 8006476:	06d3      	lsls	r3, r2, #27
 8006478:	d504      	bpl.n	8006484 <_vfiprintf_r+0x108>
 800647a:	2353      	movs	r3, #83	; 0x53
 800647c:	a904      	add	r1, sp, #16
 800647e:	185b      	adds	r3, r3, r1
 8006480:	2120      	movs	r1, #32
 8006482:	7019      	strb	r1, [r3, #0]
 8006484:	0713      	lsls	r3, r2, #28
 8006486:	d504      	bpl.n	8006492 <_vfiprintf_r+0x116>
 8006488:	2353      	movs	r3, #83	; 0x53
 800648a:	a904      	add	r1, sp, #16
 800648c:	185b      	adds	r3, r3, r1
 800648e:	212b      	movs	r1, #43	; 0x2b
 8006490:	7019      	strb	r1, [r3, #0]
 8006492:	9b03      	ldr	r3, [sp, #12]
 8006494:	781b      	ldrb	r3, [r3, #0]
 8006496:	2b2a      	cmp	r3, #42	; 0x2a
 8006498:	d016      	beq.n	80064c8 <_vfiprintf_r+0x14c>
 800649a:	2100      	movs	r1, #0
 800649c:	68eb      	ldr	r3, [r5, #12]
 800649e:	9f03      	ldr	r7, [sp, #12]
 80064a0:	783a      	ldrb	r2, [r7, #0]
 80064a2:	1c78      	adds	r0, r7, #1
 80064a4:	3a30      	subs	r2, #48	; 0x30
 80064a6:	4684      	mov	ip, r0
 80064a8:	2a09      	cmp	r2, #9
 80064aa:	d94f      	bls.n	800654c <_vfiprintf_r+0x1d0>
 80064ac:	2900      	cmp	r1, #0
 80064ae:	d111      	bne.n	80064d4 <_vfiprintf_r+0x158>
 80064b0:	e017      	b.n	80064e2 <_vfiprintf_r+0x166>
 80064b2:	3701      	adds	r7, #1
 80064b4:	e7a9      	b.n	800640a <_vfiprintf_r+0x8e>
 80064b6:	4b49      	ldr	r3, [pc, #292]	; (80065dc <_vfiprintf_r+0x260>)
 80064b8:	682a      	ldr	r2, [r5, #0]
 80064ba:	1ac0      	subs	r0, r0, r3
 80064bc:	2301      	movs	r3, #1
 80064be:	4083      	lsls	r3, r0
 80064c0:	4313      	orrs	r3, r2
 80064c2:	602b      	str	r3, [r5, #0]
 80064c4:	9703      	str	r7, [sp, #12]
 80064c6:	e7cb      	b.n	8006460 <_vfiprintf_r+0xe4>
 80064c8:	9b07      	ldr	r3, [sp, #28]
 80064ca:	1d19      	adds	r1, r3, #4
 80064cc:	681b      	ldr	r3, [r3, #0]
 80064ce:	9107      	str	r1, [sp, #28]
 80064d0:	2b00      	cmp	r3, #0
 80064d2:	db01      	blt.n	80064d8 <_vfiprintf_r+0x15c>
 80064d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80064d6:	e004      	b.n	80064e2 <_vfiprintf_r+0x166>
 80064d8:	425b      	negs	r3, r3
 80064da:	60eb      	str	r3, [r5, #12]
 80064dc:	2302      	movs	r3, #2
 80064de:	4313      	orrs	r3, r2
 80064e0:	602b      	str	r3, [r5, #0]
 80064e2:	783b      	ldrb	r3, [r7, #0]
 80064e4:	2b2e      	cmp	r3, #46	; 0x2e
 80064e6:	d10a      	bne.n	80064fe <_vfiprintf_r+0x182>
 80064e8:	787b      	ldrb	r3, [r7, #1]
 80064ea:	2b2a      	cmp	r3, #42	; 0x2a
 80064ec:	d137      	bne.n	800655e <_vfiprintf_r+0x1e2>
 80064ee:	9b07      	ldr	r3, [sp, #28]
 80064f0:	3702      	adds	r7, #2
 80064f2:	1d1a      	adds	r2, r3, #4
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	9207      	str	r2, [sp, #28]
 80064f8:	2b00      	cmp	r3, #0
 80064fa:	db2d      	blt.n	8006558 <_vfiprintf_r+0x1dc>
 80064fc:	9309      	str	r3, [sp, #36]	; 0x24
 80064fe:	2203      	movs	r2, #3
 8006500:	7839      	ldrb	r1, [r7, #0]
 8006502:	4837      	ldr	r0, [pc, #220]	; (80065e0 <_vfiprintf_r+0x264>)
 8006504:	f7ff fa54 	bl	80059b0 <memchr>
 8006508:	2800      	cmp	r0, #0
 800650a:	d007      	beq.n	800651c <_vfiprintf_r+0x1a0>
 800650c:	4b34      	ldr	r3, [pc, #208]	; (80065e0 <_vfiprintf_r+0x264>)
 800650e:	682a      	ldr	r2, [r5, #0]
 8006510:	1ac0      	subs	r0, r0, r3
 8006512:	2340      	movs	r3, #64	; 0x40
 8006514:	4083      	lsls	r3, r0
 8006516:	4313      	orrs	r3, r2
 8006518:	3701      	adds	r7, #1
 800651a:	602b      	str	r3, [r5, #0]
 800651c:	7839      	ldrb	r1, [r7, #0]
 800651e:	1c7b      	adds	r3, r7, #1
 8006520:	2206      	movs	r2, #6
 8006522:	4830      	ldr	r0, [pc, #192]	; (80065e4 <_vfiprintf_r+0x268>)
 8006524:	9303      	str	r3, [sp, #12]
 8006526:	7629      	strb	r1, [r5, #24]
 8006528:	f7ff fa42 	bl	80059b0 <memchr>
 800652c:	2800      	cmp	r0, #0
 800652e:	d045      	beq.n	80065bc <_vfiprintf_r+0x240>
 8006530:	4b2d      	ldr	r3, [pc, #180]	; (80065e8 <_vfiprintf_r+0x26c>)
 8006532:	2b00      	cmp	r3, #0
 8006534:	d127      	bne.n	8006586 <_vfiprintf_r+0x20a>
 8006536:	2207      	movs	r2, #7
 8006538:	9b07      	ldr	r3, [sp, #28]
 800653a:	3307      	adds	r3, #7
 800653c:	4393      	bics	r3, r2
 800653e:	3308      	adds	r3, #8
 8006540:	9307      	str	r3, [sp, #28]
 8006542:	696b      	ldr	r3, [r5, #20]
 8006544:	9a04      	ldr	r2, [sp, #16]
 8006546:	189b      	adds	r3, r3, r2
 8006548:	616b      	str	r3, [r5, #20]
 800654a:	e75d      	b.n	8006408 <_vfiprintf_r+0x8c>
 800654c:	210a      	movs	r1, #10
 800654e:	434b      	muls	r3, r1
 8006550:	4667      	mov	r7, ip
 8006552:	189b      	adds	r3, r3, r2
 8006554:	3909      	subs	r1, #9
 8006556:	e7a3      	b.n	80064a0 <_vfiprintf_r+0x124>
 8006558:	2301      	movs	r3, #1
 800655a:	425b      	negs	r3, r3
 800655c:	e7ce      	b.n	80064fc <_vfiprintf_r+0x180>
 800655e:	2300      	movs	r3, #0
 8006560:	001a      	movs	r2, r3
 8006562:	3701      	adds	r7, #1
 8006564:	606b      	str	r3, [r5, #4]
 8006566:	7839      	ldrb	r1, [r7, #0]
 8006568:	1c78      	adds	r0, r7, #1
 800656a:	3930      	subs	r1, #48	; 0x30
 800656c:	4684      	mov	ip, r0
 800656e:	2909      	cmp	r1, #9
 8006570:	d903      	bls.n	800657a <_vfiprintf_r+0x1fe>
 8006572:	2b00      	cmp	r3, #0
 8006574:	d0c3      	beq.n	80064fe <_vfiprintf_r+0x182>
 8006576:	9209      	str	r2, [sp, #36]	; 0x24
 8006578:	e7c1      	b.n	80064fe <_vfiprintf_r+0x182>
 800657a:	230a      	movs	r3, #10
 800657c:	435a      	muls	r2, r3
 800657e:	4667      	mov	r7, ip
 8006580:	1852      	adds	r2, r2, r1
 8006582:	3b09      	subs	r3, #9
 8006584:	e7ef      	b.n	8006566 <_vfiprintf_r+0x1ea>
 8006586:	ab07      	add	r3, sp, #28
 8006588:	9300      	str	r3, [sp, #0]
 800658a:	0022      	movs	r2, r4
 800658c:	0029      	movs	r1, r5
 800658e:	0030      	movs	r0, r6
 8006590:	4b16      	ldr	r3, [pc, #88]	; (80065ec <_vfiprintf_r+0x270>)
 8006592:	f7fd fe75 	bl	8004280 <_printf_float>
 8006596:	9004      	str	r0, [sp, #16]
 8006598:	9b04      	ldr	r3, [sp, #16]
 800659a:	3301      	adds	r3, #1
 800659c:	d1d1      	bne.n	8006542 <_vfiprintf_r+0x1c6>
 800659e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80065a0:	07db      	lsls	r3, r3, #31
 80065a2:	d405      	bmi.n	80065b0 <_vfiprintf_r+0x234>
 80065a4:	89a3      	ldrh	r3, [r4, #12]
 80065a6:	059b      	lsls	r3, r3, #22
 80065a8:	d402      	bmi.n	80065b0 <_vfiprintf_r+0x234>
 80065aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80065ac:	f7ff f9f4 	bl	8005998 <__retarget_lock_release_recursive>
 80065b0:	89a3      	ldrh	r3, [r4, #12]
 80065b2:	065b      	lsls	r3, r3, #25
 80065b4:	d500      	bpl.n	80065b8 <_vfiprintf_r+0x23c>
 80065b6:	e70a      	b.n	80063ce <_vfiprintf_r+0x52>
 80065b8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80065ba:	e70a      	b.n	80063d2 <_vfiprintf_r+0x56>
 80065bc:	ab07      	add	r3, sp, #28
 80065be:	9300      	str	r3, [sp, #0]
 80065c0:	0022      	movs	r2, r4
 80065c2:	0029      	movs	r1, r5
 80065c4:	0030      	movs	r0, r6
 80065c6:	4b09      	ldr	r3, [pc, #36]	; (80065ec <_vfiprintf_r+0x270>)
 80065c8:	f7fe f90c 	bl	80047e4 <_printf_i>
 80065cc:	e7e3      	b.n	8006596 <_vfiprintf_r+0x21a>
 80065ce:	46c0      	nop			; (mov r8, r8)
 80065d0:	08006eb0 	.word	0x08006eb0
 80065d4:	08006ed0 	.word	0x08006ed0
 80065d8:	08006e90 	.word	0x08006e90
 80065dc:	0800704c 	.word	0x0800704c
 80065e0:	08007052 	.word	0x08007052
 80065e4:	08007056 	.word	0x08007056
 80065e8:	08004281 	.word	0x08004281
 80065ec:	08006357 	.word	0x08006357

080065f0 <_sbrk_r>:
 80065f0:	2300      	movs	r3, #0
 80065f2:	b570      	push	{r4, r5, r6, lr}
 80065f4:	4d06      	ldr	r5, [pc, #24]	; (8006610 <_sbrk_r+0x20>)
 80065f6:	0004      	movs	r4, r0
 80065f8:	0008      	movs	r0, r1
 80065fa:	602b      	str	r3, [r5, #0]
 80065fc:	f7fc f8d8 	bl	80027b0 <_sbrk>
 8006600:	1c43      	adds	r3, r0, #1
 8006602:	d103      	bne.n	800660c <_sbrk_r+0x1c>
 8006604:	682b      	ldr	r3, [r5, #0]
 8006606:	2b00      	cmp	r3, #0
 8006608:	d000      	beq.n	800660c <_sbrk_r+0x1c>
 800660a:	6023      	str	r3, [r4, #0]
 800660c:	bd70      	pop	{r4, r5, r6, pc}
 800660e:	46c0      	nop			; (mov r8, r8)
 8006610:	20000278 	.word	0x20000278

08006614 <__sread>:
 8006614:	b570      	push	{r4, r5, r6, lr}
 8006616:	000c      	movs	r4, r1
 8006618:	250e      	movs	r5, #14
 800661a:	5f49      	ldrsh	r1, [r1, r5]
 800661c:	f000 fad6 	bl	8006bcc <_read_r>
 8006620:	2800      	cmp	r0, #0
 8006622:	db03      	blt.n	800662c <__sread+0x18>
 8006624:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006626:	181b      	adds	r3, r3, r0
 8006628:	6563      	str	r3, [r4, #84]	; 0x54
 800662a:	bd70      	pop	{r4, r5, r6, pc}
 800662c:	89a3      	ldrh	r3, [r4, #12]
 800662e:	4a02      	ldr	r2, [pc, #8]	; (8006638 <__sread+0x24>)
 8006630:	4013      	ands	r3, r2
 8006632:	81a3      	strh	r3, [r4, #12]
 8006634:	e7f9      	b.n	800662a <__sread+0x16>
 8006636:	46c0      	nop			; (mov r8, r8)
 8006638:	ffffefff 	.word	0xffffefff

0800663c <__swrite>:
 800663c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800663e:	001f      	movs	r7, r3
 8006640:	898b      	ldrh	r3, [r1, #12]
 8006642:	0005      	movs	r5, r0
 8006644:	000c      	movs	r4, r1
 8006646:	0016      	movs	r6, r2
 8006648:	05db      	lsls	r3, r3, #23
 800664a:	d505      	bpl.n	8006658 <__swrite+0x1c>
 800664c:	230e      	movs	r3, #14
 800664e:	5ec9      	ldrsh	r1, [r1, r3]
 8006650:	2200      	movs	r2, #0
 8006652:	2302      	movs	r3, #2
 8006654:	f000 fa18 	bl	8006a88 <_lseek_r>
 8006658:	89a3      	ldrh	r3, [r4, #12]
 800665a:	4a05      	ldr	r2, [pc, #20]	; (8006670 <__swrite+0x34>)
 800665c:	0028      	movs	r0, r5
 800665e:	4013      	ands	r3, r2
 8006660:	81a3      	strh	r3, [r4, #12]
 8006662:	0032      	movs	r2, r6
 8006664:	230e      	movs	r3, #14
 8006666:	5ee1      	ldrsh	r1, [r4, r3]
 8006668:	003b      	movs	r3, r7
 800666a:	f000 f875 	bl	8006758 <_write_r>
 800666e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006670:	ffffefff 	.word	0xffffefff

08006674 <__sseek>:
 8006674:	b570      	push	{r4, r5, r6, lr}
 8006676:	000c      	movs	r4, r1
 8006678:	250e      	movs	r5, #14
 800667a:	5f49      	ldrsh	r1, [r1, r5]
 800667c:	f000 fa04 	bl	8006a88 <_lseek_r>
 8006680:	89a3      	ldrh	r3, [r4, #12]
 8006682:	1c42      	adds	r2, r0, #1
 8006684:	d103      	bne.n	800668e <__sseek+0x1a>
 8006686:	4a05      	ldr	r2, [pc, #20]	; (800669c <__sseek+0x28>)
 8006688:	4013      	ands	r3, r2
 800668a:	81a3      	strh	r3, [r4, #12]
 800668c:	bd70      	pop	{r4, r5, r6, pc}
 800668e:	2280      	movs	r2, #128	; 0x80
 8006690:	0152      	lsls	r2, r2, #5
 8006692:	4313      	orrs	r3, r2
 8006694:	81a3      	strh	r3, [r4, #12]
 8006696:	6560      	str	r0, [r4, #84]	; 0x54
 8006698:	e7f8      	b.n	800668c <__sseek+0x18>
 800669a:	46c0      	nop			; (mov r8, r8)
 800669c:	ffffefff 	.word	0xffffefff

080066a0 <__sclose>:
 80066a0:	b510      	push	{r4, lr}
 80066a2:	230e      	movs	r3, #14
 80066a4:	5ec9      	ldrsh	r1, [r1, r3]
 80066a6:	f000 f901 	bl	80068ac <_close_r>
 80066aa:	bd10      	pop	{r4, pc}

080066ac <__swbuf_r>:
 80066ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80066ae:	0005      	movs	r5, r0
 80066b0:	000e      	movs	r6, r1
 80066b2:	0014      	movs	r4, r2
 80066b4:	2800      	cmp	r0, #0
 80066b6:	d004      	beq.n	80066c2 <__swbuf_r+0x16>
 80066b8:	6983      	ldr	r3, [r0, #24]
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d101      	bne.n	80066c2 <__swbuf_r+0x16>
 80066be:	f7ff f8c5 	bl	800584c <__sinit>
 80066c2:	4b22      	ldr	r3, [pc, #136]	; (800674c <__swbuf_r+0xa0>)
 80066c4:	429c      	cmp	r4, r3
 80066c6:	d12e      	bne.n	8006726 <__swbuf_r+0x7a>
 80066c8:	686c      	ldr	r4, [r5, #4]
 80066ca:	69a3      	ldr	r3, [r4, #24]
 80066cc:	60a3      	str	r3, [r4, #8]
 80066ce:	89a3      	ldrh	r3, [r4, #12]
 80066d0:	071b      	lsls	r3, r3, #28
 80066d2:	d532      	bpl.n	800673a <__swbuf_r+0x8e>
 80066d4:	6923      	ldr	r3, [r4, #16]
 80066d6:	2b00      	cmp	r3, #0
 80066d8:	d02f      	beq.n	800673a <__swbuf_r+0x8e>
 80066da:	6823      	ldr	r3, [r4, #0]
 80066dc:	6922      	ldr	r2, [r4, #16]
 80066de:	b2f7      	uxtb	r7, r6
 80066e0:	1a98      	subs	r0, r3, r2
 80066e2:	6963      	ldr	r3, [r4, #20]
 80066e4:	b2f6      	uxtb	r6, r6
 80066e6:	4283      	cmp	r3, r0
 80066e8:	dc05      	bgt.n	80066f6 <__swbuf_r+0x4a>
 80066ea:	0021      	movs	r1, r4
 80066ec:	0028      	movs	r0, r5
 80066ee:	f000 f97b 	bl	80069e8 <_fflush_r>
 80066f2:	2800      	cmp	r0, #0
 80066f4:	d127      	bne.n	8006746 <__swbuf_r+0x9a>
 80066f6:	68a3      	ldr	r3, [r4, #8]
 80066f8:	3001      	adds	r0, #1
 80066fa:	3b01      	subs	r3, #1
 80066fc:	60a3      	str	r3, [r4, #8]
 80066fe:	6823      	ldr	r3, [r4, #0]
 8006700:	1c5a      	adds	r2, r3, #1
 8006702:	6022      	str	r2, [r4, #0]
 8006704:	701f      	strb	r7, [r3, #0]
 8006706:	6963      	ldr	r3, [r4, #20]
 8006708:	4283      	cmp	r3, r0
 800670a:	d004      	beq.n	8006716 <__swbuf_r+0x6a>
 800670c:	89a3      	ldrh	r3, [r4, #12]
 800670e:	07db      	lsls	r3, r3, #31
 8006710:	d507      	bpl.n	8006722 <__swbuf_r+0x76>
 8006712:	2e0a      	cmp	r6, #10
 8006714:	d105      	bne.n	8006722 <__swbuf_r+0x76>
 8006716:	0021      	movs	r1, r4
 8006718:	0028      	movs	r0, r5
 800671a:	f000 f965 	bl	80069e8 <_fflush_r>
 800671e:	2800      	cmp	r0, #0
 8006720:	d111      	bne.n	8006746 <__swbuf_r+0x9a>
 8006722:	0030      	movs	r0, r6
 8006724:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006726:	4b0a      	ldr	r3, [pc, #40]	; (8006750 <__swbuf_r+0xa4>)
 8006728:	429c      	cmp	r4, r3
 800672a:	d101      	bne.n	8006730 <__swbuf_r+0x84>
 800672c:	68ac      	ldr	r4, [r5, #8]
 800672e:	e7cc      	b.n	80066ca <__swbuf_r+0x1e>
 8006730:	4b08      	ldr	r3, [pc, #32]	; (8006754 <__swbuf_r+0xa8>)
 8006732:	429c      	cmp	r4, r3
 8006734:	d1c9      	bne.n	80066ca <__swbuf_r+0x1e>
 8006736:	68ec      	ldr	r4, [r5, #12]
 8006738:	e7c7      	b.n	80066ca <__swbuf_r+0x1e>
 800673a:	0021      	movs	r1, r4
 800673c:	0028      	movs	r0, r5
 800673e:	f000 f81f 	bl	8006780 <__swsetup_r>
 8006742:	2800      	cmp	r0, #0
 8006744:	d0c9      	beq.n	80066da <__swbuf_r+0x2e>
 8006746:	2601      	movs	r6, #1
 8006748:	4276      	negs	r6, r6
 800674a:	e7ea      	b.n	8006722 <__swbuf_r+0x76>
 800674c:	08006eb0 	.word	0x08006eb0
 8006750:	08006ed0 	.word	0x08006ed0
 8006754:	08006e90 	.word	0x08006e90

08006758 <_write_r>:
 8006758:	b570      	push	{r4, r5, r6, lr}
 800675a:	0004      	movs	r4, r0
 800675c:	0008      	movs	r0, r1
 800675e:	0011      	movs	r1, r2
 8006760:	001a      	movs	r2, r3
 8006762:	2300      	movs	r3, #0
 8006764:	4d05      	ldr	r5, [pc, #20]	; (800677c <_write_r+0x24>)
 8006766:	602b      	str	r3, [r5, #0]
 8006768:	f7fb ffda 	bl	8002720 <_write>
 800676c:	1c43      	adds	r3, r0, #1
 800676e:	d103      	bne.n	8006778 <_write_r+0x20>
 8006770:	682b      	ldr	r3, [r5, #0]
 8006772:	2b00      	cmp	r3, #0
 8006774:	d000      	beq.n	8006778 <_write_r+0x20>
 8006776:	6023      	str	r3, [r4, #0]
 8006778:	bd70      	pop	{r4, r5, r6, pc}
 800677a:	46c0      	nop			; (mov r8, r8)
 800677c:	20000278 	.word	0x20000278

08006780 <__swsetup_r>:
 8006780:	4b37      	ldr	r3, [pc, #220]	; (8006860 <__swsetup_r+0xe0>)
 8006782:	b570      	push	{r4, r5, r6, lr}
 8006784:	681d      	ldr	r5, [r3, #0]
 8006786:	0006      	movs	r6, r0
 8006788:	000c      	movs	r4, r1
 800678a:	2d00      	cmp	r5, #0
 800678c:	d005      	beq.n	800679a <__swsetup_r+0x1a>
 800678e:	69ab      	ldr	r3, [r5, #24]
 8006790:	2b00      	cmp	r3, #0
 8006792:	d102      	bne.n	800679a <__swsetup_r+0x1a>
 8006794:	0028      	movs	r0, r5
 8006796:	f7ff f859 	bl	800584c <__sinit>
 800679a:	4b32      	ldr	r3, [pc, #200]	; (8006864 <__swsetup_r+0xe4>)
 800679c:	429c      	cmp	r4, r3
 800679e:	d10f      	bne.n	80067c0 <__swsetup_r+0x40>
 80067a0:	686c      	ldr	r4, [r5, #4]
 80067a2:	230c      	movs	r3, #12
 80067a4:	5ee2      	ldrsh	r2, [r4, r3]
 80067a6:	b293      	uxth	r3, r2
 80067a8:	0711      	lsls	r1, r2, #28
 80067aa:	d42d      	bmi.n	8006808 <__swsetup_r+0x88>
 80067ac:	06d9      	lsls	r1, r3, #27
 80067ae:	d411      	bmi.n	80067d4 <__swsetup_r+0x54>
 80067b0:	2309      	movs	r3, #9
 80067b2:	2001      	movs	r0, #1
 80067b4:	6033      	str	r3, [r6, #0]
 80067b6:	3337      	adds	r3, #55	; 0x37
 80067b8:	4313      	orrs	r3, r2
 80067ba:	81a3      	strh	r3, [r4, #12]
 80067bc:	4240      	negs	r0, r0
 80067be:	bd70      	pop	{r4, r5, r6, pc}
 80067c0:	4b29      	ldr	r3, [pc, #164]	; (8006868 <__swsetup_r+0xe8>)
 80067c2:	429c      	cmp	r4, r3
 80067c4:	d101      	bne.n	80067ca <__swsetup_r+0x4a>
 80067c6:	68ac      	ldr	r4, [r5, #8]
 80067c8:	e7eb      	b.n	80067a2 <__swsetup_r+0x22>
 80067ca:	4b28      	ldr	r3, [pc, #160]	; (800686c <__swsetup_r+0xec>)
 80067cc:	429c      	cmp	r4, r3
 80067ce:	d1e8      	bne.n	80067a2 <__swsetup_r+0x22>
 80067d0:	68ec      	ldr	r4, [r5, #12]
 80067d2:	e7e6      	b.n	80067a2 <__swsetup_r+0x22>
 80067d4:	075b      	lsls	r3, r3, #29
 80067d6:	d513      	bpl.n	8006800 <__swsetup_r+0x80>
 80067d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80067da:	2900      	cmp	r1, #0
 80067dc:	d008      	beq.n	80067f0 <__swsetup_r+0x70>
 80067de:	0023      	movs	r3, r4
 80067e0:	3344      	adds	r3, #68	; 0x44
 80067e2:	4299      	cmp	r1, r3
 80067e4:	d002      	beq.n	80067ec <__swsetup_r+0x6c>
 80067e6:	0030      	movs	r0, r6
 80067e8:	f7ff fcbe 	bl	8006168 <_free_r>
 80067ec:	2300      	movs	r3, #0
 80067ee:	6363      	str	r3, [r4, #52]	; 0x34
 80067f0:	2224      	movs	r2, #36	; 0x24
 80067f2:	89a3      	ldrh	r3, [r4, #12]
 80067f4:	4393      	bics	r3, r2
 80067f6:	81a3      	strh	r3, [r4, #12]
 80067f8:	2300      	movs	r3, #0
 80067fa:	6063      	str	r3, [r4, #4]
 80067fc:	6923      	ldr	r3, [r4, #16]
 80067fe:	6023      	str	r3, [r4, #0]
 8006800:	2308      	movs	r3, #8
 8006802:	89a2      	ldrh	r2, [r4, #12]
 8006804:	4313      	orrs	r3, r2
 8006806:	81a3      	strh	r3, [r4, #12]
 8006808:	6923      	ldr	r3, [r4, #16]
 800680a:	2b00      	cmp	r3, #0
 800680c:	d10b      	bne.n	8006826 <__swsetup_r+0xa6>
 800680e:	21a0      	movs	r1, #160	; 0xa0
 8006810:	2280      	movs	r2, #128	; 0x80
 8006812:	89a3      	ldrh	r3, [r4, #12]
 8006814:	0089      	lsls	r1, r1, #2
 8006816:	0092      	lsls	r2, r2, #2
 8006818:	400b      	ands	r3, r1
 800681a:	4293      	cmp	r3, r2
 800681c:	d003      	beq.n	8006826 <__swsetup_r+0xa6>
 800681e:	0021      	movs	r1, r4
 8006820:	0030      	movs	r0, r6
 8006822:	f000 f96d 	bl	8006b00 <__smakebuf_r>
 8006826:	220c      	movs	r2, #12
 8006828:	5ea3      	ldrsh	r3, [r4, r2]
 800682a:	2001      	movs	r0, #1
 800682c:	001a      	movs	r2, r3
 800682e:	b299      	uxth	r1, r3
 8006830:	4002      	ands	r2, r0
 8006832:	4203      	tst	r3, r0
 8006834:	d00f      	beq.n	8006856 <__swsetup_r+0xd6>
 8006836:	2200      	movs	r2, #0
 8006838:	60a2      	str	r2, [r4, #8]
 800683a:	6962      	ldr	r2, [r4, #20]
 800683c:	4252      	negs	r2, r2
 800683e:	61a2      	str	r2, [r4, #24]
 8006840:	2000      	movs	r0, #0
 8006842:	6922      	ldr	r2, [r4, #16]
 8006844:	4282      	cmp	r2, r0
 8006846:	d1ba      	bne.n	80067be <__swsetup_r+0x3e>
 8006848:	060a      	lsls	r2, r1, #24
 800684a:	d5b8      	bpl.n	80067be <__swsetup_r+0x3e>
 800684c:	2240      	movs	r2, #64	; 0x40
 800684e:	4313      	orrs	r3, r2
 8006850:	81a3      	strh	r3, [r4, #12]
 8006852:	3801      	subs	r0, #1
 8006854:	e7b3      	b.n	80067be <__swsetup_r+0x3e>
 8006856:	0788      	lsls	r0, r1, #30
 8006858:	d400      	bmi.n	800685c <__swsetup_r+0xdc>
 800685a:	6962      	ldr	r2, [r4, #20]
 800685c:	60a2      	str	r2, [r4, #8]
 800685e:	e7ef      	b.n	8006840 <__swsetup_r+0xc0>
 8006860:	2000000c 	.word	0x2000000c
 8006864:	08006eb0 	.word	0x08006eb0
 8006868:	08006ed0 	.word	0x08006ed0
 800686c:	08006e90 	.word	0x08006e90

08006870 <__assert_func>:
 8006870:	b530      	push	{r4, r5, lr}
 8006872:	0014      	movs	r4, r2
 8006874:	001a      	movs	r2, r3
 8006876:	4b09      	ldr	r3, [pc, #36]	; (800689c <__assert_func+0x2c>)
 8006878:	0005      	movs	r5, r0
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	b085      	sub	sp, #20
 800687e:	68d8      	ldr	r0, [r3, #12]
 8006880:	4b07      	ldr	r3, [pc, #28]	; (80068a0 <__assert_func+0x30>)
 8006882:	2c00      	cmp	r4, #0
 8006884:	d101      	bne.n	800688a <__assert_func+0x1a>
 8006886:	4b07      	ldr	r3, [pc, #28]	; (80068a4 <__assert_func+0x34>)
 8006888:	001c      	movs	r4, r3
 800688a:	9301      	str	r3, [sp, #4]
 800688c:	9100      	str	r1, [sp, #0]
 800688e:	002b      	movs	r3, r5
 8006890:	4905      	ldr	r1, [pc, #20]	; (80068a8 <__assert_func+0x38>)
 8006892:	9402      	str	r4, [sp, #8]
 8006894:	f000 f8e8 	bl	8006a68 <fiprintf>
 8006898:	f000 f9b9 	bl	8006c0e <abort>
 800689c:	2000000c 	.word	0x2000000c
 80068a0:	0800705d 	.word	0x0800705d
 80068a4:	08007098 	.word	0x08007098
 80068a8:	0800706a 	.word	0x0800706a

080068ac <_close_r>:
 80068ac:	2300      	movs	r3, #0
 80068ae:	b570      	push	{r4, r5, r6, lr}
 80068b0:	4d06      	ldr	r5, [pc, #24]	; (80068cc <_close_r+0x20>)
 80068b2:	0004      	movs	r4, r0
 80068b4:	0008      	movs	r0, r1
 80068b6:	602b      	str	r3, [r5, #0]
 80068b8:	f7fb ff4e 	bl	8002758 <_close>
 80068bc:	1c43      	adds	r3, r0, #1
 80068be:	d103      	bne.n	80068c8 <_close_r+0x1c>
 80068c0:	682b      	ldr	r3, [r5, #0]
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	d000      	beq.n	80068c8 <_close_r+0x1c>
 80068c6:	6023      	str	r3, [r4, #0]
 80068c8:	bd70      	pop	{r4, r5, r6, pc}
 80068ca:	46c0      	nop			; (mov r8, r8)
 80068cc:	20000278 	.word	0x20000278

080068d0 <__sflush_r>:
 80068d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80068d2:	898b      	ldrh	r3, [r1, #12]
 80068d4:	0005      	movs	r5, r0
 80068d6:	000c      	movs	r4, r1
 80068d8:	071a      	lsls	r2, r3, #28
 80068da:	d45f      	bmi.n	800699c <__sflush_r+0xcc>
 80068dc:	684a      	ldr	r2, [r1, #4]
 80068de:	2a00      	cmp	r2, #0
 80068e0:	dc04      	bgt.n	80068ec <__sflush_r+0x1c>
 80068e2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80068e4:	2a00      	cmp	r2, #0
 80068e6:	dc01      	bgt.n	80068ec <__sflush_r+0x1c>
 80068e8:	2000      	movs	r0, #0
 80068ea:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80068ec:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80068ee:	2f00      	cmp	r7, #0
 80068f0:	d0fa      	beq.n	80068e8 <__sflush_r+0x18>
 80068f2:	2200      	movs	r2, #0
 80068f4:	2180      	movs	r1, #128	; 0x80
 80068f6:	682e      	ldr	r6, [r5, #0]
 80068f8:	602a      	str	r2, [r5, #0]
 80068fa:	001a      	movs	r2, r3
 80068fc:	0149      	lsls	r1, r1, #5
 80068fe:	400a      	ands	r2, r1
 8006900:	420b      	tst	r3, r1
 8006902:	d034      	beq.n	800696e <__sflush_r+0x9e>
 8006904:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006906:	89a3      	ldrh	r3, [r4, #12]
 8006908:	075b      	lsls	r3, r3, #29
 800690a:	d506      	bpl.n	800691a <__sflush_r+0x4a>
 800690c:	6863      	ldr	r3, [r4, #4]
 800690e:	1ac0      	subs	r0, r0, r3
 8006910:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006912:	2b00      	cmp	r3, #0
 8006914:	d001      	beq.n	800691a <__sflush_r+0x4a>
 8006916:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006918:	1ac0      	subs	r0, r0, r3
 800691a:	0002      	movs	r2, r0
 800691c:	6a21      	ldr	r1, [r4, #32]
 800691e:	2300      	movs	r3, #0
 8006920:	0028      	movs	r0, r5
 8006922:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006924:	47b8      	blx	r7
 8006926:	89a1      	ldrh	r1, [r4, #12]
 8006928:	1c43      	adds	r3, r0, #1
 800692a:	d106      	bne.n	800693a <__sflush_r+0x6a>
 800692c:	682b      	ldr	r3, [r5, #0]
 800692e:	2b1d      	cmp	r3, #29
 8006930:	d831      	bhi.n	8006996 <__sflush_r+0xc6>
 8006932:	4a2c      	ldr	r2, [pc, #176]	; (80069e4 <__sflush_r+0x114>)
 8006934:	40da      	lsrs	r2, r3
 8006936:	07d3      	lsls	r3, r2, #31
 8006938:	d52d      	bpl.n	8006996 <__sflush_r+0xc6>
 800693a:	2300      	movs	r3, #0
 800693c:	6063      	str	r3, [r4, #4]
 800693e:	6923      	ldr	r3, [r4, #16]
 8006940:	6023      	str	r3, [r4, #0]
 8006942:	04cb      	lsls	r3, r1, #19
 8006944:	d505      	bpl.n	8006952 <__sflush_r+0x82>
 8006946:	1c43      	adds	r3, r0, #1
 8006948:	d102      	bne.n	8006950 <__sflush_r+0x80>
 800694a:	682b      	ldr	r3, [r5, #0]
 800694c:	2b00      	cmp	r3, #0
 800694e:	d100      	bne.n	8006952 <__sflush_r+0x82>
 8006950:	6560      	str	r0, [r4, #84]	; 0x54
 8006952:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006954:	602e      	str	r6, [r5, #0]
 8006956:	2900      	cmp	r1, #0
 8006958:	d0c6      	beq.n	80068e8 <__sflush_r+0x18>
 800695a:	0023      	movs	r3, r4
 800695c:	3344      	adds	r3, #68	; 0x44
 800695e:	4299      	cmp	r1, r3
 8006960:	d002      	beq.n	8006968 <__sflush_r+0x98>
 8006962:	0028      	movs	r0, r5
 8006964:	f7ff fc00 	bl	8006168 <_free_r>
 8006968:	2000      	movs	r0, #0
 800696a:	6360      	str	r0, [r4, #52]	; 0x34
 800696c:	e7bd      	b.n	80068ea <__sflush_r+0x1a>
 800696e:	2301      	movs	r3, #1
 8006970:	0028      	movs	r0, r5
 8006972:	6a21      	ldr	r1, [r4, #32]
 8006974:	47b8      	blx	r7
 8006976:	1c43      	adds	r3, r0, #1
 8006978:	d1c5      	bne.n	8006906 <__sflush_r+0x36>
 800697a:	682b      	ldr	r3, [r5, #0]
 800697c:	2b00      	cmp	r3, #0
 800697e:	d0c2      	beq.n	8006906 <__sflush_r+0x36>
 8006980:	2b1d      	cmp	r3, #29
 8006982:	d001      	beq.n	8006988 <__sflush_r+0xb8>
 8006984:	2b16      	cmp	r3, #22
 8006986:	d101      	bne.n	800698c <__sflush_r+0xbc>
 8006988:	602e      	str	r6, [r5, #0]
 800698a:	e7ad      	b.n	80068e8 <__sflush_r+0x18>
 800698c:	2340      	movs	r3, #64	; 0x40
 800698e:	89a2      	ldrh	r2, [r4, #12]
 8006990:	4313      	orrs	r3, r2
 8006992:	81a3      	strh	r3, [r4, #12]
 8006994:	e7a9      	b.n	80068ea <__sflush_r+0x1a>
 8006996:	2340      	movs	r3, #64	; 0x40
 8006998:	430b      	orrs	r3, r1
 800699a:	e7fa      	b.n	8006992 <__sflush_r+0xc2>
 800699c:	690f      	ldr	r7, [r1, #16]
 800699e:	2f00      	cmp	r7, #0
 80069a0:	d0a2      	beq.n	80068e8 <__sflush_r+0x18>
 80069a2:	680a      	ldr	r2, [r1, #0]
 80069a4:	600f      	str	r7, [r1, #0]
 80069a6:	1bd2      	subs	r2, r2, r7
 80069a8:	9201      	str	r2, [sp, #4]
 80069aa:	2200      	movs	r2, #0
 80069ac:	079b      	lsls	r3, r3, #30
 80069ae:	d100      	bne.n	80069b2 <__sflush_r+0xe2>
 80069b0:	694a      	ldr	r2, [r1, #20]
 80069b2:	60a2      	str	r2, [r4, #8]
 80069b4:	9b01      	ldr	r3, [sp, #4]
 80069b6:	2b00      	cmp	r3, #0
 80069b8:	dc00      	bgt.n	80069bc <__sflush_r+0xec>
 80069ba:	e795      	b.n	80068e8 <__sflush_r+0x18>
 80069bc:	003a      	movs	r2, r7
 80069be:	0028      	movs	r0, r5
 80069c0:	9b01      	ldr	r3, [sp, #4]
 80069c2:	6a21      	ldr	r1, [r4, #32]
 80069c4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80069c6:	47b0      	blx	r6
 80069c8:	2800      	cmp	r0, #0
 80069ca:	dc06      	bgt.n	80069da <__sflush_r+0x10a>
 80069cc:	2340      	movs	r3, #64	; 0x40
 80069ce:	2001      	movs	r0, #1
 80069d0:	89a2      	ldrh	r2, [r4, #12]
 80069d2:	4240      	negs	r0, r0
 80069d4:	4313      	orrs	r3, r2
 80069d6:	81a3      	strh	r3, [r4, #12]
 80069d8:	e787      	b.n	80068ea <__sflush_r+0x1a>
 80069da:	9b01      	ldr	r3, [sp, #4]
 80069dc:	183f      	adds	r7, r7, r0
 80069de:	1a1b      	subs	r3, r3, r0
 80069e0:	9301      	str	r3, [sp, #4]
 80069e2:	e7e7      	b.n	80069b4 <__sflush_r+0xe4>
 80069e4:	20400001 	.word	0x20400001

080069e8 <_fflush_r>:
 80069e8:	690b      	ldr	r3, [r1, #16]
 80069ea:	b570      	push	{r4, r5, r6, lr}
 80069ec:	0005      	movs	r5, r0
 80069ee:	000c      	movs	r4, r1
 80069f0:	2b00      	cmp	r3, #0
 80069f2:	d102      	bne.n	80069fa <_fflush_r+0x12>
 80069f4:	2500      	movs	r5, #0
 80069f6:	0028      	movs	r0, r5
 80069f8:	bd70      	pop	{r4, r5, r6, pc}
 80069fa:	2800      	cmp	r0, #0
 80069fc:	d004      	beq.n	8006a08 <_fflush_r+0x20>
 80069fe:	6983      	ldr	r3, [r0, #24]
 8006a00:	2b00      	cmp	r3, #0
 8006a02:	d101      	bne.n	8006a08 <_fflush_r+0x20>
 8006a04:	f7fe ff22 	bl	800584c <__sinit>
 8006a08:	4b14      	ldr	r3, [pc, #80]	; (8006a5c <_fflush_r+0x74>)
 8006a0a:	429c      	cmp	r4, r3
 8006a0c:	d11b      	bne.n	8006a46 <_fflush_r+0x5e>
 8006a0e:	686c      	ldr	r4, [r5, #4]
 8006a10:	220c      	movs	r2, #12
 8006a12:	5ea3      	ldrsh	r3, [r4, r2]
 8006a14:	2b00      	cmp	r3, #0
 8006a16:	d0ed      	beq.n	80069f4 <_fflush_r+0xc>
 8006a18:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006a1a:	07d2      	lsls	r2, r2, #31
 8006a1c:	d404      	bmi.n	8006a28 <_fflush_r+0x40>
 8006a1e:	059b      	lsls	r3, r3, #22
 8006a20:	d402      	bmi.n	8006a28 <_fflush_r+0x40>
 8006a22:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006a24:	f7fe ffb7 	bl	8005996 <__retarget_lock_acquire_recursive>
 8006a28:	0028      	movs	r0, r5
 8006a2a:	0021      	movs	r1, r4
 8006a2c:	f7ff ff50 	bl	80068d0 <__sflush_r>
 8006a30:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006a32:	0005      	movs	r5, r0
 8006a34:	07db      	lsls	r3, r3, #31
 8006a36:	d4de      	bmi.n	80069f6 <_fflush_r+0xe>
 8006a38:	89a3      	ldrh	r3, [r4, #12]
 8006a3a:	059b      	lsls	r3, r3, #22
 8006a3c:	d4db      	bmi.n	80069f6 <_fflush_r+0xe>
 8006a3e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006a40:	f7fe ffaa 	bl	8005998 <__retarget_lock_release_recursive>
 8006a44:	e7d7      	b.n	80069f6 <_fflush_r+0xe>
 8006a46:	4b06      	ldr	r3, [pc, #24]	; (8006a60 <_fflush_r+0x78>)
 8006a48:	429c      	cmp	r4, r3
 8006a4a:	d101      	bne.n	8006a50 <_fflush_r+0x68>
 8006a4c:	68ac      	ldr	r4, [r5, #8]
 8006a4e:	e7df      	b.n	8006a10 <_fflush_r+0x28>
 8006a50:	4b04      	ldr	r3, [pc, #16]	; (8006a64 <_fflush_r+0x7c>)
 8006a52:	429c      	cmp	r4, r3
 8006a54:	d1dc      	bne.n	8006a10 <_fflush_r+0x28>
 8006a56:	68ec      	ldr	r4, [r5, #12]
 8006a58:	e7da      	b.n	8006a10 <_fflush_r+0x28>
 8006a5a:	46c0      	nop			; (mov r8, r8)
 8006a5c:	08006eb0 	.word	0x08006eb0
 8006a60:	08006ed0 	.word	0x08006ed0
 8006a64:	08006e90 	.word	0x08006e90

08006a68 <fiprintf>:
 8006a68:	b40e      	push	{r1, r2, r3}
 8006a6a:	b503      	push	{r0, r1, lr}
 8006a6c:	0001      	movs	r1, r0
 8006a6e:	ab03      	add	r3, sp, #12
 8006a70:	4804      	ldr	r0, [pc, #16]	; (8006a84 <fiprintf+0x1c>)
 8006a72:	cb04      	ldmia	r3!, {r2}
 8006a74:	6800      	ldr	r0, [r0, #0]
 8006a76:	9301      	str	r3, [sp, #4]
 8006a78:	f7ff fc80 	bl	800637c <_vfiprintf_r>
 8006a7c:	b002      	add	sp, #8
 8006a7e:	bc08      	pop	{r3}
 8006a80:	b003      	add	sp, #12
 8006a82:	4718      	bx	r3
 8006a84:	2000000c 	.word	0x2000000c

08006a88 <_lseek_r>:
 8006a88:	b570      	push	{r4, r5, r6, lr}
 8006a8a:	0004      	movs	r4, r0
 8006a8c:	0008      	movs	r0, r1
 8006a8e:	0011      	movs	r1, r2
 8006a90:	001a      	movs	r2, r3
 8006a92:	2300      	movs	r3, #0
 8006a94:	4d05      	ldr	r5, [pc, #20]	; (8006aac <_lseek_r+0x24>)
 8006a96:	602b      	str	r3, [r5, #0]
 8006a98:	f7fb fe7f 	bl	800279a <_lseek>
 8006a9c:	1c43      	adds	r3, r0, #1
 8006a9e:	d103      	bne.n	8006aa8 <_lseek_r+0x20>
 8006aa0:	682b      	ldr	r3, [r5, #0]
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	d000      	beq.n	8006aa8 <_lseek_r+0x20>
 8006aa6:	6023      	str	r3, [r4, #0]
 8006aa8:	bd70      	pop	{r4, r5, r6, pc}
 8006aaa:	46c0      	nop			; (mov r8, r8)
 8006aac:	20000278 	.word	0x20000278

08006ab0 <__swhatbuf_r>:
 8006ab0:	b570      	push	{r4, r5, r6, lr}
 8006ab2:	000e      	movs	r6, r1
 8006ab4:	001d      	movs	r5, r3
 8006ab6:	230e      	movs	r3, #14
 8006ab8:	5ec9      	ldrsh	r1, [r1, r3]
 8006aba:	0014      	movs	r4, r2
 8006abc:	b096      	sub	sp, #88	; 0x58
 8006abe:	2900      	cmp	r1, #0
 8006ac0:	da08      	bge.n	8006ad4 <__swhatbuf_r+0x24>
 8006ac2:	220c      	movs	r2, #12
 8006ac4:	5eb3      	ldrsh	r3, [r6, r2]
 8006ac6:	2200      	movs	r2, #0
 8006ac8:	602a      	str	r2, [r5, #0]
 8006aca:	061b      	lsls	r3, r3, #24
 8006acc:	d411      	bmi.n	8006af2 <__swhatbuf_r+0x42>
 8006ace:	2380      	movs	r3, #128	; 0x80
 8006ad0:	00db      	lsls	r3, r3, #3
 8006ad2:	e00f      	b.n	8006af4 <__swhatbuf_r+0x44>
 8006ad4:	466a      	mov	r2, sp
 8006ad6:	f000 f8a1 	bl	8006c1c <_fstat_r>
 8006ada:	2800      	cmp	r0, #0
 8006adc:	dbf1      	blt.n	8006ac2 <__swhatbuf_r+0x12>
 8006ade:	23f0      	movs	r3, #240	; 0xf0
 8006ae0:	9901      	ldr	r1, [sp, #4]
 8006ae2:	021b      	lsls	r3, r3, #8
 8006ae4:	4019      	ands	r1, r3
 8006ae6:	4b05      	ldr	r3, [pc, #20]	; (8006afc <__swhatbuf_r+0x4c>)
 8006ae8:	18c9      	adds	r1, r1, r3
 8006aea:	424b      	negs	r3, r1
 8006aec:	4159      	adcs	r1, r3
 8006aee:	6029      	str	r1, [r5, #0]
 8006af0:	e7ed      	b.n	8006ace <__swhatbuf_r+0x1e>
 8006af2:	2340      	movs	r3, #64	; 0x40
 8006af4:	2000      	movs	r0, #0
 8006af6:	6023      	str	r3, [r4, #0]
 8006af8:	b016      	add	sp, #88	; 0x58
 8006afa:	bd70      	pop	{r4, r5, r6, pc}
 8006afc:	ffffe000 	.word	0xffffe000

08006b00 <__smakebuf_r>:
 8006b00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b02:	2602      	movs	r6, #2
 8006b04:	898b      	ldrh	r3, [r1, #12]
 8006b06:	0005      	movs	r5, r0
 8006b08:	000c      	movs	r4, r1
 8006b0a:	4233      	tst	r3, r6
 8006b0c:	d006      	beq.n	8006b1c <__smakebuf_r+0x1c>
 8006b0e:	0023      	movs	r3, r4
 8006b10:	3347      	adds	r3, #71	; 0x47
 8006b12:	6023      	str	r3, [r4, #0]
 8006b14:	6123      	str	r3, [r4, #16]
 8006b16:	2301      	movs	r3, #1
 8006b18:	6163      	str	r3, [r4, #20]
 8006b1a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8006b1c:	466a      	mov	r2, sp
 8006b1e:	ab01      	add	r3, sp, #4
 8006b20:	f7ff ffc6 	bl	8006ab0 <__swhatbuf_r>
 8006b24:	9900      	ldr	r1, [sp, #0]
 8006b26:	0007      	movs	r7, r0
 8006b28:	0028      	movs	r0, r5
 8006b2a:	f7ff fb89 	bl	8006240 <_malloc_r>
 8006b2e:	2800      	cmp	r0, #0
 8006b30:	d108      	bne.n	8006b44 <__smakebuf_r+0x44>
 8006b32:	220c      	movs	r2, #12
 8006b34:	5ea3      	ldrsh	r3, [r4, r2]
 8006b36:	059a      	lsls	r2, r3, #22
 8006b38:	d4ef      	bmi.n	8006b1a <__smakebuf_r+0x1a>
 8006b3a:	2203      	movs	r2, #3
 8006b3c:	4393      	bics	r3, r2
 8006b3e:	431e      	orrs	r6, r3
 8006b40:	81a6      	strh	r6, [r4, #12]
 8006b42:	e7e4      	b.n	8006b0e <__smakebuf_r+0xe>
 8006b44:	4b0f      	ldr	r3, [pc, #60]	; (8006b84 <__smakebuf_r+0x84>)
 8006b46:	62ab      	str	r3, [r5, #40]	; 0x28
 8006b48:	2380      	movs	r3, #128	; 0x80
 8006b4a:	89a2      	ldrh	r2, [r4, #12]
 8006b4c:	6020      	str	r0, [r4, #0]
 8006b4e:	4313      	orrs	r3, r2
 8006b50:	81a3      	strh	r3, [r4, #12]
 8006b52:	9b00      	ldr	r3, [sp, #0]
 8006b54:	6120      	str	r0, [r4, #16]
 8006b56:	6163      	str	r3, [r4, #20]
 8006b58:	9b01      	ldr	r3, [sp, #4]
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d00d      	beq.n	8006b7a <__smakebuf_r+0x7a>
 8006b5e:	0028      	movs	r0, r5
 8006b60:	230e      	movs	r3, #14
 8006b62:	5ee1      	ldrsh	r1, [r4, r3]
 8006b64:	f000 f86c 	bl	8006c40 <_isatty_r>
 8006b68:	2800      	cmp	r0, #0
 8006b6a:	d006      	beq.n	8006b7a <__smakebuf_r+0x7a>
 8006b6c:	2203      	movs	r2, #3
 8006b6e:	89a3      	ldrh	r3, [r4, #12]
 8006b70:	4393      	bics	r3, r2
 8006b72:	001a      	movs	r2, r3
 8006b74:	2301      	movs	r3, #1
 8006b76:	4313      	orrs	r3, r2
 8006b78:	81a3      	strh	r3, [r4, #12]
 8006b7a:	89a0      	ldrh	r0, [r4, #12]
 8006b7c:	4307      	orrs	r7, r0
 8006b7e:	81a7      	strh	r7, [r4, #12]
 8006b80:	e7cb      	b.n	8006b1a <__smakebuf_r+0x1a>
 8006b82:	46c0      	nop			; (mov r8, r8)
 8006b84:	080057d1 	.word	0x080057d1

08006b88 <__ascii_mbtowc>:
 8006b88:	b082      	sub	sp, #8
 8006b8a:	2900      	cmp	r1, #0
 8006b8c:	d100      	bne.n	8006b90 <__ascii_mbtowc+0x8>
 8006b8e:	a901      	add	r1, sp, #4
 8006b90:	1e10      	subs	r0, r2, #0
 8006b92:	d006      	beq.n	8006ba2 <__ascii_mbtowc+0x1a>
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	d006      	beq.n	8006ba6 <__ascii_mbtowc+0x1e>
 8006b98:	7813      	ldrb	r3, [r2, #0]
 8006b9a:	600b      	str	r3, [r1, #0]
 8006b9c:	7810      	ldrb	r0, [r2, #0]
 8006b9e:	1e43      	subs	r3, r0, #1
 8006ba0:	4198      	sbcs	r0, r3
 8006ba2:	b002      	add	sp, #8
 8006ba4:	4770      	bx	lr
 8006ba6:	2002      	movs	r0, #2
 8006ba8:	4240      	negs	r0, r0
 8006baa:	e7fa      	b.n	8006ba2 <__ascii_mbtowc+0x1a>

08006bac <__malloc_lock>:
 8006bac:	b510      	push	{r4, lr}
 8006bae:	4802      	ldr	r0, [pc, #8]	; (8006bb8 <__malloc_lock+0xc>)
 8006bb0:	f7fe fef1 	bl	8005996 <__retarget_lock_acquire_recursive>
 8006bb4:	bd10      	pop	{r4, pc}
 8006bb6:	46c0      	nop			; (mov r8, r8)
 8006bb8:	2000026c 	.word	0x2000026c

08006bbc <__malloc_unlock>:
 8006bbc:	b510      	push	{r4, lr}
 8006bbe:	4802      	ldr	r0, [pc, #8]	; (8006bc8 <__malloc_unlock+0xc>)
 8006bc0:	f7fe feea 	bl	8005998 <__retarget_lock_release_recursive>
 8006bc4:	bd10      	pop	{r4, pc}
 8006bc6:	46c0      	nop			; (mov r8, r8)
 8006bc8:	2000026c 	.word	0x2000026c

08006bcc <_read_r>:
 8006bcc:	b570      	push	{r4, r5, r6, lr}
 8006bce:	0004      	movs	r4, r0
 8006bd0:	0008      	movs	r0, r1
 8006bd2:	0011      	movs	r1, r2
 8006bd4:	001a      	movs	r2, r3
 8006bd6:	2300      	movs	r3, #0
 8006bd8:	4d05      	ldr	r5, [pc, #20]	; (8006bf0 <_read_r+0x24>)
 8006bda:	602b      	str	r3, [r5, #0]
 8006bdc:	f7fb fd83 	bl	80026e6 <_read>
 8006be0:	1c43      	adds	r3, r0, #1
 8006be2:	d103      	bne.n	8006bec <_read_r+0x20>
 8006be4:	682b      	ldr	r3, [r5, #0]
 8006be6:	2b00      	cmp	r3, #0
 8006be8:	d000      	beq.n	8006bec <_read_r+0x20>
 8006bea:	6023      	str	r3, [r4, #0]
 8006bec:	bd70      	pop	{r4, r5, r6, pc}
 8006bee:	46c0      	nop			; (mov r8, r8)
 8006bf0:	20000278 	.word	0x20000278

08006bf4 <__ascii_wctomb>:
 8006bf4:	0003      	movs	r3, r0
 8006bf6:	1e08      	subs	r0, r1, #0
 8006bf8:	d005      	beq.n	8006c06 <__ascii_wctomb+0x12>
 8006bfa:	2aff      	cmp	r2, #255	; 0xff
 8006bfc:	d904      	bls.n	8006c08 <__ascii_wctomb+0x14>
 8006bfe:	228a      	movs	r2, #138	; 0x8a
 8006c00:	2001      	movs	r0, #1
 8006c02:	601a      	str	r2, [r3, #0]
 8006c04:	4240      	negs	r0, r0
 8006c06:	4770      	bx	lr
 8006c08:	2001      	movs	r0, #1
 8006c0a:	700a      	strb	r2, [r1, #0]
 8006c0c:	e7fb      	b.n	8006c06 <__ascii_wctomb+0x12>

08006c0e <abort>:
 8006c0e:	2006      	movs	r0, #6
 8006c10:	b510      	push	{r4, lr}
 8006c12:	f000 f851 	bl	8006cb8 <raise>
 8006c16:	2001      	movs	r0, #1
 8006c18:	f7fb fd59 	bl	80026ce <_exit>

08006c1c <_fstat_r>:
 8006c1c:	2300      	movs	r3, #0
 8006c1e:	b570      	push	{r4, r5, r6, lr}
 8006c20:	4d06      	ldr	r5, [pc, #24]	; (8006c3c <_fstat_r+0x20>)
 8006c22:	0004      	movs	r4, r0
 8006c24:	0008      	movs	r0, r1
 8006c26:	0011      	movs	r1, r2
 8006c28:	602b      	str	r3, [r5, #0]
 8006c2a:	f7fb fd9f 	bl	800276c <_fstat>
 8006c2e:	1c43      	adds	r3, r0, #1
 8006c30:	d103      	bne.n	8006c3a <_fstat_r+0x1e>
 8006c32:	682b      	ldr	r3, [r5, #0]
 8006c34:	2b00      	cmp	r3, #0
 8006c36:	d000      	beq.n	8006c3a <_fstat_r+0x1e>
 8006c38:	6023      	str	r3, [r4, #0]
 8006c3a:	bd70      	pop	{r4, r5, r6, pc}
 8006c3c:	20000278 	.word	0x20000278

08006c40 <_isatty_r>:
 8006c40:	2300      	movs	r3, #0
 8006c42:	b570      	push	{r4, r5, r6, lr}
 8006c44:	4d06      	ldr	r5, [pc, #24]	; (8006c60 <_isatty_r+0x20>)
 8006c46:	0004      	movs	r4, r0
 8006c48:	0008      	movs	r0, r1
 8006c4a:	602b      	str	r3, [r5, #0]
 8006c4c:	f7fb fd9c 	bl	8002788 <_isatty>
 8006c50:	1c43      	adds	r3, r0, #1
 8006c52:	d103      	bne.n	8006c5c <_isatty_r+0x1c>
 8006c54:	682b      	ldr	r3, [r5, #0]
 8006c56:	2b00      	cmp	r3, #0
 8006c58:	d000      	beq.n	8006c5c <_isatty_r+0x1c>
 8006c5a:	6023      	str	r3, [r4, #0]
 8006c5c:	bd70      	pop	{r4, r5, r6, pc}
 8006c5e:	46c0      	nop			; (mov r8, r8)
 8006c60:	20000278 	.word	0x20000278

08006c64 <_raise_r>:
 8006c64:	b570      	push	{r4, r5, r6, lr}
 8006c66:	0004      	movs	r4, r0
 8006c68:	000d      	movs	r5, r1
 8006c6a:	291f      	cmp	r1, #31
 8006c6c:	d904      	bls.n	8006c78 <_raise_r+0x14>
 8006c6e:	2316      	movs	r3, #22
 8006c70:	6003      	str	r3, [r0, #0]
 8006c72:	2001      	movs	r0, #1
 8006c74:	4240      	negs	r0, r0
 8006c76:	bd70      	pop	{r4, r5, r6, pc}
 8006c78:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8006c7a:	2b00      	cmp	r3, #0
 8006c7c:	d004      	beq.n	8006c88 <_raise_r+0x24>
 8006c7e:	008a      	lsls	r2, r1, #2
 8006c80:	189b      	adds	r3, r3, r2
 8006c82:	681a      	ldr	r2, [r3, #0]
 8006c84:	2a00      	cmp	r2, #0
 8006c86:	d108      	bne.n	8006c9a <_raise_r+0x36>
 8006c88:	0020      	movs	r0, r4
 8006c8a:	f000 f831 	bl	8006cf0 <_getpid_r>
 8006c8e:	002a      	movs	r2, r5
 8006c90:	0001      	movs	r1, r0
 8006c92:	0020      	movs	r0, r4
 8006c94:	f000 f81a 	bl	8006ccc <_kill_r>
 8006c98:	e7ed      	b.n	8006c76 <_raise_r+0x12>
 8006c9a:	2000      	movs	r0, #0
 8006c9c:	2a01      	cmp	r2, #1
 8006c9e:	d0ea      	beq.n	8006c76 <_raise_r+0x12>
 8006ca0:	1c51      	adds	r1, r2, #1
 8006ca2:	d103      	bne.n	8006cac <_raise_r+0x48>
 8006ca4:	2316      	movs	r3, #22
 8006ca6:	3001      	adds	r0, #1
 8006ca8:	6023      	str	r3, [r4, #0]
 8006caa:	e7e4      	b.n	8006c76 <_raise_r+0x12>
 8006cac:	2400      	movs	r4, #0
 8006cae:	0028      	movs	r0, r5
 8006cb0:	601c      	str	r4, [r3, #0]
 8006cb2:	4790      	blx	r2
 8006cb4:	0020      	movs	r0, r4
 8006cb6:	e7de      	b.n	8006c76 <_raise_r+0x12>

08006cb8 <raise>:
 8006cb8:	b510      	push	{r4, lr}
 8006cba:	4b03      	ldr	r3, [pc, #12]	; (8006cc8 <raise+0x10>)
 8006cbc:	0001      	movs	r1, r0
 8006cbe:	6818      	ldr	r0, [r3, #0]
 8006cc0:	f7ff ffd0 	bl	8006c64 <_raise_r>
 8006cc4:	bd10      	pop	{r4, pc}
 8006cc6:	46c0      	nop			; (mov r8, r8)
 8006cc8:	2000000c 	.word	0x2000000c

08006ccc <_kill_r>:
 8006ccc:	2300      	movs	r3, #0
 8006cce:	b570      	push	{r4, r5, r6, lr}
 8006cd0:	4d06      	ldr	r5, [pc, #24]	; (8006cec <_kill_r+0x20>)
 8006cd2:	0004      	movs	r4, r0
 8006cd4:	0008      	movs	r0, r1
 8006cd6:	0011      	movs	r1, r2
 8006cd8:	602b      	str	r3, [r5, #0]
 8006cda:	f7fb fce8 	bl	80026ae <_kill>
 8006cde:	1c43      	adds	r3, r0, #1
 8006ce0:	d103      	bne.n	8006cea <_kill_r+0x1e>
 8006ce2:	682b      	ldr	r3, [r5, #0]
 8006ce4:	2b00      	cmp	r3, #0
 8006ce6:	d000      	beq.n	8006cea <_kill_r+0x1e>
 8006ce8:	6023      	str	r3, [r4, #0]
 8006cea:	bd70      	pop	{r4, r5, r6, pc}
 8006cec:	20000278 	.word	0x20000278

08006cf0 <_getpid_r>:
 8006cf0:	b510      	push	{r4, lr}
 8006cf2:	f7fb fcd6 	bl	80026a2 <_getpid>
 8006cf6:	bd10      	pop	{r4, pc}

08006cf8 <_init>:
 8006cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cfa:	46c0      	nop			; (mov r8, r8)
 8006cfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cfe:	bc08      	pop	{r3}
 8006d00:	469e      	mov	lr, r3
 8006d02:	4770      	bx	lr

08006d04 <_fini>:
 8006d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d06:	46c0      	nop			; (mov r8, r8)
 8006d08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006d0a:	bc08      	pop	{r3}
 8006d0c:	469e      	mov	lr, r3
 8006d0e:	4770      	bx	lr
